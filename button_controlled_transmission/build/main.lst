
build/main.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00003570  08000000  0c000000  00010000  2**5
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 Stack         00000800  10000000  10000000  00030000  2**0
                  ALLOC
  2 .ram_code     00000000  10000800  10000800  000205a4  2**0
                  CONTENTS
  3 PSRAM_DATA    00000000  10000800  10000800  000205a4  2**0
                  CONTENTS
  4 PSRAM_BSS     00000000  10000800  10000800  000205a4  2**0
                  CONTENTS
  5 .data         000005a4  20000000  0c003570  00020000  2**3
                  CONTENTS, ALLOC, LOAD, DATA
  6 .bss          0000042c  200005a4  0c003b14  000205a4  2**2
                  ALLOC
  7 .no_init      00000014  2000ffc0  2000ffc0  0002ffc0  2**2
                  ALLOC
  8 DSRAM2_DATA   00000000  30000000  30000000  000205a4  2**0
                  CONTENTS
  9 DSRAM2_BSS    00000000  30000000  30000000  000205a4  2**0
                  CONTENTS
 10 .debug_aranges 00000130  00000000  00000000  000205a8  2**3
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_info   00005259  00000000  00000000  000206d8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_abbrev 00000b0d  00000000  00000000  00025931  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_line   000013e7  00000000  00000000  0002643e  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_frame  0000050c  00000000  00000000  00027828  2**2
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_str    00076267  00000000  00000000  00027d34  2**0
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_loc    000005c0  00000000  00000000  0009df9b  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_ranges 000000c0  00000000  00000000  0009e55b  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .build_attributes 000002f2  00000000  00000000  0009e61b  2**0
                  CONTENTS, READONLY
 19 .debug_macro  000189de  00000000  00000000  0009e90d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

08000000 <__Vectors>:
 8000000:	00 08 00 10 01 02 00 08 b1 02 00 08 b1 02 00 08     ................
 8000010:	b1 02 00 08 b1 02 00 08 b1 02 00 08 00 00 00 00     ................
	...
 800002c:	b1 02 00 08 b1 02 00 08 00 00 00 00 b1 02 00 08     ................
 800003c:	45 26 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     E&..............
 800004c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800005c:	b1 02 00 08 b1 02 00 08 00 00 00 00 00 00 00 00     ................
 800006c:	00 00 00 00 b1 02 00 08 00 00 00 00 b1 02 00 08     ................
 800007c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800008c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800009c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000ac:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000bc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000cc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000dc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000ec:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80000fc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800010c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800011c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800012c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800013c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800014c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800015c:	b1 02 00 08 00 00 00 00 00 00 00 00 00 00 00 00     ................
 800016c:	00 00 00 00 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800017c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800018c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 800019c:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80001ac:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80001bc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80001cc:	b1 02 00 08 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80001dc:	00 00 00 00 b1 02 00 08 b1 02 00 08 b1 02 00 08     ................
 80001ec:	b1 02 00 08 b1 02 00 08 00 00 00 00 b1 02 00 08     ................
 80001fc:	00 00 00 00                                         ....

08000200 <Reset_Handler>:
/* Reset Handler */
    .thumb_func
    .globl  Reset_Handler
    .type   Reset_Handler, %function
Reset_Handler:
    ldr sp,=__initial_sp
 8000200:	f8df d08c 	ldr.w	sp, [pc, #140]	; 8000290 <__zero_table_end__>

#ifndef __SKIP_SYSTEM_INIT
    ldr  r0, =SystemInit
 8000204:	4823      	ldr	r0, [pc, #140]	; (8000294 <__zero_table_end__+0x4>)
    blx  r0
 8000206:	4780      	blx	r0
 *    offset 4: VMA of start of a section to copy to
 *    offset 8: size of the section to copy. Must be multiply of 4
 *
 *  All addresses must be aligned to 4 bytes boundary.
 */
	ldr	r4, =__copy_table_start__
 8000208:	4c23      	ldr	r4, [pc, #140]	; (8000298 <__zero_table_end__+0x8>)
	ldr	r5, =__copy_table_end__
 800020a:	4d24      	ldr	r5, [pc, #144]	; (800029c <__zero_table_end__+0xc>)

.L_loop0:
	cmp	r4, r5
 800020c:	42ac      	cmp	r4, r5
	bge	.L_loop0_done
 800020e:	da09      	bge.n	8000224 <Reset_Handler+0x24>
	ldr	r1, [r4]
 8000210:	6821      	ldr	r1, [r4, #0]
	ldr	r2, [r4, #4]
 8000212:	6862      	ldr	r2, [r4, #4]
	ldr	r3, [r4, #8]
 8000214:	68a3      	ldr	r3, [r4, #8]

.L_loop0_0:
	subs	r3, #4
 8000216:	3b04      	subs	r3, #4
	ittt	ge
 8000218:	bfa2      	ittt	ge
	ldrge	r0, [r1, r3]
 800021a:	58c8      	ldrge	r0, [r1, r3]
	strge	r0, [r2, r3]
 800021c:	50d0      	strge	r0, [r2, r3]
	bge	.L_loop0_0
 800021e:	e7fa      	bge.n	8000216 <Reset_Handler+0x16>

	adds	r4, #12
 8000220:	340c      	adds	r4, #12
	b	.L_loop0
 8000222:	e7f3      	b.n	800020c <Reset_Handler+0xc>
 *    offset 4: Size of this BSS section. Must be multiply of 4
 *
 *  Define __SKIP_BSS_CLEAR to disable zeroing uninitialzed data in startup.
 */    
#ifndef __SKIP_BSS_CLEAR
	ldr	r3, =__zero_table_start__
 8000224:	4b1e      	ldr	r3, [pc, #120]	; (80002a0 <__zero_table_end__+0x10>)
	ldr	r4, =__zero_table_end__
 8000226:	4c1f      	ldr	r4, [pc, #124]	; (80002a4 <__zero_table_end__+0x14>)

.L_loop2:
	cmp	r3, r4
 8000228:	42a3      	cmp	r3, r4
	bge	.L_loop2_done
 800022a:	da08      	bge.n	800023e <Reset_Handler+0x3e>
	ldr	r1, [r3]
 800022c:	6819      	ldr	r1, [r3, #0]
	ldr	r2, [r3, #4]
 800022e:	685a      	ldr	r2, [r3, #4]
	movs	r0, 0
 8000230:	2000      	movs	r0, #0

.L_loop2_0:
	subs	r2, #4
 8000232:	3a04      	subs	r2, #4
	itt	ge
 8000234:	bfa4      	itt	ge
	strge	r0, [r1, r2]
 8000236:	5088      	strge	r0, [r1, r2]
	bge	.L_loop2_0
 8000238:	e7fb      	bge.n	8000232 <Reset_Handler+0x32>

	adds	r3, #8
 800023a:	3308      	adds	r3, #8
	b	.L_loop2
 800023c:	e7f4      	b.n	8000228 <Reset_Handler+0x28>
.L_loop2_done:    
#endif /* __SKIP_BSS_CLEAR */
   
#ifndef __SKIP_LIBC_INIT_ARRAY
    ldr  r0, =__libc_init_array
 800023e:	481a      	ldr	r0, [pc, #104]	; (80002a8 <__zero_table_end__+0x18>)
    blx  r0
 8000240:	4780      	blx	r0
#endif

    ldr  r0, =main
 8000242:	481a      	ldr	r0, [pc, #104]	; (80002ac <__zero_table_end__+0x1c>)
    blx  r0
 8000244:	4780      	blx	r0
	...

08000248 <__copy_table_start__>:
 8000248:	0c003570 	.word	0x0c003570
 800024c:	20000000 	.word	0x20000000
 8000250:	000005a4 	.word	0x000005a4
 8000254:	0c003b14 	.word	0x0c003b14
 8000258:	30000000 	.word	0x30000000
 800025c:	00000000 	.word	0x00000000
 8000260:	0c003570 	.word	0x0c003570
 8000264:	10000800 	.word	0x10000800
 8000268:	00000000 	.word	0x00000000
 800026c:	0c003570 	.word	0x0c003570
 8000270:	10000800 	.word	0x10000800
 8000274:	00000000 	.word	0x00000000

08000278 <__copy_table_end__>:
 8000278:	200005a4 	.word	0x200005a4
 800027c:	00000428 	.word	0x00000428
 8000280:	30000000 	.word	0x30000000
 8000284:	00000000 	.word	0x00000000
 8000288:	10000800 	.word	0x10000800
 800028c:	00000000 	.word	0x00000000

08000290 <__zero_table_end__>:
    ldr sp,=__initial_sp
 8000290:	10000800 	.word	0x10000800
    ldr  r0, =SystemInit
 8000294:	08002b09 	.word	0x08002b09
	ldr	r4, =__copy_table_start__
 8000298:	08000248 	.word	0x08000248
	ldr	r5, =__copy_table_end__
 800029c:	08000278 	.word	0x08000278
	ldr	r3, =__zero_table_start__
 80002a0:	08000278 	.word	0x08000278
	ldr	r4, =__zero_table_end__
 80002a4:	08000290 	.word	0x08000290
    ldr  r0, =__libc_init_array
 80002a8:	08002f11 	.word	0x08002f11
    ldr  r0, =main
 80002ac:	080003b9 	.word	0x080003b9

080002b0 <BusFault_Handler>:
	.align	1
    .thumb_func
    .weak Default_Handler
    .type Default_Handler, %function
Default_Handler:
    b .
 80002b0:	e7fe      	b.n	80002b0 <BusFault_Handler>
	...

080002b4 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 80002b4:	b480      	push	{r7}
 80002b6:	b083      	sub	sp, #12
 80002b8:	af00      	add	r7, sp, #0
 80002ba:	4603      	mov	r3, r0
 80002bc:	6039      	str	r1, [r7, #0]
 80002be:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 80002c0:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002c4:	2b00      	cmp	r3, #0
 80002c6:	db0a      	blt.n	80002de <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80002c8:	683b      	ldr	r3, [r7, #0]
 80002ca:	b2da      	uxtb	r2, r3
 80002cc:	490c      	ldr	r1, [pc, #48]	; (8000300 <__NVIC_SetPriority+0x4c>)
 80002ce:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80002d2:	0092      	lsls	r2, r2, #2
 80002d4:	b2d2      	uxtb	r2, r2
 80002d6:	440b      	add	r3, r1
 80002d8:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 80002dc:	e00a      	b.n	80002f4 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 80002de:	683b      	ldr	r3, [r7, #0]
 80002e0:	b2da      	uxtb	r2, r3
 80002e2:	4908      	ldr	r1, [pc, #32]	; (8000304 <__NVIC_SetPriority+0x50>)
 80002e4:	79fb      	ldrb	r3, [r7, #7]
 80002e6:	f003 030f 	and.w	r3, r3, #15
 80002ea:	3b04      	subs	r3, #4
 80002ec:	0092      	lsls	r2, r2, #2
 80002ee:	b2d2      	uxtb	r2, r2
 80002f0:	440b      	add	r3, r1
 80002f2:	761a      	strb	r2, [r3, #24]
}
 80002f4:	bf00      	nop
 80002f6:	370c      	adds	r7, #12
 80002f8:	46bd      	mov	sp, r7
 80002fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80002fe:	4770      	bx	lr
 8000300:	e000e100 	.word	0xe000e100
 8000304:	e000ed00 	.word	0xe000ed00

08000308 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8000308:	b580      	push	{r7, lr}
 800030a:	b082      	sub	sp, #8
 800030c:	af00      	add	r7, sp, #0
 800030e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8000310:	687b      	ldr	r3, [r7, #4]
 8000312:	3b01      	subs	r3, #1
 8000314:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 8000318:	d301      	bcc.n	800031e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800031a:	2301      	movs	r3, #1
 800031c:	e00f      	b.n	800033e <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800031e:	4a0a      	ldr	r2, [pc, #40]	; (8000348 <SysTick_Config+0x40>)
 8000320:	687b      	ldr	r3, [r7, #4]
 8000322:	3b01      	subs	r3, #1
 8000324:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8000326:	213f      	movs	r1, #63	; 0x3f
 8000328:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 800032c:	f7ff ffc2 	bl	80002b4 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8000330:	4b05      	ldr	r3, [pc, #20]	; (8000348 <SysTick_Config+0x40>)
 8000332:	2200      	movs	r2, #0
 8000334:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8000336:	4b04      	ldr	r3, [pc, #16]	; (8000348 <SysTick_Config+0x40>)
 8000338:	2207      	movs	r2, #7
 800033a:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800033c:	2300      	movs	r3, #0
}
 800033e:	4618      	mov	r0, r3
 8000340:	3708      	adds	r7, #8
 8000342:	46bd      	mov	sp, r7
 8000344:	bd80      	pop	{r7, pc}
 8000346:	bf00      	nop
 8000348:	e000e010 	.word	0xe000e010

0800034c <XMC_GPIO_SetOutputHigh>:
 * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value of 0.
 *
 */

__STATIC_INLINE void XMC_GPIO_SetOutputHigh(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
 800034c:	b480      	push	{r7}
 800034e:	b083      	sub	sp, #12
 8000350:	af00      	add	r7, sp, #0
 8000352:	6078      	str	r0, [r7, #4]
 8000354:	460b      	mov	r3, r1
 8000356:	70fb      	strb	r3, [r7, #3]
  XMC_ASSERT("XMC_GPIO_SetOutputHigh: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));

  port->OMR = (uint32_t)0x1U << pin;
 8000358:	78fb      	ldrb	r3, [r7, #3]
 800035a:	2201      	movs	r2, #1
 800035c:	409a      	lsls	r2, r3
 800035e:	687b      	ldr	r3, [r7, #4]
 8000360:	605a      	str	r2, [r3, #4]
}
 8000362:	bf00      	nop
 8000364:	370c      	adds	r7, #12
 8000366:	46bd      	mov	sp, r7
 8000368:	f85d 7b04 	ldr.w	r7, [sp], #4
 800036c:	4770      	bx	lr

0800036e <XMC_GPIO_SetOutputLow>:
 * Register Pn_OMR is virtual and does not contain any flip-flop. A read action delivers the value of 0.\n
 *
 */

__STATIC_INLINE void XMC_GPIO_SetOutputLow(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
 800036e:	b480      	push	{r7}
 8000370:	b083      	sub	sp, #12
 8000372:	af00      	add	r7, sp, #0
 8000374:	6078      	str	r0, [r7, #4]
 8000376:	460b      	mov	r3, r1
 8000378:	70fb      	strb	r3, [r7, #3]
  XMC_ASSERT("XMC_GPIO_SetOutputLow: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));

  port->OMR = 0x10000U << pin;
 800037a:	78fb      	ldrb	r3, [r7, #3]
 800037c:	f44f 3280 	mov.w	r2, #65536	; 0x10000
 8000380:	409a      	lsls	r2, r3
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	605a      	str	r2, [r3, #4]
}
 8000386:	bf00      	nop
 8000388:	370c      	adds	r7, #12
 800038a:	46bd      	mov	sp, r7
 800038c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000390:	4770      	bx	lr

08000392 <XMC_GPIO_GetInput>:
 * Prior to this api, user has to configure port pin to input mode using XMC_GPIO_SetMode().
 *
 */

__STATIC_INLINE uint32_t XMC_GPIO_GetInput(XMC_GPIO_PORT_t *const port, const uint8_t pin)
{
 8000392:	b480      	push	{r7}
 8000394:	b083      	sub	sp, #12
 8000396:	af00      	add	r7, sp, #0
 8000398:	6078      	str	r0, [r7, #4]
 800039a:	460b      	mov	r3, r1
 800039c:	70fb      	strb	r3, [r7, #3]
  XMC_ASSERT("XMC_GPIO_GetInput: Invalid port", XMC_GPIO_CHECK_PORT(port));

  return (((port->IN) >> pin) & 0x1U);
 800039e:	687b      	ldr	r3, [r7, #4]
 80003a0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80003a2:	78fb      	ldrb	r3, [r7, #3]
 80003a4:	fa22 f303 	lsr.w	r3, r2, r3
 80003a8:	f003 0301 	and.w	r3, r3, #1
}
 80003ac:	4618      	mov	r0, r3
 80003ae:	370c      	adds	r7, #12
 80003b0:	46bd      	mov	sp, r7
 80003b2:	f85d 7b04 	ldr.w	r7, [sp], #4
 80003b6:	4770      	bx	lr

080003b8 <main>:
      {.mode=XMC_GPIO_MODE_OUTPUT_PUSH_PULL,\
       .output_level=XMC_GPIO_OUTPUT_LEVEL_LOW,\
       .output_strength=XMC_GPIO_OUTPUT_STRENGTH_STRONG_SHARP_EDGE};

int main(void)
{
 80003b8:	b580      	push	{r7, lr}
 80003ba:	af00      	add	r7, sp, #0
  SysTick_Config(12000000);
 80003bc:	48a9      	ldr	r0, [pc, #676]	; (8000664 <main+0x2ac>)
 80003be:	f7ff ffa3 	bl	8000308 <SysTick_Config>
  
  XMC_GPIO_Init(P1_14,  &Button_config);
 80003c2:	4aa9      	ldr	r2, [pc, #676]	; (8000668 <main+0x2b0>)
 80003c4:	210e      	movs	r1, #14
 80003c6:	48a9      	ldr	r0, [pc, #676]	; (800066c <main+0x2b4>)
 80003c8:	f002 faa4 	bl	8002914 <XMC_GPIO_Init>
  XMC_GPIO_Init(P1_15,  &Button_config);
 80003cc:	4aa6      	ldr	r2, [pc, #664]	; (8000668 <main+0x2b0>)
 80003ce:	210f      	movs	r1, #15
 80003d0:	48a6      	ldr	r0, [pc, #664]	; (800066c <main+0x2b4>)
 80003d2:	f002 fa9f 	bl	8002914 <XMC_GPIO_Init>
  XMC_GPIO_Init(P1_1, &LED_config);
 80003d6:	4aa6      	ldr	r2, [pc, #664]	; (8000670 <main+0x2b8>)
 80003d8:	2101      	movs	r1, #1
 80003da:	48a4      	ldr	r0, [pc, #656]	; (800066c <main+0x2b4>)
 80003dc:	f002 fa9a 	bl	8002914 <XMC_GPIO_Init>

  strcpy(str,strlwr(str));
 80003e0:	48a4      	ldr	r0, [pc, #656]	; (8000674 <main+0x2bc>)
 80003e2:	f002 fe17 	bl	8003014 <strlwr>
 80003e6:	4603      	mov	r3, r0
 80003e8:	4619      	mov	r1, r3
 80003ea:	48a2      	ldr	r0, [pc, #648]	; (8000674 <main+0x2bc>)
 80003ec:	f002 fdb4 	bl	8002f58 <strcpy>

  for(i=0;str[i]!='\0';++i)
 80003f0:	4ba1      	ldr	r3, [pc, #644]	; (8000678 <main+0x2c0>)
 80003f2:	2200      	movs	r2, #0
 80003f4:	801a      	strh	r2, [r3, #0]
 80003f6:	f001 bb55 	b.w	8001aa4 <main+0x16ec>
  {
    switch(str[i])
 80003fa:	4b9f      	ldr	r3, [pc, #636]	; (8000678 <main+0x2c0>)
 80003fc:	881b      	ldrh	r3, [r3, #0]
 80003fe:	461a      	mov	r2, r3
 8000400:	4b9c      	ldr	r3, [pc, #624]	; (8000674 <main+0x2bc>)
 8000402:	5c9b      	ldrb	r3, [r3, r2]
 8000404:	3b20      	subs	r3, #32
 8000406:	2b5a      	cmp	r3, #90	; 0x5a
 8000408:	f201 8325 	bhi.w	8001a56 <main+0x169e>
 800040c:	a201      	add	r2, pc, #4	; (adr r2, 8000414 <main+0x5c>)
 800040e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8000412:	bf00      	nop
 8000414:	080019fd 	.word	0x080019fd
 8000418:	08001a57 	.word	0x08001a57
 800041c:	08001a57 	.word	0x08001a57
 8000420:	08001a57 	.word	0x08001a57
 8000424:	08001a57 	.word	0x08001a57
 8000428:	08001a57 	.word	0x08001a57
 800042c:	08001a57 	.word	0x08001a57
 8000430:	08001a57 	.word	0x08001a57
 8000434:	08001a57 	.word	0x08001a57
 8000438:	08001a57 	.word	0x08001a57
 800043c:	08001a57 	.word	0x08001a57
 8000440:	08001a57 	.word	0x08001a57
 8000444:	08001a57 	.word	0x08001a57
 8000448:	08001a57 	.word	0x08001a57
 800044c:	08001a57 	.word	0x08001a57
 8000450:	08001a57 	.word	0x08001a57
 8000454:	08001215 	.word	0x08001215
 8000458:	080012dd 	.word	0x080012dd
 800045c:	080013a5 	.word	0x080013a5
 8000460:	08001475 	.word	0x08001475
 8000464:	0800153d 	.word	0x0800153d
 8000468:	08001605 	.word	0x08001605
 800046c:	080016d5 	.word	0x080016d5
 8000470:	0800179d 	.word	0x0800179d
 8000474:	08001865 	.word	0x08001865
 8000478:	08001935 	.word	0x08001935
 800047c:	08001a57 	.word	0x08001a57
 8000480:	08001a57 	.word	0x08001a57
 8000484:	08001a57 	.word	0x08001a57
 8000488:	08001a57 	.word	0x08001a57
 800048c:	08001a57 	.word	0x08001a57
 8000490:	08001a57 	.word	0x08001a57
 8000494:	08001a57 	.word	0x08001a57
 8000498:	08001a57 	.word	0x08001a57
 800049c:	08001a57 	.word	0x08001a57
 80004a0:	08001a57 	.word	0x08001a57
 80004a4:	08001a57 	.word	0x08001a57
 80004a8:	08001a57 	.word	0x08001a57
 80004ac:	08001a57 	.word	0x08001a57
 80004b0:	08001a57 	.word	0x08001a57
 80004b4:	08001a57 	.word	0x08001a57
 80004b8:	08001a57 	.word	0x08001a57
 80004bc:	08001a57 	.word	0x08001a57
 80004c0:	08001a57 	.word	0x08001a57
 80004c4:	08001a57 	.word	0x08001a57
 80004c8:	08001a57 	.word	0x08001a57
 80004cc:	08001a57 	.word	0x08001a57
 80004d0:	08001a57 	.word	0x08001a57
 80004d4:	08001a57 	.word	0x08001a57
 80004d8:	08001a57 	.word	0x08001a57
 80004dc:	08001a57 	.word	0x08001a57
 80004e0:	08001a57 	.word	0x08001a57
 80004e4:	08001a57 	.word	0x08001a57
 80004e8:	08001a57 	.word	0x08001a57
 80004ec:	08001a57 	.word	0x08001a57
 80004f0:	08001a57 	.word	0x08001a57
 80004f4:	08001a57 	.word	0x08001a57
 80004f8:	08001a57 	.word	0x08001a57
 80004fc:	08001a57 	.word	0x08001a57
 8000500:	08001a57 	.word	0x08001a57
 8000504:	08001a57 	.word	0x08001a57
 8000508:	08001a57 	.word	0x08001a57
 800050c:	08001a57 	.word	0x08001a57
 8000510:	08001a57 	.word	0x08001a57
 8000514:	08001a57 	.word	0x08001a57
 8000518:	08000581 	.word	0x08000581
 800051c:	080005c7 	.word	0x080005c7
 8000520:	08000685 	.word	0x08000685
 8000524:	08000723 	.word	0x08000723
 8000528:	08000795 	.word	0x08000795
 800052c:	080007af 	.word	0x080007af
 8000530:	0800084d 	.word	0x0800084d
 8000534:	080008c9 	.word	0x080008c9
 8000538:	08000967 	.word	0x08000967
 800053c:	080009ad 	.word	0x080009ad
 8000540:	08000a4b 	.word	0x08000a4b
 8000544:	08000abd 	.word	0x08000abd
 8000548:	08000b65 	.word	0x08000b65
 800054c:	08000bab 	.word	0x08000bab
 8000550:	08000bf1 	.word	0x08000bf1
 8000554:	08000c63 	.word	0x08000c63
 8000558:	08000d01 	.word	0x08000d01
 800055c:	08000da9 	.word	0x08000da9
 8000560:	08000e1b 	.word	0x08000e1b
 8000564:	08000e8d 	.word	0x08000e8d
 8000568:	08000ea7 	.word	0x08000ea7
 800056c:	08000f19 	.word	0x08000f19
 8000570:	08000fb7 	.word	0x08000fb7
 8000574:	08001031 	.word	0x08001031
 8000578:	080010cf 	.word	0x080010cf
 800057c:	0800116d 	.word	0x0800116d
    {
      case 'a': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8000580:	4b3e      	ldr	r3, [pc, #248]	; (800067c <main+0x2c4>)
 8000582:	881b      	ldrh	r3, [r3, #0]
 8000584:	1c5a      	adds	r2, r3, #1
 8000586:	b291      	uxth	r1, r2
 8000588:	4a3c      	ldr	r2, [pc, #240]	; (800067c <main+0x2c4>)
 800058a:	8011      	strh	r1, [r2, #0]
 800058c:	461a      	mov	r2, r3
 800058e:	4b3c      	ldr	r3, [pc, #240]	; (8000680 <main+0x2c8>)
 8000590:	2101      	movs	r1, #1
 8000592:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000596:	4b39      	ldr	r3, [pc, #228]	; (800067c <main+0x2c4>)
 8000598:	881b      	ldrh	r3, [r3, #0]
 800059a:	1c5a      	adds	r2, r3, #1
 800059c:	b291      	uxth	r1, r2
 800059e:	4a37      	ldr	r2, [pc, #220]	; (800067c <main+0x2c4>)
 80005a0:	8011      	strh	r1, [r2, #0]
 80005a2:	461a      	mov	r2, r3
 80005a4:	4b36      	ldr	r3, [pc, #216]	; (8000680 <main+0x2c8>)
 80005a6:	2100      	movs	r1, #0
 80005a8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80005ac:	4b33      	ldr	r3, [pc, #204]	; (800067c <main+0x2c4>)
 80005ae:	881b      	ldrh	r3, [r3, #0]
 80005b0:	1c5a      	adds	r2, r3, #1
 80005b2:	b291      	uxth	r1, r2
 80005b4:	4a31      	ldr	r2, [pc, #196]	; (800067c <main+0x2c4>)
 80005b6:	8011      	strh	r1, [r2, #0]
 80005b8:	461a      	mov	r2, r3
 80005ba:	4b31      	ldr	r3, [pc, #196]	; (8000680 <main+0x2c8>)
 80005bc:	2103      	movs	r1, #3
 80005be:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80005c2:	f001 ba48 	b.w	8001a56 <main+0x169e>
      case 'b': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 80005c6:	4b2d      	ldr	r3, [pc, #180]	; (800067c <main+0x2c4>)
 80005c8:	881b      	ldrh	r3, [r3, #0]
 80005ca:	1c5a      	adds	r2, r3, #1
 80005cc:	b291      	uxth	r1, r2
 80005ce:	4a2b      	ldr	r2, [pc, #172]	; (800067c <main+0x2c4>)
 80005d0:	8011      	strh	r1, [r2, #0]
 80005d2:	461a      	mov	r2, r3
 80005d4:	4b2a      	ldr	r3, [pc, #168]	; (8000680 <main+0x2c8>)
 80005d6:	2103      	movs	r1, #3
 80005d8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80005dc:	4b27      	ldr	r3, [pc, #156]	; (800067c <main+0x2c4>)
 80005de:	881b      	ldrh	r3, [r3, #0]
 80005e0:	1c5a      	adds	r2, r3, #1
 80005e2:	b291      	uxth	r1, r2
 80005e4:	4a25      	ldr	r2, [pc, #148]	; (800067c <main+0x2c4>)
 80005e6:	8011      	strh	r1, [r2, #0]
 80005e8:	461a      	mov	r2, r3
 80005ea:	4b25      	ldr	r3, [pc, #148]	; (8000680 <main+0x2c8>)
 80005ec:	2100      	movs	r1, #0
 80005ee:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80005f2:	4b22      	ldr	r3, [pc, #136]	; (800067c <main+0x2c4>)
 80005f4:	881b      	ldrh	r3, [r3, #0]
 80005f6:	1c5a      	adds	r2, r3, #1
 80005f8:	b291      	uxth	r1, r2
 80005fa:	4a20      	ldr	r2, [pc, #128]	; (800067c <main+0x2c4>)
 80005fc:	8011      	strh	r1, [r2, #0]
 80005fe:	461a      	mov	r2, r3
 8000600:	4b1f      	ldr	r3, [pc, #124]	; (8000680 <main+0x2c8>)
 8000602:	2101      	movs	r1, #1
 8000604:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000608:	4b1c      	ldr	r3, [pc, #112]	; (800067c <main+0x2c4>)
 800060a:	881b      	ldrh	r3, [r3, #0]
 800060c:	1c5a      	adds	r2, r3, #1
 800060e:	b291      	uxth	r1, r2
 8000610:	4a1a      	ldr	r2, [pc, #104]	; (800067c <main+0x2c4>)
 8000612:	8011      	strh	r1, [r2, #0]
 8000614:	461a      	mov	r2, r3
 8000616:	4b1a      	ldr	r3, [pc, #104]	; (8000680 <main+0x2c8>)
 8000618:	2100      	movs	r1, #0
 800061a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800061e:	4b17      	ldr	r3, [pc, #92]	; (800067c <main+0x2c4>)
 8000620:	881b      	ldrh	r3, [r3, #0]
 8000622:	1c5a      	adds	r2, r3, #1
 8000624:	b291      	uxth	r1, r2
 8000626:	4a15      	ldr	r2, [pc, #84]	; (800067c <main+0x2c4>)
 8000628:	8011      	strh	r1, [r2, #0]
 800062a:	461a      	mov	r2, r3
 800062c:	4b14      	ldr	r3, [pc, #80]	; (8000680 <main+0x2c8>)
 800062e:	2101      	movs	r1, #1
 8000630:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000634:	4b11      	ldr	r3, [pc, #68]	; (800067c <main+0x2c4>)
 8000636:	881b      	ldrh	r3, [r3, #0]
 8000638:	1c5a      	adds	r2, r3, #1
 800063a:	b291      	uxth	r1, r2
 800063c:	4a0f      	ldr	r2, [pc, #60]	; (800067c <main+0x2c4>)
 800063e:	8011      	strh	r1, [r2, #0]
 8000640:	461a      	mov	r2, r3
 8000642:	4b0f      	ldr	r3, [pc, #60]	; (8000680 <main+0x2c8>)
 8000644:	2100      	movs	r1, #0
 8000646:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800064a:	4b0c      	ldr	r3, [pc, #48]	; (800067c <main+0x2c4>)
 800064c:	881b      	ldrh	r3, [r3, #0]
 800064e:	1c5a      	adds	r2, r3, #1
 8000650:	b291      	uxth	r1, r2
 8000652:	4a0a      	ldr	r2, [pc, #40]	; (800067c <main+0x2c4>)
 8000654:	8011      	strh	r1, [r2, #0]
 8000656:	461a      	mov	r2, r3
 8000658:	4b09      	ldr	r3, [pc, #36]	; (8000680 <main+0x2c8>)
 800065a:	2101      	movs	r1, #1
 800065c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000660:	f001 b9f9 	b.w	8001a56 <main+0x169e>
 8000664:	00b71b00 	.word	0x00b71b00
 8000668:	0800343c 	.word	0x0800343c
 800066c:	48028100 	.word	0x48028100
 8000670:	08003448 	.word	0x08003448
 8000674:	20000000 	.word	0x20000000
 8000678:	200005a8 	.word	0x200005a8
 800067c:	200005aa 	.word	0x200005aa
 8000680:	200007cc 	.word	0x200007cc
      case 'c': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 8000684:	4b8e      	ldr	r3, [pc, #568]	; (80008c0 <main+0x508>)
 8000686:	881b      	ldrh	r3, [r3, #0]
 8000688:	1c5a      	adds	r2, r3, #1
 800068a:	b291      	uxth	r1, r2
 800068c:	4a8c      	ldr	r2, [pc, #560]	; (80008c0 <main+0x508>)
 800068e:	8011      	strh	r1, [r2, #0]
 8000690:	461a      	mov	r2, r3
 8000692:	4b8c      	ldr	r3, [pc, #560]	; (80008c4 <main+0x50c>)
 8000694:	2103      	movs	r1, #3
 8000696:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800069a:	4b89      	ldr	r3, [pc, #548]	; (80008c0 <main+0x508>)
 800069c:	881b      	ldrh	r3, [r3, #0]
 800069e:	1c5a      	adds	r2, r3, #1
 80006a0:	b291      	uxth	r1, r2
 80006a2:	4a87      	ldr	r2, [pc, #540]	; (80008c0 <main+0x508>)
 80006a4:	8011      	strh	r1, [r2, #0]
 80006a6:	461a      	mov	r2, r3
 80006a8:	4b86      	ldr	r3, [pc, #536]	; (80008c4 <main+0x50c>)
 80006aa:	2100      	movs	r1, #0
 80006ac:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80006b0:	4b83      	ldr	r3, [pc, #524]	; (80008c0 <main+0x508>)
 80006b2:	881b      	ldrh	r3, [r3, #0]
 80006b4:	1c5a      	adds	r2, r3, #1
 80006b6:	b291      	uxth	r1, r2
 80006b8:	4a81      	ldr	r2, [pc, #516]	; (80008c0 <main+0x508>)
 80006ba:	8011      	strh	r1, [r2, #0]
 80006bc:	461a      	mov	r2, r3
 80006be:	4b81      	ldr	r3, [pc, #516]	; (80008c4 <main+0x50c>)
 80006c0:	2101      	movs	r1, #1
 80006c2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80006c6:	4b7e      	ldr	r3, [pc, #504]	; (80008c0 <main+0x508>)
 80006c8:	881b      	ldrh	r3, [r3, #0]
 80006ca:	1c5a      	adds	r2, r3, #1
 80006cc:	b291      	uxth	r1, r2
 80006ce:	4a7c      	ldr	r2, [pc, #496]	; (80008c0 <main+0x508>)
 80006d0:	8011      	strh	r1, [r2, #0]
 80006d2:	461a      	mov	r2, r3
 80006d4:	4b7b      	ldr	r3, [pc, #492]	; (80008c4 <main+0x50c>)
 80006d6:	2100      	movs	r1, #0
 80006d8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80006dc:	4b78      	ldr	r3, [pc, #480]	; (80008c0 <main+0x508>)
 80006de:	881b      	ldrh	r3, [r3, #0]
 80006e0:	1c5a      	adds	r2, r3, #1
 80006e2:	b291      	uxth	r1, r2
 80006e4:	4a76      	ldr	r2, [pc, #472]	; (80008c0 <main+0x508>)
 80006e6:	8011      	strh	r1, [r2, #0]
 80006e8:	461a      	mov	r2, r3
 80006ea:	4b76      	ldr	r3, [pc, #472]	; (80008c4 <main+0x50c>)
 80006ec:	2103      	movs	r1, #3
 80006ee:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80006f2:	4b73      	ldr	r3, [pc, #460]	; (80008c0 <main+0x508>)
 80006f4:	881b      	ldrh	r3, [r3, #0]
 80006f6:	1c5a      	adds	r2, r3, #1
 80006f8:	b291      	uxth	r1, r2
 80006fa:	4a71      	ldr	r2, [pc, #452]	; (80008c0 <main+0x508>)
 80006fc:	8011      	strh	r1, [r2, #0]
 80006fe:	461a      	mov	r2, r3
 8000700:	4b70      	ldr	r3, [pc, #448]	; (80008c4 <main+0x50c>)
 8000702:	2100      	movs	r1, #0
 8000704:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000708:	4b6d      	ldr	r3, [pc, #436]	; (80008c0 <main+0x508>)
 800070a:	881b      	ldrh	r3, [r3, #0]
 800070c:	1c5a      	adds	r2, r3, #1
 800070e:	b291      	uxth	r1, r2
 8000710:	4a6b      	ldr	r2, [pc, #428]	; (80008c0 <main+0x508>)
 8000712:	8011      	strh	r1, [r2, #0]
 8000714:	461a      	mov	r2, r3
 8000716:	4b6b      	ldr	r3, [pc, #428]	; (80008c4 <main+0x50c>)
 8000718:	2101      	movs	r1, #1
 800071a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 800071e:	f001 b99a 	b.w	8001a56 <main+0x169e>
      case 'd': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8000722:	4b67      	ldr	r3, [pc, #412]	; (80008c0 <main+0x508>)
 8000724:	881b      	ldrh	r3, [r3, #0]
 8000726:	1c5a      	adds	r2, r3, #1
 8000728:	b291      	uxth	r1, r2
 800072a:	4a65      	ldr	r2, [pc, #404]	; (80008c0 <main+0x508>)
 800072c:	8011      	strh	r1, [r2, #0]
 800072e:	461a      	mov	r2, r3
 8000730:	4b64      	ldr	r3, [pc, #400]	; (80008c4 <main+0x50c>)
 8000732:	2103      	movs	r1, #3
 8000734:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000738:	4b61      	ldr	r3, [pc, #388]	; (80008c0 <main+0x508>)
 800073a:	881b      	ldrh	r3, [r3, #0]
 800073c:	1c5a      	adds	r2, r3, #1
 800073e:	b291      	uxth	r1, r2
 8000740:	4a5f      	ldr	r2, [pc, #380]	; (80008c0 <main+0x508>)
 8000742:	8011      	strh	r1, [r2, #0]
 8000744:	461a      	mov	r2, r3
 8000746:	4b5f      	ldr	r3, [pc, #380]	; (80008c4 <main+0x50c>)
 8000748:	2100      	movs	r1, #0
 800074a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800074e:	4b5c      	ldr	r3, [pc, #368]	; (80008c0 <main+0x508>)
 8000750:	881b      	ldrh	r3, [r3, #0]
 8000752:	1c5a      	adds	r2, r3, #1
 8000754:	b291      	uxth	r1, r2
 8000756:	4a5a      	ldr	r2, [pc, #360]	; (80008c0 <main+0x508>)
 8000758:	8011      	strh	r1, [r2, #0]
 800075a:	461a      	mov	r2, r3
 800075c:	4b59      	ldr	r3, [pc, #356]	; (80008c4 <main+0x50c>)
 800075e:	2101      	movs	r1, #1
 8000760:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000764:	4b56      	ldr	r3, [pc, #344]	; (80008c0 <main+0x508>)
 8000766:	881b      	ldrh	r3, [r3, #0]
 8000768:	1c5a      	adds	r2, r3, #1
 800076a:	b291      	uxth	r1, r2
 800076c:	4a54      	ldr	r2, [pc, #336]	; (80008c0 <main+0x508>)
 800076e:	8011      	strh	r1, [r2, #0]
 8000770:	461a      	mov	r2, r3
 8000772:	4b54      	ldr	r3, [pc, #336]	; (80008c4 <main+0x50c>)
 8000774:	2100      	movs	r1, #0
 8000776:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800077a:	4b51      	ldr	r3, [pc, #324]	; (80008c0 <main+0x508>)
 800077c:	881b      	ldrh	r3, [r3, #0]
 800077e:	1c5a      	adds	r2, r3, #1
 8000780:	b291      	uxth	r1, r2
 8000782:	4a4f      	ldr	r2, [pc, #316]	; (80008c0 <main+0x508>)
 8000784:	8011      	strh	r1, [r2, #0]
 8000786:	461a      	mov	r2, r3
 8000788:	4b4e      	ldr	r3, [pc, #312]	; (80008c4 <main+0x50c>)
 800078a:	2101      	movs	r1, #1
 800078c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000790:	f001 b961 	b.w	8001a56 <main+0x169e>
      case 'e': MC1[j++]=1;
 8000794:	4b4a      	ldr	r3, [pc, #296]	; (80008c0 <main+0x508>)
 8000796:	881b      	ldrh	r3, [r3, #0]
 8000798:	1c5a      	adds	r2, r3, #1
 800079a:	b291      	uxth	r1, r2
 800079c:	4a48      	ldr	r2, [pc, #288]	; (80008c0 <main+0x508>)
 800079e:	8011      	strh	r1, [r2, #0]
 80007a0:	461a      	mov	r2, r3
 80007a2:	4b48      	ldr	r3, [pc, #288]	; (80008c4 <main+0x50c>)
 80007a4:	2101      	movs	r1, #1
 80007a6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80007aa:	f001 b954 	b.w	8001a56 <main+0x169e>
      case 'f': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 80007ae:	4b44      	ldr	r3, [pc, #272]	; (80008c0 <main+0x508>)
 80007b0:	881b      	ldrh	r3, [r3, #0]
 80007b2:	1c5a      	adds	r2, r3, #1
 80007b4:	b291      	uxth	r1, r2
 80007b6:	4a42      	ldr	r2, [pc, #264]	; (80008c0 <main+0x508>)
 80007b8:	8011      	strh	r1, [r2, #0]
 80007ba:	461a      	mov	r2, r3
 80007bc:	4b41      	ldr	r3, [pc, #260]	; (80008c4 <main+0x50c>)
 80007be:	2101      	movs	r1, #1
 80007c0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80007c4:	4b3e      	ldr	r3, [pc, #248]	; (80008c0 <main+0x508>)
 80007c6:	881b      	ldrh	r3, [r3, #0]
 80007c8:	1c5a      	adds	r2, r3, #1
 80007ca:	b291      	uxth	r1, r2
 80007cc:	4a3c      	ldr	r2, [pc, #240]	; (80008c0 <main+0x508>)
 80007ce:	8011      	strh	r1, [r2, #0]
 80007d0:	461a      	mov	r2, r3
 80007d2:	4b3c      	ldr	r3, [pc, #240]	; (80008c4 <main+0x50c>)
 80007d4:	2100      	movs	r1, #0
 80007d6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80007da:	4b39      	ldr	r3, [pc, #228]	; (80008c0 <main+0x508>)
 80007dc:	881b      	ldrh	r3, [r3, #0]
 80007de:	1c5a      	adds	r2, r3, #1
 80007e0:	b291      	uxth	r1, r2
 80007e2:	4a37      	ldr	r2, [pc, #220]	; (80008c0 <main+0x508>)
 80007e4:	8011      	strh	r1, [r2, #0]
 80007e6:	461a      	mov	r2, r3
 80007e8:	4b36      	ldr	r3, [pc, #216]	; (80008c4 <main+0x50c>)
 80007ea:	2101      	movs	r1, #1
 80007ec:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80007f0:	4b33      	ldr	r3, [pc, #204]	; (80008c0 <main+0x508>)
 80007f2:	881b      	ldrh	r3, [r3, #0]
 80007f4:	1c5a      	adds	r2, r3, #1
 80007f6:	b291      	uxth	r1, r2
 80007f8:	4a31      	ldr	r2, [pc, #196]	; (80008c0 <main+0x508>)
 80007fa:	8011      	strh	r1, [r2, #0]
 80007fc:	461a      	mov	r2, r3
 80007fe:	4b31      	ldr	r3, [pc, #196]	; (80008c4 <main+0x50c>)
 8000800:	2100      	movs	r1, #0
 8000802:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000806:	4b2e      	ldr	r3, [pc, #184]	; (80008c0 <main+0x508>)
 8000808:	881b      	ldrh	r3, [r3, #0]
 800080a:	1c5a      	adds	r2, r3, #1
 800080c:	b291      	uxth	r1, r2
 800080e:	4a2c      	ldr	r2, [pc, #176]	; (80008c0 <main+0x508>)
 8000810:	8011      	strh	r1, [r2, #0]
 8000812:	461a      	mov	r2, r3
 8000814:	4b2b      	ldr	r3, [pc, #172]	; (80008c4 <main+0x50c>)
 8000816:	2103      	movs	r1, #3
 8000818:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800081c:	4b28      	ldr	r3, [pc, #160]	; (80008c0 <main+0x508>)
 800081e:	881b      	ldrh	r3, [r3, #0]
 8000820:	1c5a      	adds	r2, r3, #1
 8000822:	b291      	uxth	r1, r2
 8000824:	4a26      	ldr	r2, [pc, #152]	; (80008c0 <main+0x508>)
 8000826:	8011      	strh	r1, [r2, #0]
 8000828:	461a      	mov	r2, r3
 800082a:	4b26      	ldr	r3, [pc, #152]	; (80008c4 <main+0x50c>)
 800082c:	2100      	movs	r1, #0
 800082e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000832:	4b23      	ldr	r3, [pc, #140]	; (80008c0 <main+0x508>)
 8000834:	881b      	ldrh	r3, [r3, #0]
 8000836:	1c5a      	adds	r2, r3, #1
 8000838:	b291      	uxth	r1, r2
 800083a:	4a21      	ldr	r2, [pc, #132]	; (80008c0 <main+0x508>)
 800083c:	8011      	strh	r1, [r2, #0]
 800083e:	461a      	mov	r2, r3
 8000840:	4b20      	ldr	r3, [pc, #128]	; (80008c4 <main+0x50c>)
 8000842:	2101      	movs	r1, #1
 8000844:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000848:	f001 b905 	b.w	8001a56 <main+0x169e>
      case 'g': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 800084c:	4b1c      	ldr	r3, [pc, #112]	; (80008c0 <main+0x508>)
 800084e:	881b      	ldrh	r3, [r3, #0]
 8000850:	1c5a      	adds	r2, r3, #1
 8000852:	b291      	uxth	r1, r2
 8000854:	4a1a      	ldr	r2, [pc, #104]	; (80008c0 <main+0x508>)
 8000856:	8011      	strh	r1, [r2, #0]
 8000858:	461a      	mov	r2, r3
 800085a:	4b1a      	ldr	r3, [pc, #104]	; (80008c4 <main+0x50c>)
 800085c:	2103      	movs	r1, #3
 800085e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000862:	4b17      	ldr	r3, [pc, #92]	; (80008c0 <main+0x508>)
 8000864:	881b      	ldrh	r3, [r3, #0]
 8000866:	1c5a      	adds	r2, r3, #1
 8000868:	b291      	uxth	r1, r2
 800086a:	4a15      	ldr	r2, [pc, #84]	; (80008c0 <main+0x508>)
 800086c:	8011      	strh	r1, [r2, #0]
 800086e:	461a      	mov	r2, r3
 8000870:	4b14      	ldr	r3, [pc, #80]	; (80008c4 <main+0x50c>)
 8000872:	2100      	movs	r1, #0
 8000874:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000878:	4b11      	ldr	r3, [pc, #68]	; (80008c0 <main+0x508>)
 800087a:	881b      	ldrh	r3, [r3, #0]
 800087c:	1c5a      	adds	r2, r3, #1
 800087e:	b291      	uxth	r1, r2
 8000880:	4a0f      	ldr	r2, [pc, #60]	; (80008c0 <main+0x508>)
 8000882:	8011      	strh	r1, [r2, #0]
 8000884:	461a      	mov	r2, r3
 8000886:	4b0f      	ldr	r3, [pc, #60]	; (80008c4 <main+0x50c>)
 8000888:	2103      	movs	r1, #3
 800088a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800088e:	4b0c      	ldr	r3, [pc, #48]	; (80008c0 <main+0x508>)
 8000890:	881b      	ldrh	r3, [r3, #0]
 8000892:	1c5a      	adds	r2, r3, #1
 8000894:	b291      	uxth	r1, r2
 8000896:	4a0a      	ldr	r2, [pc, #40]	; (80008c0 <main+0x508>)
 8000898:	8011      	strh	r1, [r2, #0]
 800089a:	461a      	mov	r2, r3
 800089c:	4b09      	ldr	r3, [pc, #36]	; (80008c4 <main+0x50c>)
 800089e:	2100      	movs	r1, #0
 80008a0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80008a4:	4b06      	ldr	r3, [pc, #24]	; (80008c0 <main+0x508>)
 80008a6:	881b      	ldrh	r3, [r3, #0]
 80008a8:	1c5a      	adds	r2, r3, #1
 80008aa:	b291      	uxth	r1, r2
 80008ac:	4a04      	ldr	r2, [pc, #16]	; (80008c0 <main+0x508>)
 80008ae:	8011      	strh	r1, [r2, #0]
 80008b0:	461a      	mov	r2, r3
 80008b2:	4b04      	ldr	r3, [pc, #16]	; (80008c4 <main+0x50c>)
 80008b4:	2101      	movs	r1, #1
 80008b6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80008ba:	f001 b8cc 	b.w	8001a56 <main+0x169e>
 80008be:	bf00      	nop
 80008c0:	200005aa 	.word	0x200005aa
 80008c4:	200007cc 	.word	0x200007cc
      case 'h': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 80008c8:	4ba4      	ldr	r3, [pc, #656]	; (8000b5c <main+0x7a4>)
 80008ca:	881b      	ldrh	r3, [r3, #0]
 80008cc:	1c5a      	adds	r2, r3, #1
 80008ce:	b291      	uxth	r1, r2
 80008d0:	4aa2      	ldr	r2, [pc, #648]	; (8000b5c <main+0x7a4>)
 80008d2:	8011      	strh	r1, [r2, #0]
 80008d4:	461a      	mov	r2, r3
 80008d6:	4ba2      	ldr	r3, [pc, #648]	; (8000b60 <main+0x7a8>)
 80008d8:	2101      	movs	r1, #1
 80008da:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80008de:	4b9f      	ldr	r3, [pc, #636]	; (8000b5c <main+0x7a4>)
 80008e0:	881b      	ldrh	r3, [r3, #0]
 80008e2:	1c5a      	adds	r2, r3, #1
 80008e4:	b291      	uxth	r1, r2
 80008e6:	4a9d      	ldr	r2, [pc, #628]	; (8000b5c <main+0x7a4>)
 80008e8:	8011      	strh	r1, [r2, #0]
 80008ea:	461a      	mov	r2, r3
 80008ec:	4b9c      	ldr	r3, [pc, #624]	; (8000b60 <main+0x7a8>)
 80008ee:	2100      	movs	r1, #0
 80008f0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80008f4:	4b99      	ldr	r3, [pc, #612]	; (8000b5c <main+0x7a4>)
 80008f6:	881b      	ldrh	r3, [r3, #0]
 80008f8:	1c5a      	adds	r2, r3, #1
 80008fa:	b291      	uxth	r1, r2
 80008fc:	4a97      	ldr	r2, [pc, #604]	; (8000b5c <main+0x7a4>)
 80008fe:	8011      	strh	r1, [r2, #0]
 8000900:	461a      	mov	r2, r3
 8000902:	4b97      	ldr	r3, [pc, #604]	; (8000b60 <main+0x7a8>)
 8000904:	2101      	movs	r1, #1
 8000906:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800090a:	4b94      	ldr	r3, [pc, #592]	; (8000b5c <main+0x7a4>)
 800090c:	881b      	ldrh	r3, [r3, #0]
 800090e:	1c5a      	adds	r2, r3, #1
 8000910:	b291      	uxth	r1, r2
 8000912:	4a92      	ldr	r2, [pc, #584]	; (8000b5c <main+0x7a4>)
 8000914:	8011      	strh	r1, [r2, #0]
 8000916:	461a      	mov	r2, r3
 8000918:	4b91      	ldr	r3, [pc, #580]	; (8000b60 <main+0x7a8>)
 800091a:	2100      	movs	r1, #0
 800091c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000920:	4b8e      	ldr	r3, [pc, #568]	; (8000b5c <main+0x7a4>)
 8000922:	881b      	ldrh	r3, [r3, #0]
 8000924:	1c5a      	adds	r2, r3, #1
 8000926:	b291      	uxth	r1, r2
 8000928:	4a8c      	ldr	r2, [pc, #560]	; (8000b5c <main+0x7a4>)
 800092a:	8011      	strh	r1, [r2, #0]
 800092c:	461a      	mov	r2, r3
 800092e:	4b8c      	ldr	r3, [pc, #560]	; (8000b60 <main+0x7a8>)
 8000930:	2101      	movs	r1, #1
 8000932:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000936:	4b89      	ldr	r3, [pc, #548]	; (8000b5c <main+0x7a4>)
 8000938:	881b      	ldrh	r3, [r3, #0]
 800093a:	1c5a      	adds	r2, r3, #1
 800093c:	b291      	uxth	r1, r2
 800093e:	4a87      	ldr	r2, [pc, #540]	; (8000b5c <main+0x7a4>)
 8000940:	8011      	strh	r1, [r2, #0]
 8000942:	461a      	mov	r2, r3
 8000944:	4b86      	ldr	r3, [pc, #536]	; (8000b60 <main+0x7a8>)
 8000946:	2100      	movs	r1, #0
 8000948:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800094c:	4b83      	ldr	r3, [pc, #524]	; (8000b5c <main+0x7a4>)
 800094e:	881b      	ldrh	r3, [r3, #0]
 8000950:	1c5a      	adds	r2, r3, #1
 8000952:	b291      	uxth	r1, r2
 8000954:	4a81      	ldr	r2, [pc, #516]	; (8000b5c <main+0x7a4>)
 8000956:	8011      	strh	r1, [r2, #0]
 8000958:	461a      	mov	r2, r3
 800095a:	4b81      	ldr	r3, [pc, #516]	; (8000b60 <main+0x7a8>)
 800095c:	2101      	movs	r1, #1
 800095e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000962:	f001 b878 	b.w	8001a56 <main+0x169e>
      case 'i': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8000966:	4b7d      	ldr	r3, [pc, #500]	; (8000b5c <main+0x7a4>)
 8000968:	881b      	ldrh	r3, [r3, #0]
 800096a:	1c5a      	adds	r2, r3, #1
 800096c:	b291      	uxth	r1, r2
 800096e:	4a7b      	ldr	r2, [pc, #492]	; (8000b5c <main+0x7a4>)
 8000970:	8011      	strh	r1, [r2, #0]
 8000972:	461a      	mov	r2, r3
 8000974:	4b7a      	ldr	r3, [pc, #488]	; (8000b60 <main+0x7a8>)
 8000976:	2101      	movs	r1, #1
 8000978:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800097c:	4b77      	ldr	r3, [pc, #476]	; (8000b5c <main+0x7a4>)
 800097e:	881b      	ldrh	r3, [r3, #0]
 8000980:	1c5a      	adds	r2, r3, #1
 8000982:	b291      	uxth	r1, r2
 8000984:	4a75      	ldr	r2, [pc, #468]	; (8000b5c <main+0x7a4>)
 8000986:	8011      	strh	r1, [r2, #0]
 8000988:	461a      	mov	r2, r3
 800098a:	4b75      	ldr	r3, [pc, #468]	; (8000b60 <main+0x7a8>)
 800098c:	2100      	movs	r1, #0
 800098e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000992:	4b72      	ldr	r3, [pc, #456]	; (8000b5c <main+0x7a4>)
 8000994:	881b      	ldrh	r3, [r3, #0]
 8000996:	1c5a      	adds	r2, r3, #1
 8000998:	b291      	uxth	r1, r2
 800099a:	4a70      	ldr	r2, [pc, #448]	; (8000b5c <main+0x7a4>)
 800099c:	8011      	strh	r1, [r2, #0]
 800099e:	461a      	mov	r2, r3
 80009a0:	4b6f      	ldr	r3, [pc, #444]	; (8000b60 <main+0x7a8>)
 80009a2:	2101      	movs	r1, #1
 80009a4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80009a8:	f001 b855 	b.w	8001a56 <main+0x169e>
      case 'j': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 80009ac:	4b6b      	ldr	r3, [pc, #428]	; (8000b5c <main+0x7a4>)
 80009ae:	881b      	ldrh	r3, [r3, #0]
 80009b0:	1c5a      	adds	r2, r3, #1
 80009b2:	b291      	uxth	r1, r2
 80009b4:	4a69      	ldr	r2, [pc, #420]	; (8000b5c <main+0x7a4>)
 80009b6:	8011      	strh	r1, [r2, #0]
 80009b8:	461a      	mov	r2, r3
 80009ba:	4b69      	ldr	r3, [pc, #420]	; (8000b60 <main+0x7a8>)
 80009bc:	2101      	movs	r1, #1
 80009be:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80009c2:	4b66      	ldr	r3, [pc, #408]	; (8000b5c <main+0x7a4>)
 80009c4:	881b      	ldrh	r3, [r3, #0]
 80009c6:	1c5a      	adds	r2, r3, #1
 80009c8:	b291      	uxth	r1, r2
 80009ca:	4a64      	ldr	r2, [pc, #400]	; (8000b5c <main+0x7a4>)
 80009cc:	8011      	strh	r1, [r2, #0]
 80009ce:	461a      	mov	r2, r3
 80009d0:	4b63      	ldr	r3, [pc, #396]	; (8000b60 <main+0x7a8>)
 80009d2:	2100      	movs	r1, #0
 80009d4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80009d8:	4b60      	ldr	r3, [pc, #384]	; (8000b5c <main+0x7a4>)
 80009da:	881b      	ldrh	r3, [r3, #0]
 80009dc:	1c5a      	adds	r2, r3, #1
 80009de:	b291      	uxth	r1, r2
 80009e0:	4a5e      	ldr	r2, [pc, #376]	; (8000b5c <main+0x7a4>)
 80009e2:	8011      	strh	r1, [r2, #0]
 80009e4:	461a      	mov	r2, r3
 80009e6:	4b5e      	ldr	r3, [pc, #376]	; (8000b60 <main+0x7a8>)
 80009e8:	2103      	movs	r1, #3
 80009ea:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80009ee:	4b5b      	ldr	r3, [pc, #364]	; (8000b5c <main+0x7a4>)
 80009f0:	881b      	ldrh	r3, [r3, #0]
 80009f2:	1c5a      	adds	r2, r3, #1
 80009f4:	b291      	uxth	r1, r2
 80009f6:	4a59      	ldr	r2, [pc, #356]	; (8000b5c <main+0x7a4>)
 80009f8:	8011      	strh	r1, [r2, #0]
 80009fa:	461a      	mov	r2, r3
 80009fc:	4b58      	ldr	r3, [pc, #352]	; (8000b60 <main+0x7a8>)
 80009fe:	2100      	movs	r1, #0
 8000a00:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a04:	4b55      	ldr	r3, [pc, #340]	; (8000b5c <main+0x7a4>)
 8000a06:	881b      	ldrh	r3, [r3, #0]
 8000a08:	1c5a      	adds	r2, r3, #1
 8000a0a:	b291      	uxth	r1, r2
 8000a0c:	4a53      	ldr	r2, [pc, #332]	; (8000b5c <main+0x7a4>)
 8000a0e:	8011      	strh	r1, [r2, #0]
 8000a10:	461a      	mov	r2, r3
 8000a12:	4b53      	ldr	r3, [pc, #332]	; (8000b60 <main+0x7a8>)
 8000a14:	2103      	movs	r1, #3
 8000a16:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a1a:	4b50      	ldr	r3, [pc, #320]	; (8000b5c <main+0x7a4>)
 8000a1c:	881b      	ldrh	r3, [r3, #0]
 8000a1e:	1c5a      	adds	r2, r3, #1
 8000a20:	b291      	uxth	r1, r2
 8000a22:	4a4e      	ldr	r2, [pc, #312]	; (8000b5c <main+0x7a4>)
 8000a24:	8011      	strh	r1, [r2, #0]
 8000a26:	461a      	mov	r2, r3
 8000a28:	4b4d      	ldr	r3, [pc, #308]	; (8000b60 <main+0x7a8>)
 8000a2a:	2100      	movs	r1, #0
 8000a2c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a30:	4b4a      	ldr	r3, [pc, #296]	; (8000b5c <main+0x7a4>)
 8000a32:	881b      	ldrh	r3, [r3, #0]
 8000a34:	1c5a      	adds	r2, r3, #1
 8000a36:	b291      	uxth	r1, r2
 8000a38:	4a48      	ldr	r2, [pc, #288]	; (8000b5c <main+0x7a4>)
 8000a3a:	8011      	strh	r1, [r2, #0]
 8000a3c:	461a      	mov	r2, r3
 8000a3e:	4b48      	ldr	r3, [pc, #288]	; (8000b60 <main+0x7a8>)
 8000a40:	2103      	movs	r1, #3
 8000a42:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000a46:	f001 b806 	b.w	8001a56 <main+0x169e>
      case 'k': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8000a4a:	4b44      	ldr	r3, [pc, #272]	; (8000b5c <main+0x7a4>)
 8000a4c:	881b      	ldrh	r3, [r3, #0]
 8000a4e:	1c5a      	adds	r2, r3, #1
 8000a50:	b291      	uxth	r1, r2
 8000a52:	4a42      	ldr	r2, [pc, #264]	; (8000b5c <main+0x7a4>)
 8000a54:	8011      	strh	r1, [r2, #0]
 8000a56:	461a      	mov	r2, r3
 8000a58:	4b41      	ldr	r3, [pc, #260]	; (8000b60 <main+0x7a8>)
 8000a5a:	2103      	movs	r1, #3
 8000a5c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a60:	4b3e      	ldr	r3, [pc, #248]	; (8000b5c <main+0x7a4>)
 8000a62:	881b      	ldrh	r3, [r3, #0]
 8000a64:	1c5a      	adds	r2, r3, #1
 8000a66:	b291      	uxth	r1, r2
 8000a68:	4a3c      	ldr	r2, [pc, #240]	; (8000b5c <main+0x7a4>)
 8000a6a:	8011      	strh	r1, [r2, #0]
 8000a6c:	461a      	mov	r2, r3
 8000a6e:	4b3c      	ldr	r3, [pc, #240]	; (8000b60 <main+0x7a8>)
 8000a70:	2100      	movs	r1, #0
 8000a72:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a76:	4b39      	ldr	r3, [pc, #228]	; (8000b5c <main+0x7a4>)
 8000a78:	881b      	ldrh	r3, [r3, #0]
 8000a7a:	1c5a      	adds	r2, r3, #1
 8000a7c:	b291      	uxth	r1, r2
 8000a7e:	4a37      	ldr	r2, [pc, #220]	; (8000b5c <main+0x7a4>)
 8000a80:	8011      	strh	r1, [r2, #0]
 8000a82:	461a      	mov	r2, r3
 8000a84:	4b36      	ldr	r3, [pc, #216]	; (8000b60 <main+0x7a8>)
 8000a86:	2101      	movs	r1, #1
 8000a88:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000a8c:	4b33      	ldr	r3, [pc, #204]	; (8000b5c <main+0x7a4>)
 8000a8e:	881b      	ldrh	r3, [r3, #0]
 8000a90:	1c5a      	adds	r2, r3, #1
 8000a92:	b291      	uxth	r1, r2
 8000a94:	4a31      	ldr	r2, [pc, #196]	; (8000b5c <main+0x7a4>)
 8000a96:	8011      	strh	r1, [r2, #0]
 8000a98:	461a      	mov	r2, r3
 8000a9a:	4b31      	ldr	r3, [pc, #196]	; (8000b60 <main+0x7a8>)
 8000a9c:	2100      	movs	r1, #0
 8000a9e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000aa2:	4b2e      	ldr	r3, [pc, #184]	; (8000b5c <main+0x7a4>)
 8000aa4:	881b      	ldrh	r3, [r3, #0]
 8000aa6:	1c5a      	adds	r2, r3, #1
 8000aa8:	b291      	uxth	r1, r2
 8000aaa:	4a2c      	ldr	r2, [pc, #176]	; (8000b5c <main+0x7a4>)
 8000aac:	8011      	strh	r1, [r2, #0]
 8000aae:	461a      	mov	r2, r3
 8000ab0:	4b2b      	ldr	r3, [pc, #172]	; (8000b60 <main+0x7a8>)
 8000ab2:	2103      	movs	r1, #3
 8000ab4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000ab8:	f000 bfcd 	b.w	8001a56 <main+0x169e>
      case 'l': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8000abc:	4b27      	ldr	r3, [pc, #156]	; (8000b5c <main+0x7a4>)
 8000abe:	881b      	ldrh	r3, [r3, #0]
 8000ac0:	1c5a      	adds	r2, r3, #1
 8000ac2:	b291      	uxth	r1, r2
 8000ac4:	4a25      	ldr	r2, [pc, #148]	; (8000b5c <main+0x7a4>)
 8000ac6:	8011      	strh	r1, [r2, #0]
 8000ac8:	461a      	mov	r2, r3
 8000aca:	4b25      	ldr	r3, [pc, #148]	; (8000b60 <main+0x7a8>)
 8000acc:	2101      	movs	r1, #1
 8000ace:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ad2:	4b22      	ldr	r3, [pc, #136]	; (8000b5c <main+0x7a4>)
 8000ad4:	881b      	ldrh	r3, [r3, #0]
 8000ad6:	1c5a      	adds	r2, r3, #1
 8000ad8:	b291      	uxth	r1, r2
 8000ada:	4a20      	ldr	r2, [pc, #128]	; (8000b5c <main+0x7a4>)
 8000adc:	8011      	strh	r1, [r2, #0]
 8000ade:	461a      	mov	r2, r3
 8000ae0:	4b1f      	ldr	r3, [pc, #124]	; (8000b60 <main+0x7a8>)
 8000ae2:	2100      	movs	r1, #0
 8000ae4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ae8:	4b1c      	ldr	r3, [pc, #112]	; (8000b5c <main+0x7a4>)
 8000aea:	881b      	ldrh	r3, [r3, #0]
 8000aec:	1c5a      	adds	r2, r3, #1
 8000aee:	b291      	uxth	r1, r2
 8000af0:	4a1a      	ldr	r2, [pc, #104]	; (8000b5c <main+0x7a4>)
 8000af2:	8011      	strh	r1, [r2, #0]
 8000af4:	461a      	mov	r2, r3
 8000af6:	4b1a      	ldr	r3, [pc, #104]	; (8000b60 <main+0x7a8>)
 8000af8:	2103      	movs	r1, #3
 8000afa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000afe:	4b17      	ldr	r3, [pc, #92]	; (8000b5c <main+0x7a4>)
 8000b00:	881b      	ldrh	r3, [r3, #0]
 8000b02:	1c5a      	adds	r2, r3, #1
 8000b04:	b291      	uxth	r1, r2
 8000b06:	4a15      	ldr	r2, [pc, #84]	; (8000b5c <main+0x7a4>)
 8000b08:	8011      	strh	r1, [r2, #0]
 8000b0a:	461a      	mov	r2, r3
 8000b0c:	4b14      	ldr	r3, [pc, #80]	; (8000b60 <main+0x7a8>)
 8000b0e:	2100      	movs	r1, #0
 8000b10:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000b14:	4b11      	ldr	r3, [pc, #68]	; (8000b5c <main+0x7a4>)
 8000b16:	881b      	ldrh	r3, [r3, #0]
 8000b18:	1c5a      	adds	r2, r3, #1
 8000b1a:	b291      	uxth	r1, r2
 8000b1c:	4a0f      	ldr	r2, [pc, #60]	; (8000b5c <main+0x7a4>)
 8000b1e:	8011      	strh	r1, [r2, #0]
 8000b20:	461a      	mov	r2, r3
 8000b22:	4b0f      	ldr	r3, [pc, #60]	; (8000b60 <main+0x7a8>)
 8000b24:	2101      	movs	r1, #1
 8000b26:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000b2a:	4b0c      	ldr	r3, [pc, #48]	; (8000b5c <main+0x7a4>)
 8000b2c:	881b      	ldrh	r3, [r3, #0]
 8000b2e:	1c5a      	adds	r2, r3, #1
 8000b30:	b291      	uxth	r1, r2
 8000b32:	4a0a      	ldr	r2, [pc, #40]	; (8000b5c <main+0x7a4>)
 8000b34:	8011      	strh	r1, [r2, #0]
 8000b36:	461a      	mov	r2, r3
 8000b38:	4b09      	ldr	r3, [pc, #36]	; (8000b60 <main+0x7a8>)
 8000b3a:	2100      	movs	r1, #0
 8000b3c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000b40:	4b06      	ldr	r3, [pc, #24]	; (8000b5c <main+0x7a4>)
 8000b42:	881b      	ldrh	r3, [r3, #0]
 8000b44:	1c5a      	adds	r2, r3, #1
 8000b46:	b291      	uxth	r1, r2
 8000b48:	4a04      	ldr	r2, [pc, #16]	; (8000b5c <main+0x7a4>)
 8000b4a:	8011      	strh	r1, [r2, #0]
 8000b4c:	461a      	mov	r2, r3
 8000b4e:	4b04      	ldr	r3, [pc, #16]	; (8000b60 <main+0x7a8>)
 8000b50:	2101      	movs	r1, #1
 8000b52:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000b56:	f000 bf7e 	b.w	8001a56 <main+0x169e>
 8000b5a:	bf00      	nop
 8000b5c:	200005aa 	.word	0x200005aa
 8000b60:	200007cc 	.word	0x200007cc
      case 'm': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 8000b64:	4b8e      	ldr	r3, [pc, #568]	; (8000da0 <main+0x9e8>)
 8000b66:	881b      	ldrh	r3, [r3, #0]
 8000b68:	1c5a      	adds	r2, r3, #1
 8000b6a:	b291      	uxth	r1, r2
 8000b6c:	4a8c      	ldr	r2, [pc, #560]	; (8000da0 <main+0x9e8>)
 8000b6e:	8011      	strh	r1, [r2, #0]
 8000b70:	461a      	mov	r2, r3
 8000b72:	4b8c      	ldr	r3, [pc, #560]	; (8000da4 <main+0x9ec>)
 8000b74:	2103      	movs	r1, #3
 8000b76:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000b7a:	4b89      	ldr	r3, [pc, #548]	; (8000da0 <main+0x9e8>)
 8000b7c:	881b      	ldrh	r3, [r3, #0]
 8000b7e:	1c5a      	adds	r2, r3, #1
 8000b80:	b291      	uxth	r1, r2
 8000b82:	4a87      	ldr	r2, [pc, #540]	; (8000da0 <main+0x9e8>)
 8000b84:	8011      	strh	r1, [r2, #0]
 8000b86:	461a      	mov	r2, r3
 8000b88:	4b86      	ldr	r3, [pc, #536]	; (8000da4 <main+0x9ec>)
 8000b8a:	2100      	movs	r1, #0
 8000b8c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000b90:	4b83      	ldr	r3, [pc, #524]	; (8000da0 <main+0x9e8>)
 8000b92:	881b      	ldrh	r3, [r3, #0]
 8000b94:	1c5a      	adds	r2, r3, #1
 8000b96:	b291      	uxth	r1, r2
 8000b98:	4a81      	ldr	r2, [pc, #516]	; (8000da0 <main+0x9e8>)
 8000b9a:	8011      	strh	r1, [r2, #0]
 8000b9c:	461a      	mov	r2, r3
 8000b9e:	4b81      	ldr	r3, [pc, #516]	; (8000da4 <main+0x9ec>)
 8000ba0:	2103      	movs	r1, #3
 8000ba2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000ba6:	f000 bf56 	b.w	8001a56 <main+0x169e>
      case 'n': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 8000baa:	4b7d      	ldr	r3, [pc, #500]	; (8000da0 <main+0x9e8>)
 8000bac:	881b      	ldrh	r3, [r3, #0]
 8000bae:	1c5a      	adds	r2, r3, #1
 8000bb0:	b291      	uxth	r1, r2
 8000bb2:	4a7b      	ldr	r2, [pc, #492]	; (8000da0 <main+0x9e8>)
 8000bb4:	8011      	strh	r1, [r2, #0]
 8000bb6:	461a      	mov	r2, r3
 8000bb8:	4b7a      	ldr	r3, [pc, #488]	; (8000da4 <main+0x9ec>)
 8000bba:	2103      	movs	r1, #3
 8000bbc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000bc0:	4b77      	ldr	r3, [pc, #476]	; (8000da0 <main+0x9e8>)
 8000bc2:	881b      	ldrh	r3, [r3, #0]
 8000bc4:	1c5a      	adds	r2, r3, #1
 8000bc6:	b291      	uxth	r1, r2
 8000bc8:	4a75      	ldr	r2, [pc, #468]	; (8000da0 <main+0x9e8>)
 8000bca:	8011      	strh	r1, [r2, #0]
 8000bcc:	461a      	mov	r2, r3
 8000bce:	4b75      	ldr	r3, [pc, #468]	; (8000da4 <main+0x9ec>)
 8000bd0:	2100      	movs	r1, #0
 8000bd2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000bd6:	4b72      	ldr	r3, [pc, #456]	; (8000da0 <main+0x9e8>)
 8000bd8:	881b      	ldrh	r3, [r3, #0]
 8000bda:	1c5a      	adds	r2, r3, #1
 8000bdc:	b291      	uxth	r1, r2
 8000bde:	4a70      	ldr	r2, [pc, #448]	; (8000da0 <main+0x9e8>)
 8000be0:	8011      	strh	r1, [r2, #0]
 8000be2:	461a      	mov	r2, r3
 8000be4:	4b6f      	ldr	r3, [pc, #444]	; (8000da4 <main+0x9ec>)
 8000be6:	2101      	movs	r1, #1
 8000be8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000bec:	f000 bf33 	b.w	8001a56 <main+0x169e>
      case 'o': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 8000bf0:	4b6b      	ldr	r3, [pc, #428]	; (8000da0 <main+0x9e8>)
 8000bf2:	881b      	ldrh	r3, [r3, #0]
 8000bf4:	1c5a      	adds	r2, r3, #1
 8000bf6:	b291      	uxth	r1, r2
 8000bf8:	4a69      	ldr	r2, [pc, #420]	; (8000da0 <main+0x9e8>)
 8000bfa:	8011      	strh	r1, [r2, #0]
 8000bfc:	461a      	mov	r2, r3
 8000bfe:	4b69      	ldr	r3, [pc, #420]	; (8000da4 <main+0x9ec>)
 8000c00:	2103      	movs	r1, #3
 8000c02:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c06:	4b66      	ldr	r3, [pc, #408]	; (8000da0 <main+0x9e8>)
 8000c08:	881b      	ldrh	r3, [r3, #0]
 8000c0a:	1c5a      	adds	r2, r3, #1
 8000c0c:	b291      	uxth	r1, r2
 8000c0e:	4a64      	ldr	r2, [pc, #400]	; (8000da0 <main+0x9e8>)
 8000c10:	8011      	strh	r1, [r2, #0]
 8000c12:	461a      	mov	r2, r3
 8000c14:	4b63      	ldr	r3, [pc, #396]	; (8000da4 <main+0x9ec>)
 8000c16:	2100      	movs	r1, #0
 8000c18:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c1c:	4b60      	ldr	r3, [pc, #384]	; (8000da0 <main+0x9e8>)
 8000c1e:	881b      	ldrh	r3, [r3, #0]
 8000c20:	1c5a      	adds	r2, r3, #1
 8000c22:	b291      	uxth	r1, r2
 8000c24:	4a5e      	ldr	r2, [pc, #376]	; (8000da0 <main+0x9e8>)
 8000c26:	8011      	strh	r1, [r2, #0]
 8000c28:	461a      	mov	r2, r3
 8000c2a:	4b5e      	ldr	r3, [pc, #376]	; (8000da4 <main+0x9ec>)
 8000c2c:	2103      	movs	r1, #3
 8000c2e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c32:	4b5b      	ldr	r3, [pc, #364]	; (8000da0 <main+0x9e8>)
 8000c34:	881b      	ldrh	r3, [r3, #0]
 8000c36:	1c5a      	adds	r2, r3, #1
 8000c38:	b291      	uxth	r1, r2
 8000c3a:	4a59      	ldr	r2, [pc, #356]	; (8000da0 <main+0x9e8>)
 8000c3c:	8011      	strh	r1, [r2, #0]
 8000c3e:	461a      	mov	r2, r3
 8000c40:	4b58      	ldr	r3, [pc, #352]	; (8000da4 <main+0x9ec>)
 8000c42:	2100      	movs	r1, #0
 8000c44:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c48:	4b55      	ldr	r3, [pc, #340]	; (8000da0 <main+0x9e8>)
 8000c4a:	881b      	ldrh	r3, [r3, #0]
 8000c4c:	1c5a      	adds	r2, r3, #1
 8000c4e:	b291      	uxth	r1, r2
 8000c50:	4a53      	ldr	r2, [pc, #332]	; (8000da0 <main+0x9e8>)
 8000c52:	8011      	strh	r1, [r2, #0]
 8000c54:	461a      	mov	r2, r3
 8000c56:	4b53      	ldr	r3, [pc, #332]	; (8000da4 <main+0x9ec>)
 8000c58:	2103      	movs	r1, #3
 8000c5a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000c5e:	f000 befa 	b.w	8001a56 <main+0x169e>
      case 'p': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 8000c62:	4b4f      	ldr	r3, [pc, #316]	; (8000da0 <main+0x9e8>)
 8000c64:	881b      	ldrh	r3, [r3, #0]
 8000c66:	1c5a      	adds	r2, r3, #1
 8000c68:	b291      	uxth	r1, r2
 8000c6a:	4a4d      	ldr	r2, [pc, #308]	; (8000da0 <main+0x9e8>)
 8000c6c:	8011      	strh	r1, [r2, #0]
 8000c6e:	461a      	mov	r2, r3
 8000c70:	4b4c      	ldr	r3, [pc, #304]	; (8000da4 <main+0x9ec>)
 8000c72:	2101      	movs	r1, #1
 8000c74:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c78:	4b49      	ldr	r3, [pc, #292]	; (8000da0 <main+0x9e8>)
 8000c7a:	881b      	ldrh	r3, [r3, #0]
 8000c7c:	1c5a      	adds	r2, r3, #1
 8000c7e:	b291      	uxth	r1, r2
 8000c80:	4a47      	ldr	r2, [pc, #284]	; (8000da0 <main+0x9e8>)
 8000c82:	8011      	strh	r1, [r2, #0]
 8000c84:	461a      	mov	r2, r3
 8000c86:	4b47      	ldr	r3, [pc, #284]	; (8000da4 <main+0x9ec>)
 8000c88:	2100      	movs	r1, #0
 8000c8a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000c8e:	4b44      	ldr	r3, [pc, #272]	; (8000da0 <main+0x9e8>)
 8000c90:	881b      	ldrh	r3, [r3, #0]
 8000c92:	1c5a      	adds	r2, r3, #1
 8000c94:	b291      	uxth	r1, r2
 8000c96:	4a42      	ldr	r2, [pc, #264]	; (8000da0 <main+0x9e8>)
 8000c98:	8011      	strh	r1, [r2, #0]
 8000c9a:	461a      	mov	r2, r3
 8000c9c:	4b41      	ldr	r3, [pc, #260]	; (8000da4 <main+0x9ec>)
 8000c9e:	2103      	movs	r1, #3
 8000ca0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ca4:	4b3e      	ldr	r3, [pc, #248]	; (8000da0 <main+0x9e8>)
 8000ca6:	881b      	ldrh	r3, [r3, #0]
 8000ca8:	1c5a      	adds	r2, r3, #1
 8000caa:	b291      	uxth	r1, r2
 8000cac:	4a3c      	ldr	r2, [pc, #240]	; (8000da0 <main+0x9e8>)
 8000cae:	8011      	strh	r1, [r2, #0]
 8000cb0:	461a      	mov	r2, r3
 8000cb2:	4b3c      	ldr	r3, [pc, #240]	; (8000da4 <main+0x9ec>)
 8000cb4:	2100      	movs	r1, #0
 8000cb6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000cba:	4b39      	ldr	r3, [pc, #228]	; (8000da0 <main+0x9e8>)
 8000cbc:	881b      	ldrh	r3, [r3, #0]
 8000cbe:	1c5a      	adds	r2, r3, #1
 8000cc0:	b291      	uxth	r1, r2
 8000cc2:	4a37      	ldr	r2, [pc, #220]	; (8000da0 <main+0x9e8>)
 8000cc4:	8011      	strh	r1, [r2, #0]
 8000cc6:	461a      	mov	r2, r3
 8000cc8:	4b36      	ldr	r3, [pc, #216]	; (8000da4 <main+0x9ec>)
 8000cca:	2103      	movs	r1, #3
 8000ccc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000cd0:	4b33      	ldr	r3, [pc, #204]	; (8000da0 <main+0x9e8>)
 8000cd2:	881b      	ldrh	r3, [r3, #0]
 8000cd4:	1c5a      	adds	r2, r3, #1
 8000cd6:	b291      	uxth	r1, r2
 8000cd8:	4a31      	ldr	r2, [pc, #196]	; (8000da0 <main+0x9e8>)
 8000cda:	8011      	strh	r1, [r2, #0]
 8000cdc:	461a      	mov	r2, r3
 8000cde:	4b31      	ldr	r3, [pc, #196]	; (8000da4 <main+0x9ec>)
 8000ce0:	2100      	movs	r1, #0
 8000ce2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ce6:	4b2e      	ldr	r3, [pc, #184]	; (8000da0 <main+0x9e8>)
 8000ce8:	881b      	ldrh	r3, [r3, #0]
 8000cea:	1c5a      	adds	r2, r3, #1
 8000cec:	b291      	uxth	r1, r2
 8000cee:	4a2c      	ldr	r2, [pc, #176]	; (8000da0 <main+0x9e8>)
 8000cf0:	8011      	strh	r1, [r2, #0]
 8000cf2:	461a      	mov	r2, r3
 8000cf4:	4b2b      	ldr	r3, [pc, #172]	; (8000da4 <main+0x9ec>)
 8000cf6:	2101      	movs	r1, #1
 8000cf8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000cfc:	f000 beab 	b.w	8001a56 <main+0x169e>
      case 'q': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8000d00:	4b27      	ldr	r3, [pc, #156]	; (8000da0 <main+0x9e8>)
 8000d02:	881b      	ldrh	r3, [r3, #0]
 8000d04:	1c5a      	adds	r2, r3, #1
 8000d06:	b291      	uxth	r1, r2
 8000d08:	4a25      	ldr	r2, [pc, #148]	; (8000da0 <main+0x9e8>)
 8000d0a:	8011      	strh	r1, [r2, #0]
 8000d0c:	461a      	mov	r2, r3
 8000d0e:	4b25      	ldr	r3, [pc, #148]	; (8000da4 <main+0x9ec>)
 8000d10:	2103      	movs	r1, #3
 8000d12:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d16:	4b22      	ldr	r3, [pc, #136]	; (8000da0 <main+0x9e8>)
 8000d18:	881b      	ldrh	r3, [r3, #0]
 8000d1a:	1c5a      	adds	r2, r3, #1
 8000d1c:	b291      	uxth	r1, r2
 8000d1e:	4a20      	ldr	r2, [pc, #128]	; (8000da0 <main+0x9e8>)
 8000d20:	8011      	strh	r1, [r2, #0]
 8000d22:	461a      	mov	r2, r3
 8000d24:	4b1f      	ldr	r3, [pc, #124]	; (8000da4 <main+0x9ec>)
 8000d26:	2100      	movs	r1, #0
 8000d28:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d2c:	4b1c      	ldr	r3, [pc, #112]	; (8000da0 <main+0x9e8>)
 8000d2e:	881b      	ldrh	r3, [r3, #0]
 8000d30:	1c5a      	adds	r2, r3, #1
 8000d32:	b291      	uxth	r1, r2
 8000d34:	4a1a      	ldr	r2, [pc, #104]	; (8000da0 <main+0x9e8>)
 8000d36:	8011      	strh	r1, [r2, #0]
 8000d38:	461a      	mov	r2, r3
 8000d3a:	4b1a      	ldr	r3, [pc, #104]	; (8000da4 <main+0x9ec>)
 8000d3c:	2103      	movs	r1, #3
 8000d3e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d42:	4b17      	ldr	r3, [pc, #92]	; (8000da0 <main+0x9e8>)
 8000d44:	881b      	ldrh	r3, [r3, #0]
 8000d46:	1c5a      	adds	r2, r3, #1
 8000d48:	b291      	uxth	r1, r2
 8000d4a:	4a15      	ldr	r2, [pc, #84]	; (8000da0 <main+0x9e8>)
 8000d4c:	8011      	strh	r1, [r2, #0]
 8000d4e:	461a      	mov	r2, r3
 8000d50:	4b14      	ldr	r3, [pc, #80]	; (8000da4 <main+0x9ec>)
 8000d52:	2100      	movs	r1, #0
 8000d54:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d58:	4b11      	ldr	r3, [pc, #68]	; (8000da0 <main+0x9e8>)
 8000d5a:	881b      	ldrh	r3, [r3, #0]
 8000d5c:	1c5a      	adds	r2, r3, #1
 8000d5e:	b291      	uxth	r1, r2
 8000d60:	4a0f      	ldr	r2, [pc, #60]	; (8000da0 <main+0x9e8>)
 8000d62:	8011      	strh	r1, [r2, #0]
 8000d64:	461a      	mov	r2, r3
 8000d66:	4b0f      	ldr	r3, [pc, #60]	; (8000da4 <main+0x9ec>)
 8000d68:	2101      	movs	r1, #1
 8000d6a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d6e:	4b0c      	ldr	r3, [pc, #48]	; (8000da0 <main+0x9e8>)
 8000d70:	881b      	ldrh	r3, [r3, #0]
 8000d72:	1c5a      	adds	r2, r3, #1
 8000d74:	b291      	uxth	r1, r2
 8000d76:	4a0a      	ldr	r2, [pc, #40]	; (8000da0 <main+0x9e8>)
 8000d78:	8011      	strh	r1, [r2, #0]
 8000d7a:	461a      	mov	r2, r3
 8000d7c:	4b09      	ldr	r3, [pc, #36]	; (8000da4 <main+0x9ec>)
 8000d7e:	2100      	movs	r1, #0
 8000d80:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000d84:	4b06      	ldr	r3, [pc, #24]	; (8000da0 <main+0x9e8>)
 8000d86:	881b      	ldrh	r3, [r3, #0]
 8000d88:	1c5a      	adds	r2, r3, #1
 8000d8a:	b291      	uxth	r1, r2
 8000d8c:	4a04      	ldr	r2, [pc, #16]	; (8000da0 <main+0x9e8>)
 8000d8e:	8011      	strh	r1, [r2, #0]
 8000d90:	461a      	mov	r2, r3
 8000d92:	4b04      	ldr	r3, [pc, #16]	; (8000da4 <main+0x9ec>)
 8000d94:	2103      	movs	r1, #3
 8000d96:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000d9a:	f000 be5c 	b.w	8001a56 <main+0x169e>
 8000d9e:	bf00      	nop
 8000da0:	200005aa 	.word	0x200005aa
 8000da4:	200007cc 	.word	0x200007cc
      case 'r': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 8000da8:	4b9f      	ldr	r3, [pc, #636]	; (8001028 <main+0xc70>)
 8000daa:	881b      	ldrh	r3, [r3, #0]
 8000dac:	1c5a      	adds	r2, r3, #1
 8000dae:	b291      	uxth	r1, r2
 8000db0:	4a9d      	ldr	r2, [pc, #628]	; (8001028 <main+0xc70>)
 8000db2:	8011      	strh	r1, [r2, #0]
 8000db4:	461a      	mov	r2, r3
 8000db6:	4b9d      	ldr	r3, [pc, #628]	; (800102c <main+0xc74>)
 8000db8:	2101      	movs	r1, #1
 8000dba:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000dbe:	4b9a      	ldr	r3, [pc, #616]	; (8001028 <main+0xc70>)
 8000dc0:	881b      	ldrh	r3, [r3, #0]
 8000dc2:	1c5a      	adds	r2, r3, #1
 8000dc4:	b291      	uxth	r1, r2
 8000dc6:	4a98      	ldr	r2, [pc, #608]	; (8001028 <main+0xc70>)
 8000dc8:	8011      	strh	r1, [r2, #0]
 8000dca:	461a      	mov	r2, r3
 8000dcc:	4b97      	ldr	r3, [pc, #604]	; (800102c <main+0xc74>)
 8000dce:	2100      	movs	r1, #0
 8000dd0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000dd4:	4b94      	ldr	r3, [pc, #592]	; (8001028 <main+0xc70>)
 8000dd6:	881b      	ldrh	r3, [r3, #0]
 8000dd8:	1c5a      	adds	r2, r3, #1
 8000dda:	b291      	uxth	r1, r2
 8000ddc:	4a92      	ldr	r2, [pc, #584]	; (8001028 <main+0xc70>)
 8000dde:	8011      	strh	r1, [r2, #0]
 8000de0:	461a      	mov	r2, r3
 8000de2:	4b92      	ldr	r3, [pc, #584]	; (800102c <main+0xc74>)
 8000de4:	2103      	movs	r1, #3
 8000de6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000dea:	4b8f      	ldr	r3, [pc, #572]	; (8001028 <main+0xc70>)
 8000dec:	881b      	ldrh	r3, [r3, #0]
 8000dee:	1c5a      	adds	r2, r3, #1
 8000df0:	b291      	uxth	r1, r2
 8000df2:	4a8d      	ldr	r2, [pc, #564]	; (8001028 <main+0xc70>)
 8000df4:	8011      	strh	r1, [r2, #0]
 8000df6:	461a      	mov	r2, r3
 8000df8:	4b8c      	ldr	r3, [pc, #560]	; (800102c <main+0xc74>)
 8000dfa:	2100      	movs	r1, #0
 8000dfc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e00:	4b89      	ldr	r3, [pc, #548]	; (8001028 <main+0xc70>)
 8000e02:	881b      	ldrh	r3, [r3, #0]
 8000e04:	1c5a      	adds	r2, r3, #1
 8000e06:	b291      	uxth	r1, r2
 8000e08:	4a87      	ldr	r2, [pc, #540]	; (8001028 <main+0xc70>)
 8000e0a:	8011      	strh	r1, [r2, #0]
 8000e0c:	461a      	mov	r2, r3
 8000e0e:	4b87      	ldr	r3, [pc, #540]	; (800102c <main+0xc74>)
 8000e10:	2101      	movs	r1, #1
 8000e12:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000e16:	f000 be1e 	b.w	8001a56 <main+0x169e>
      case 's': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8000e1a:	4b83      	ldr	r3, [pc, #524]	; (8001028 <main+0xc70>)
 8000e1c:	881b      	ldrh	r3, [r3, #0]
 8000e1e:	1c5a      	adds	r2, r3, #1
 8000e20:	b291      	uxth	r1, r2
 8000e22:	4a81      	ldr	r2, [pc, #516]	; (8001028 <main+0xc70>)
 8000e24:	8011      	strh	r1, [r2, #0]
 8000e26:	461a      	mov	r2, r3
 8000e28:	4b80      	ldr	r3, [pc, #512]	; (800102c <main+0xc74>)
 8000e2a:	2101      	movs	r1, #1
 8000e2c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e30:	4b7d      	ldr	r3, [pc, #500]	; (8001028 <main+0xc70>)
 8000e32:	881b      	ldrh	r3, [r3, #0]
 8000e34:	1c5a      	adds	r2, r3, #1
 8000e36:	b291      	uxth	r1, r2
 8000e38:	4a7b      	ldr	r2, [pc, #492]	; (8001028 <main+0xc70>)
 8000e3a:	8011      	strh	r1, [r2, #0]
 8000e3c:	461a      	mov	r2, r3
 8000e3e:	4b7b      	ldr	r3, [pc, #492]	; (800102c <main+0xc74>)
 8000e40:	2100      	movs	r1, #0
 8000e42:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e46:	4b78      	ldr	r3, [pc, #480]	; (8001028 <main+0xc70>)
 8000e48:	881b      	ldrh	r3, [r3, #0]
 8000e4a:	1c5a      	adds	r2, r3, #1
 8000e4c:	b291      	uxth	r1, r2
 8000e4e:	4a76      	ldr	r2, [pc, #472]	; (8001028 <main+0xc70>)
 8000e50:	8011      	strh	r1, [r2, #0]
 8000e52:	461a      	mov	r2, r3
 8000e54:	4b75      	ldr	r3, [pc, #468]	; (800102c <main+0xc74>)
 8000e56:	2101      	movs	r1, #1
 8000e58:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e5c:	4b72      	ldr	r3, [pc, #456]	; (8001028 <main+0xc70>)
 8000e5e:	881b      	ldrh	r3, [r3, #0]
 8000e60:	1c5a      	adds	r2, r3, #1
 8000e62:	b291      	uxth	r1, r2
 8000e64:	4a70      	ldr	r2, [pc, #448]	; (8001028 <main+0xc70>)
 8000e66:	8011      	strh	r1, [r2, #0]
 8000e68:	461a      	mov	r2, r3
 8000e6a:	4b70      	ldr	r3, [pc, #448]	; (800102c <main+0xc74>)
 8000e6c:	2100      	movs	r1, #0
 8000e6e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000e72:	4b6d      	ldr	r3, [pc, #436]	; (8001028 <main+0xc70>)
 8000e74:	881b      	ldrh	r3, [r3, #0]
 8000e76:	1c5a      	adds	r2, r3, #1
 8000e78:	b291      	uxth	r1, r2
 8000e7a:	4a6b      	ldr	r2, [pc, #428]	; (8001028 <main+0xc70>)
 8000e7c:	8011      	strh	r1, [r2, #0]
 8000e7e:	461a      	mov	r2, r3
 8000e80:	4b6a      	ldr	r3, [pc, #424]	; (800102c <main+0xc74>)
 8000e82:	2101      	movs	r1, #1
 8000e84:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000e88:	f000 bde5 	b.w	8001a56 <main+0x169e>
      case 't': MC1[j++]=3;
 8000e8c:	4b66      	ldr	r3, [pc, #408]	; (8001028 <main+0xc70>)
 8000e8e:	881b      	ldrh	r3, [r3, #0]
 8000e90:	1c5a      	adds	r2, r3, #1
 8000e92:	b291      	uxth	r1, r2
 8000e94:	4a64      	ldr	r2, [pc, #400]	; (8001028 <main+0xc70>)
 8000e96:	8011      	strh	r1, [r2, #0]
 8000e98:	461a      	mov	r2, r3
 8000e9a:	4b64      	ldr	r3, [pc, #400]	; (800102c <main+0xc74>)
 8000e9c:	2103      	movs	r1, #3
 8000e9e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000ea2:	f000 bdd8 	b.w	8001a56 <main+0x169e>
      case 'u': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8000ea6:	4b60      	ldr	r3, [pc, #384]	; (8001028 <main+0xc70>)
 8000ea8:	881b      	ldrh	r3, [r3, #0]
 8000eaa:	1c5a      	adds	r2, r3, #1
 8000eac:	b291      	uxth	r1, r2
 8000eae:	4a5e      	ldr	r2, [pc, #376]	; (8001028 <main+0xc70>)
 8000eb0:	8011      	strh	r1, [r2, #0]
 8000eb2:	461a      	mov	r2, r3
 8000eb4:	4b5d      	ldr	r3, [pc, #372]	; (800102c <main+0xc74>)
 8000eb6:	2101      	movs	r1, #1
 8000eb8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ebc:	4b5a      	ldr	r3, [pc, #360]	; (8001028 <main+0xc70>)
 8000ebe:	881b      	ldrh	r3, [r3, #0]
 8000ec0:	1c5a      	adds	r2, r3, #1
 8000ec2:	b291      	uxth	r1, r2
 8000ec4:	4a58      	ldr	r2, [pc, #352]	; (8001028 <main+0xc70>)
 8000ec6:	8011      	strh	r1, [r2, #0]
 8000ec8:	461a      	mov	r2, r3
 8000eca:	4b58      	ldr	r3, [pc, #352]	; (800102c <main+0xc74>)
 8000ecc:	2100      	movs	r1, #0
 8000ece:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ed2:	4b55      	ldr	r3, [pc, #340]	; (8001028 <main+0xc70>)
 8000ed4:	881b      	ldrh	r3, [r3, #0]
 8000ed6:	1c5a      	adds	r2, r3, #1
 8000ed8:	b291      	uxth	r1, r2
 8000eda:	4a53      	ldr	r2, [pc, #332]	; (8001028 <main+0xc70>)
 8000edc:	8011      	strh	r1, [r2, #0]
 8000ede:	461a      	mov	r2, r3
 8000ee0:	4b52      	ldr	r3, [pc, #328]	; (800102c <main+0xc74>)
 8000ee2:	2101      	movs	r1, #1
 8000ee4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ee8:	4b4f      	ldr	r3, [pc, #316]	; (8001028 <main+0xc70>)
 8000eea:	881b      	ldrh	r3, [r3, #0]
 8000eec:	1c5a      	adds	r2, r3, #1
 8000eee:	b291      	uxth	r1, r2
 8000ef0:	4a4d      	ldr	r2, [pc, #308]	; (8001028 <main+0xc70>)
 8000ef2:	8011      	strh	r1, [r2, #0]
 8000ef4:	461a      	mov	r2, r3
 8000ef6:	4b4d      	ldr	r3, [pc, #308]	; (800102c <main+0xc74>)
 8000ef8:	2100      	movs	r1, #0
 8000efa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000efe:	4b4a      	ldr	r3, [pc, #296]	; (8001028 <main+0xc70>)
 8000f00:	881b      	ldrh	r3, [r3, #0]
 8000f02:	1c5a      	adds	r2, r3, #1
 8000f04:	b291      	uxth	r1, r2
 8000f06:	4a48      	ldr	r2, [pc, #288]	; (8001028 <main+0xc70>)
 8000f08:	8011      	strh	r1, [r2, #0]
 8000f0a:	461a      	mov	r2, r3
 8000f0c:	4b47      	ldr	r3, [pc, #284]	; (800102c <main+0xc74>)
 8000f0e:	2103      	movs	r1, #3
 8000f10:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000f14:	f000 bd9f 	b.w	8001a56 <main+0x169e>
      case 'v': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8000f18:	4b43      	ldr	r3, [pc, #268]	; (8001028 <main+0xc70>)
 8000f1a:	881b      	ldrh	r3, [r3, #0]
 8000f1c:	1c5a      	adds	r2, r3, #1
 8000f1e:	b291      	uxth	r1, r2
 8000f20:	4a41      	ldr	r2, [pc, #260]	; (8001028 <main+0xc70>)
 8000f22:	8011      	strh	r1, [r2, #0]
 8000f24:	461a      	mov	r2, r3
 8000f26:	4b41      	ldr	r3, [pc, #260]	; (800102c <main+0xc74>)
 8000f28:	2101      	movs	r1, #1
 8000f2a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f2e:	4b3e      	ldr	r3, [pc, #248]	; (8001028 <main+0xc70>)
 8000f30:	881b      	ldrh	r3, [r3, #0]
 8000f32:	1c5a      	adds	r2, r3, #1
 8000f34:	b291      	uxth	r1, r2
 8000f36:	4a3c      	ldr	r2, [pc, #240]	; (8001028 <main+0xc70>)
 8000f38:	8011      	strh	r1, [r2, #0]
 8000f3a:	461a      	mov	r2, r3
 8000f3c:	4b3b      	ldr	r3, [pc, #236]	; (800102c <main+0xc74>)
 8000f3e:	2100      	movs	r1, #0
 8000f40:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f44:	4b38      	ldr	r3, [pc, #224]	; (8001028 <main+0xc70>)
 8000f46:	881b      	ldrh	r3, [r3, #0]
 8000f48:	1c5a      	adds	r2, r3, #1
 8000f4a:	b291      	uxth	r1, r2
 8000f4c:	4a36      	ldr	r2, [pc, #216]	; (8001028 <main+0xc70>)
 8000f4e:	8011      	strh	r1, [r2, #0]
 8000f50:	461a      	mov	r2, r3
 8000f52:	4b36      	ldr	r3, [pc, #216]	; (800102c <main+0xc74>)
 8000f54:	2101      	movs	r1, #1
 8000f56:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f5a:	4b33      	ldr	r3, [pc, #204]	; (8001028 <main+0xc70>)
 8000f5c:	881b      	ldrh	r3, [r3, #0]
 8000f5e:	1c5a      	adds	r2, r3, #1
 8000f60:	b291      	uxth	r1, r2
 8000f62:	4a31      	ldr	r2, [pc, #196]	; (8001028 <main+0xc70>)
 8000f64:	8011      	strh	r1, [r2, #0]
 8000f66:	461a      	mov	r2, r3
 8000f68:	4b30      	ldr	r3, [pc, #192]	; (800102c <main+0xc74>)
 8000f6a:	2100      	movs	r1, #0
 8000f6c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f70:	4b2d      	ldr	r3, [pc, #180]	; (8001028 <main+0xc70>)
 8000f72:	881b      	ldrh	r3, [r3, #0]
 8000f74:	1c5a      	adds	r2, r3, #1
 8000f76:	b291      	uxth	r1, r2
 8000f78:	4a2b      	ldr	r2, [pc, #172]	; (8001028 <main+0xc70>)
 8000f7a:	8011      	strh	r1, [r2, #0]
 8000f7c:	461a      	mov	r2, r3
 8000f7e:	4b2b      	ldr	r3, [pc, #172]	; (800102c <main+0xc74>)
 8000f80:	2101      	movs	r1, #1
 8000f82:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f86:	4b28      	ldr	r3, [pc, #160]	; (8001028 <main+0xc70>)
 8000f88:	881b      	ldrh	r3, [r3, #0]
 8000f8a:	1c5a      	adds	r2, r3, #1
 8000f8c:	b291      	uxth	r1, r2
 8000f8e:	4a26      	ldr	r2, [pc, #152]	; (8001028 <main+0xc70>)
 8000f90:	8011      	strh	r1, [r2, #0]
 8000f92:	461a      	mov	r2, r3
 8000f94:	4b25      	ldr	r3, [pc, #148]	; (800102c <main+0xc74>)
 8000f96:	2100      	movs	r1, #0
 8000f98:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000f9c:	4b22      	ldr	r3, [pc, #136]	; (8001028 <main+0xc70>)
 8000f9e:	881b      	ldrh	r3, [r3, #0]
 8000fa0:	1c5a      	adds	r2, r3, #1
 8000fa2:	b291      	uxth	r1, r2
 8000fa4:	4a20      	ldr	r2, [pc, #128]	; (8001028 <main+0xc70>)
 8000fa6:	8011      	strh	r1, [r2, #0]
 8000fa8:	461a      	mov	r2, r3
 8000faa:	4b20      	ldr	r3, [pc, #128]	; (800102c <main+0xc74>)
 8000fac:	2103      	movs	r1, #3
 8000fae:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8000fb2:	f000 bd50 	b.w	8001a56 <main+0x169e>
      case 'w': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 8000fb6:	4b1c      	ldr	r3, [pc, #112]	; (8001028 <main+0xc70>)
 8000fb8:	881b      	ldrh	r3, [r3, #0]
 8000fba:	1c5a      	adds	r2, r3, #1
 8000fbc:	b291      	uxth	r1, r2
 8000fbe:	4a1a      	ldr	r2, [pc, #104]	; (8001028 <main+0xc70>)
 8000fc0:	8011      	strh	r1, [r2, #0]
 8000fc2:	461a      	mov	r2, r3
 8000fc4:	4b19      	ldr	r3, [pc, #100]	; (800102c <main+0xc74>)
 8000fc6:	2101      	movs	r1, #1
 8000fc8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000fcc:	4b16      	ldr	r3, [pc, #88]	; (8001028 <main+0xc70>)
 8000fce:	881b      	ldrh	r3, [r3, #0]
 8000fd0:	1c5a      	adds	r2, r3, #1
 8000fd2:	b291      	uxth	r1, r2
 8000fd4:	4a14      	ldr	r2, [pc, #80]	; (8001028 <main+0xc70>)
 8000fd6:	8011      	strh	r1, [r2, #0]
 8000fd8:	461a      	mov	r2, r3
 8000fda:	4b14      	ldr	r3, [pc, #80]	; (800102c <main+0xc74>)
 8000fdc:	2100      	movs	r1, #0
 8000fde:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000fe2:	4b11      	ldr	r3, [pc, #68]	; (8001028 <main+0xc70>)
 8000fe4:	881b      	ldrh	r3, [r3, #0]
 8000fe6:	1c5a      	adds	r2, r3, #1
 8000fe8:	b291      	uxth	r1, r2
 8000fea:	4a0f      	ldr	r2, [pc, #60]	; (8001028 <main+0xc70>)
 8000fec:	8011      	strh	r1, [r2, #0]
 8000fee:	461a      	mov	r2, r3
 8000ff0:	4b0e      	ldr	r3, [pc, #56]	; (800102c <main+0xc74>)
 8000ff2:	2103      	movs	r1, #3
 8000ff4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8000ff8:	4b0b      	ldr	r3, [pc, #44]	; (8001028 <main+0xc70>)
 8000ffa:	881b      	ldrh	r3, [r3, #0]
 8000ffc:	1c5a      	adds	r2, r3, #1
 8000ffe:	b291      	uxth	r1, r2
 8001000:	4a09      	ldr	r2, [pc, #36]	; (8001028 <main+0xc70>)
 8001002:	8011      	strh	r1, [r2, #0]
 8001004:	461a      	mov	r2, r3
 8001006:	4b09      	ldr	r3, [pc, #36]	; (800102c <main+0xc74>)
 8001008:	2100      	movs	r1, #0
 800100a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800100e:	4b06      	ldr	r3, [pc, #24]	; (8001028 <main+0xc70>)
 8001010:	881b      	ldrh	r3, [r3, #0]
 8001012:	1c5a      	adds	r2, r3, #1
 8001014:	b291      	uxth	r1, r2
 8001016:	4a04      	ldr	r2, [pc, #16]	; (8001028 <main+0xc70>)
 8001018:	8011      	strh	r1, [r2, #0]
 800101a:	461a      	mov	r2, r3
 800101c:	4b03      	ldr	r3, [pc, #12]	; (800102c <main+0xc74>)
 800101e:	2103      	movs	r1, #3
 8001020:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001024:	f000 bd17 	b.w	8001a56 <main+0x169e>
 8001028:	200005aa 	.word	0x200005aa
 800102c:	200007cc 	.word	0x200007cc
      case 'x': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 8001030:	4b76      	ldr	r3, [pc, #472]	; (800120c <main+0xe54>)
 8001032:	881b      	ldrh	r3, [r3, #0]
 8001034:	1c5a      	adds	r2, r3, #1
 8001036:	b291      	uxth	r1, r2
 8001038:	4a74      	ldr	r2, [pc, #464]	; (800120c <main+0xe54>)
 800103a:	8011      	strh	r1, [r2, #0]
 800103c:	461a      	mov	r2, r3
 800103e:	4b74      	ldr	r3, [pc, #464]	; (8001210 <main+0xe58>)
 8001040:	2103      	movs	r1, #3
 8001042:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001046:	4b71      	ldr	r3, [pc, #452]	; (800120c <main+0xe54>)
 8001048:	881b      	ldrh	r3, [r3, #0]
 800104a:	1c5a      	adds	r2, r3, #1
 800104c:	b291      	uxth	r1, r2
 800104e:	4a6f      	ldr	r2, [pc, #444]	; (800120c <main+0xe54>)
 8001050:	8011      	strh	r1, [r2, #0]
 8001052:	461a      	mov	r2, r3
 8001054:	4b6e      	ldr	r3, [pc, #440]	; (8001210 <main+0xe58>)
 8001056:	2100      	movs	r1, #0
 8001058:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800105c:	4b6b      	ldr	r3, [pc, #428]	; (800120c <main+0xe54>)
 800105e:	881b      	ldrh	r3, [r3, #0]
 8001060:	1c5a      	adds	r2, r3, #1
 8001062:	b291      	uxth	r1, r2
 8001064:	4a69      	ldr	r2, [pc, #420]	; (800120c <main+0xe54>)
 8001066:	8011      	strh	r1, [r2, #0]
 8001068:	461a      	mov	r2, r3
 800106a:	4b69      	ldr	r3, [pc, #420]	; (8001210 <main+0xe58>)
 800106c:	2101      	movs	r1, #1
 800106e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001072:	4b66      	ldr	r3, [pc, #408]	; (800120c <main+0xe54>)
 8001074:	881b      	ldrh	r3, [r3, #0]
 8001076:	1c5a      	adds	r2, r3, #1
 8001078:	b291      	uxth	r1, r2
 800107a:	4a64      	ldr	r2, [pc, #400]	; (800120c <main+0xe54>)
 800107c:	8011      	strh	r1, [r2, #0]
 800107e:	461a      	mov	r2, r3
 8001080:	4b63      	ldr	r3, [pc, #396]	; (8001210 <main+0xe58>)
 8001082:	2100      	movs	r1, #0
 8001084:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001088:	4b60      	ldr	r3, [pc, #384]	; (800120c <main+0xe54>)
 800108a:	881b      	ldrh	r3, [r3, #0]
 800108c:	1c5a      	adds	r2, r3, #1
 800108e:	b291      	uxth	r1, r2
 8001090:	4a5e      	ldr	r2, [pc, #376]	; (800120c <main+0xe54>)
 8001092:	8011      	strh	r1, [r2, #0]
 8001094:	461a      	mov	r2, r3
 8001096:	4b5e      	ldr	r3, [pc, #376]	; (8001210 <main+0xe58>)
 8001098:	2101      	movs	r1, #1
 800109a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800109e:	4b5b      	ldr	r3, [pc, #364]	; (800120c <main+0xe54>)
 80010a0:	881b      	ldrh	r3, [r3, #0]
 80010a2:	1c5a      	adds	r2, r3, #1
 80010a4:	b291      	uxth	r1, r2
 80010a6:	4a59      	ldr	r2, [pc, #356]	; (800120c <main+0xe54>)
 80010a8:	8011      	strh	r1, [r2, #0]
 80010aa:	461a      	mov	r2, r3
 80010ac:	4b58      	ldr	r3, [pc, #352]	; (8001210 <main+0xe58>)
 80010ae:	2100      	movs	r1, #0
 80010b0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80010b4:	4b55      	ldr	r3, [pc, #340]	; (800120c <main+0xe54>)
 80010b6:	881b      	ldrh	r3, [r3, #0]
 80010b8:	1c5a      	adds	r2, r3, #1
 80010ba:	b291      	uxth	r1, r2
 80010bc:	4a53      	ldr	r2, [pc, #332]	; (800120c <main+0xe54>)
 80010be:	8011      	strh	r1, [r2, #0]
 80010c0:	461a      	mov	r2, r3
 80010c2:	4b53      	ldr	r3, [pc, #332]	; (8001210 <main+0xe58>)
 80010c4:	2103      	movs	r1, #3
 80010c6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80010ca:	f000 bcc4 	b.w	8001a56 <main+0x169e>
      case 'y': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 80010ce:	4b4f      	ldr	r3, [pc, #316]	; (800120c <main+0xe54>)
 80010d0:	881b      	ldrh	r3, [r3, #0]
 80010d2:	1c5a      	adds	r2, r3, #1
 80010d4:	b291      	uxth	r1, r2
 80010d6:	4a4d      	ldr	r2, [pc, #308]	; (800120c <main+0xe54>)
 80010d8:	8011      	strh	r1, [r2, #0]
 80010da:	461a      	mov	r2, r3
 80010dc:	4b4c      	ldr	r3, [pc, #304]	; (8001210 <main+0xe58>)
 80010de:	2103      	movs	r1, #3
 80010e0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80010e4:	4b49      	ldr	r3, [pc, #292]	; (800120c <main+0xe54>)
 80010e6:	881b      	ldrh	r3, [r3, #0]
 80010e8:	1c5a      	adds	r2, r3, #1
 80010ea:	b291      	uxth	r1, r2
 80010ec:	4a47      	ldr	r2, [pc, #284]	; (800120c <main+0xe54>)
 80010ee:	8011      	strh	r1, [r2, #0]
 80010f0:	461a      	mov	r2, r3
 80010f2:	4b47      	ldr	r3, [pc, #284]	; (8001210 <main+0xe58>)
 80010f4:	2100      	movs	r1, #0
 80010f6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80010fa:	4b44      	ldr	r3, [pc, #272]	; (800120c <main+0xe54>)
 80010fc:	881b      	ldrh	r3, [r3, #0]
 80010fe:	1c5a      	adds	r2, r3, #1
 8001100:	b291      	uxth	r1, r2
 8001102:	4a42      	ldr	r2, [pc, #264]	; (800120c <main+0xe54>)
 8001104:	8011      	strh	r1, [r2, #0]
 8001106:	461a      	mov	r2, r3
 8001108:	4b41      	ldr	r3, [pc, #260]	; (8001210 <main+0xe58>)
 800110a:	2101      	movs	r1, #1
 800110c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001110:	4b3e      	ldr	r3, [pc, #248]	; (800120c <main+0xe54>)
 8001112:	881b      	ldrh	r3, [r3, #0]
 8001114:	1c5a      	adds	r2, r3, #1
 8001116:	b291      	uxth	r1, r2
 8001118:	4a3c      	ldr	r2, [pc, #240]	; (800120c <main+0xe54>)
 800111a:	8011      	strh	r1, [r2, #0]
 800111c:	461a      	mov	r2, r3
 800111e:	4b3c      	ldr	r3, [pc, #240]	; (8001210 <main+0xe58>)
 8001120:	2100      	movs	r1, #0
 8001122:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001126:	4b39      	ldr	r3, [pc, #228]	; (800120c <main+0xe54>)
 8001128:	881b      	ldrh	r3, [r3, #0]
 800112a:	1c5a      	adds	r2, r3, #1
 800112c:	b291      	uxth	r1, r2
 800112e:	4a37      	ldr	r2, [pc, #220]	; (800120c <main+0xe54>)
 8001130:	8011      	strh	r1, [r2, #0]
 8001132:	461a      	mov	r2, r3
 8001134:	4b36      	ldr	r3, [pc, #216]	; (8001210 <main+0xe58>)
 8001136:	2103      	movs	r1, #3
 8001138:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800113c:	4b33      	ldr	r3, [pc, #204]	; (800120c <main+0xe54>)
 800113e:	881b      	ldrh	r3, [r3, #0]
 8001140:	1c5a      	adds	r2, r3, #1
 8001142:	b291      	uxth	r1, r2
 8001144:	4a31      	ldr	r2, [pc, #196]	; (800120c <main+0xe54>)
 8001146:	8011      	strh	r1, [r2, #0]
 8001148:	461a      	mov	r2, r3
 800114a:	4b31      	ldr	r3, [pc, #196]	; (8001210 <main+0xe58>)
 800114c:	2100      	movs	r1, #0
 800114e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001152:	4b2e      	ldr	r3, [pc, #184]	; (800120c <main+0xe54>)
 8001154:	881b      	ldrh	r3, [r3, #0]
 8001156:	1c5a      	adds	r2, r3, #1
 8001158:	b291      	uxth	r1, r2
 800115a:	4a2c      	ldr	r2, [pc, #176]	; (800120c <main+0xe54>)
 800115c:	8011      	strh	r1, [r2, #0]
 800115e:	461a      	mov	r2, r3
 8001160:	4b2b      	ldr	r3, [pc, #172]	; (8001210 <main+0xe58>)
 8001162:	2103      	movs	r1, #3
 8001164:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001168:	f000 bc75 	b.w	8001a56 <main+0x169e>
      case 'z': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 800116c:	4b27      	ldr	r3, [pc, #156]	; (800120c <main+0xe54>)
 800116e:	881b      	ldrh	r3, [r3, #0]
 8001170:	1c5a      	adds	r2, r3, #1
 8001172:	b291      	uxth	r1, r2
 8001174:	4a25      	ldr	r2, [pc, #148]	; (800120c <main+0xe54>)
 8001176:	8011      	strh	r1, [r2, #0]
 8001178:	461a      	mov	r2, r3
 800117a:	4b25      	ldr	r3, [pc, #148]	; (8001210 <main+0xe58>)
 800117c:	2103      	movs	r1, #3
 800117e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001182:	4b22      	ldr	r3, [pc, #136]	; (800120c <main+0xe54>)
 8001184:	881b      	ldrh	r3, [r3, #0]
 8001186:	1c5a      	adds	r2, r3, #1
 8001188:	b291      	uxth	r1, r2
 800118a:	4a20      	ldr	r2, [pc, #128]	; (800120c <main+0xe54>)
 800118c:	8011      	strh	r1, [r2, #0]
 800118e:	461a      	mov	r2, r3
 8001190:	4b1f      	ldr	r3, [pc, #124]	; (8001210 <main+0xe58>)
 8001192:	2100      	movs	r1, #0
 8001194:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001198:	4b1c      	ldr	r3, [pc, #112]	; (800120c <main+0xe54>)
 800119a:	881b      	ldrh	r3, [r3, #0]
 800119c:	1c5a      	adds	r2, r3, #1
 800119e:	b291      	uxth	r1, r2
 80011a0:	4a1a      	ldr	r2, [pc, #104]	; (800120c <main+0xe54>)
 80011a2:	8011      	strh	r1, [r2, #0]
 80011a4:	461a      	mov	r2, r3
 80011a6:	4b1a      	ldr	r3, [pc, #104]	; (8001210 <main+0xe58>)
 80011a8:	2103      	movs	r1, #3
 80011aa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80011ae:	4b17      	ldr	r3, [pc, #92]	; (800120c <main+0xe54>)
 80011b0:	881b      	ldrh	r3, [r3, #0]
 80011b2:	1c5a      	adds	r2, r3, #1
 80011b4:	b291      	uxth	r1, r2
 80011b6:	4a15      	ldr	r2, [pc, #84]	; (800120c <main+0xe54>)
 80011b8:	8011      	strh	r1, [r2, #0]
 80011ba:	461a      	mov	r2, r3
 80011bc:	4b14      	ldr	r3, [pc, #80]	; (8001210 <main+0xe58>)
 80011be:	2100      	movs	r1, #0
 80011c0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80011c4:	4b11      	ldr	r3, [pc, #68]	; (800120c <main+0xe54>)
 80011c6:	881b      	ldrh	r3, [r3, #0]
 80011c8:	1c5a      	adds	r2, r3, #1
 80011ca:	b291      	uxth	r1, r2
 80011cc:	4a0f      	ldr	r2, [pc, #60]	; (800120c <main+0xe54>)
 80011ce:	8011      	strh	r1, [r2, #0]
 80011d0:	461a      	mov	r2, r3
 80011d2:	4b0f      	ldr	r3, [pc, #60]	; (8001210 <main+0xe58>)
 80011d4:	2101      	movs	r1, #1
 80011d6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80011da:	4b0c      	ldr	r3, [pc, #48]	; (800120c <main+0xe54>)
 80011dc:	881b      	ldrh	r3, [r3, #0]
 80011de:	1c5a      	adds	r2, r3, #1
 80011e0:	b291      	uxth	r1, r2
 80011e2:	4a0a      	ldr	r2, [pc, #40]	; (800120c <main+0xe54>)
 80011e4:	8011      	strh	r1, [r2, #0]
 80011e6:	461a      	mov	r2, r3
 80011e8:	4b09      	ldr	r3, [pc, #36]	; (8001210 <main+0xe58>)
 80011ea:	2100      	movs	r1, #0
 80011ec:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80011f0:	4b06      	ldr	r3, [pc, #24]	; (800120c <main+0xe54>)
 80011f2:	881b      	ldrh	r3, [r3, #0]
 80011f4:	1c5a      	adds	r2, r3, #1
 80011f6:	b291      	uxth	r1, r2
 80011f8:	4a04      	ldr	r2, [pc, #16]	; (800120c <main+0xe54>)
 80011fa:	8011      	strh	r1, [r2, #0]
 80011fc:	461a      	mov	r2, r3
 80011fe:	4b04      	ldr	r3, [pc, #16]	; (8001210 <main+0xe58>)
 8001200:	2101      	movs	r1, #1
 8001202:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001206:	f000 bc26 	b.w	8001a56 <main+0x169e>
 800120a:	bf00      	nop
 800120c:	200005aa 	.word	0x200005aa
 8001210:	200007cc 	.word	0x200007cc
      case '0': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 8001214:	4b95      	ldr	r3, [pc, #596]	; (800146c <main+0x10b4>)
 8001216:	881b      	ldrh	r3, [r3, #0]
 8001218:	1c5a      	adds	r2, r3, #1
 800121a:	b291      	uxth	r1, r2
 800121c:	4a93      	ldr	r2, [pc, #588]	; (800146c <main+0x10b4>)
 800121e:	8011      	strh	r1, [r2, #0]
 8001220:	461a      	mov	r2, r3
 8001222:	4b93      	ldr	r3, [pc, #588]	; (8001470 <main+0x10b8>)
 8001224:	2103      	movs	r1, #3
 8001226:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800122a:	4b90      	ldr	r3, [pc, #576]	; (800146c <main+0x10b4>)
 800122c:	881b      	ldrh	r3, [r3, #0]
 800122e:	1c5a      	adds	r2, r3, #1
 8001230:	b291      	uxth	r1, r2
 8001232:	4a8e      	ldr	r2, [pc, #568]	; (800146c <main+0x10b4>)
 8001234:	8011      	strh	r1, [r2, #0]
 8001236:	461a      	mov	r2, r3
 8001238:	4b8d      	ldr	r3, [pc, #564]	; (8001470 <main+0x10b8>)
 800123a:	2100      	movs	r1, #0
 800123c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001240:	4b8a      	ldr	r3, [pc, #552]	; (800146c <main+0x10b4>)
 8001242:	881b      	ldrh	r3, [r3, #0]
 8001244:	1c5a      	adds	r2, r3, #1
 8001246:	b291      	uxth	r1, r2
 8001248:	4a88      	ldr	r2, [pc, #544]	; (800146c <main+0x10b4>)
 800124a:	8011      	strh	r1, [r2, #0]
 800124c:	461a      	mov	r2, r3
 800124e:	4b88      	ldr	r3, [pc, #544]	; (8001470 <main+0x10b8>)
 8001250:	2103      	movs	r1, #3
 8001252:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001256:	4b85      	ldr	r3, [pc, #532]	; (800146c <main+0x10b4>)
 8001258:	881b      	ldrh	r3, [r3, #0]
 800125a:	1c5a      	adds	r2, r3, #1
 800125c:	b291      	uxth	r1, r2
 800125e:	4a83      	ldr	r2, [pc, #524]	; (800146c <main+0x10b4>)
 8001260:	8011      	strh	r1, [r2, #0]
 8001262:	461a      	mov	r2, r3
 8001264:	4b82      	ldr	r3, [pc, #520]	; (8001470 <main+0x10b8>)
 8001266:	2100      	movs	r1, #0
 8001268:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800126c:	4b7f      	ldr	r3, [pc, #508]	; (800146c <main+0x10b4>)
 800126e:	881b      	ldrh	r3, [r3, #0]
 8001270:	1c5a      	adds	r2, r3, #1
 8001272:	b291      	uxth	r1, r2
 8001274:	4a7d      	ldr	r2, [pc, #500]	; (800146c <main+0x10b4>)
 8001276:	8011      	strh	r1, [r2, #0]
 8001278:	461a      	mov	r2, r3
 800127a:	4b7d      	ldr	r3, [pc, #500]	; (8001470 <main+0x10b8>)
 800127c:	2103      	movs	r1, #3
 800127e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001282:	4b7a      	ldr	r3, [pc, #488]	; (800146c <main+0x10b4>)
 8001284:	881b      	ldrh	r3, [r3, #0]
 8001286:	1c5a      	adds	r2, r3, #1
 8001288:	b291      	uxth	r1, r2
 800128a:	4a78      	ldr	r2, [pc, #480]	; (800146c <main+0x10b4>)
 800128c:	8011      	strh	r1, [r2, #0]
 800128e:	461a      	mov	r2, r3
 8001290:	4b77      	ldr	r3, [pc, #476]	; (8001470 <main+0x10b8>)
 8001292:	2100      	movs	r1, #0
 8001294:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001298:	4b74      	ldr	r3, [pc, #464]	; (800146c <main+0x10b4>)
 800129a:	881b      	ldrh	r3, [r3, #0]
 800129c:	1c5a      	adds	r2, r3, #1
 800129e:	b291      	uxth	r1, r2
 80012a0:	4a72      	ldr	r2, [pc, #456]	; (800146c <main+0x10b4>)
 80012a2:	8011      	strh	r1, [r2, #0]
 80012a4:	461a      	mov	r2, r3
 80012a6:	4b72      	ldr	r3, [pc, #456]	; (8001470 <main+0x10b8>)
 80012a8:	2103      	movs	r1, #3
 80012aa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80012ae:	4b6f      	ldr	r3, [pc, #444]	; (800146c <main+0x10b4>)
 80012b0:	881b      	ldrh	r3, [r3, #0]
 80012b2:	1c5a      	adds	r2, r3, #1
 80012b4:	b291      	uxth	r1, r2
 80012b6:	4a6d      	ldr	r2, [pc, #436]	; (800146c <main+0x10b4>)
 80012b8:	8011      	strh	r1, [r2, #0]
 80012ba:	461a      	mov	r2, r3
 80012bc:	4b6c      	ldr	r3, [pc, #432]	; (8001470 <main+0x10b8>)
 80012be:	2100      	movs	r1, #0
 80012c0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80012c4:	4b69      	ldr	r3, [pc, #420]	; (800146c <main+0x10b4>)
 80012c6:	881b      	ldrh	r3, [r3, #0]
 80012c8:	1c5a      	adds	r2, r3, #1
 80012ca:	b291      	uxth	r1, r2
 80012cc:	4a67      	ldr	r2, [pc, #412]	; (800146c <main+0x10b4>)
 80012ce:	8011      	strh	r1, [r2, #0]
 80012d0:	461a      	mov	r2, r3
 80012d2:	4b67      	ldr	r3, [pc, #412]	; (8001470 <main+0x10b8>)
 80012d4:	2103      	movs	r1, #3
 80012d6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80012da:	e3bc      	b.n	8001a56 <main+0x169e>
      case '1': MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 80012dc:	4b63      	ldr	r3, [pc, #396]	; (800146c <main+0x10b4>)
 80012de:	881b      	ldrh	r3, [r3, #0]
 80012e0:	1c5a      	adds	r2, r3, #1
 80012e2:	b291      	uxth	r1, r2
 80012e4:	4a61      	ldr	r2, [pc, #388]	; (800146c <main+0x10b4>)
 80012e6:	8011      	strh	r1, [r2, #0]
 80012e8:	461a      	mov	r2, r3
 80012ea:	4b61      	ldr	r3, [pc, #388]	; (8001470 <main+0x10b8>)
 80012ec:	2101      	movs	r1, #1
 80012ee:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80012f2:	4b5e      	ldr	r3, [pc, #376]	; (800146c <main+0x10b4>)
 80012f4:	881b      	ldrh	r3, [r3, #0]
 80012f6:	1c5a      	adds	r2, r3, #1
 80012f8:	b291      	uxth	r1, r2
 80012fa:	4a5c      	ldr	r2, [pc, #368]	; (800146c <main+0x10b4>)
 80012fc:	8011      	strh	r1, [r2, #0]
 80012fe:	461a      	mov	r2, r3
 8001300:	4b5b      	ldr	r3, [pc, #364]	; (8001470 <main+0x10b8>)
 8001302:	2100      	movs	r1, #0
 8001304:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001308:	4b58      	ldr	r3, [pc, #352]	; (800146c <main+0x10b4>)
 800130a:	881b      	ldrh	r3, [r3, #0]
 800130c:	1c5a      	adds	r2, r3, #1
 800130e:	b291      	uxth	r1, r2
 8001310:	4a56      	ldr	r2, [pc, #344]	; (800146c <main+0x10b4>)
 8001312:	8011      	strh	r1, [r2, #0]
 8001314:	461a      	mov	r2, r3
 8001316:	4b56      	ldr	r3, [pc, #344]	; (8001470 <main+0x10b8>)
 8001318:	2103      	movs	r1, #3
 800131a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800131e:	4b53      	ldr	r3, [pc, #332]	; (800146c <main+0x10b4>)
 8001320:	881b      	ldrh	r3, [r3, #0]
 8001322:	1c5a      	adds	r2, r3, #1
 8001324:	b291      	uxth	r1, r2
 8001326:	4a51      	ldr	r2, [pc, #324]	; (800146c <main+0x10b4>)
 8001328:	8011      	strh	r1, [r2, #0]
 800132a:	461a      	mov	r2, r3
 800132c:	4b50      	ldr	r3, [pc, #320]	; (8001470 <main+0x10b8>)
 800132e:	2100      	movs	r1, #0
 8001330:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001334:	4b4d      	ldr	r3, [pc, #308]	; (800146c <main+0x10b4>)
 8001336:	881b      	ldrh	r3, [r3, #0]
 8001338:	1c5a      	adds	r2, r3, #1
 800133a:	b291      	uxth	r1, r2
 800133c:	4a4b      	ldr	r2, [pc, #300]	; (800146c <main+0x10b4>)
 800133e:	8011      	strh	r1, [r2, #0]
 8001340:	461a      	mov	r2, r3
 8001342:	4b4b      	ldr	r3, [pc, #300]	; (8001470 <main+0x10b8>)
 8001344:	2103      	movs	r1, #3
 8001346:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800134a:	4b48      	ldr	r3, [pc, #288]	; (800146c <main+0x10b4>)
 800134c:	881b      	ldrh	r3, [r3, #0]
 800134e:	1c5a      	adds	r2, r3, #1
 8001350:	b291      	uxth	r1, r2
 8001352:	4a46      	ldr	r2, [pc, #280]	; (800146c <main+0x10b4>)
 8001354:	8011      	strh	r1, [r2, #0]
 8001356:	461a      	mov	r2, r3
 8001358:	4b45      	ldr	r3, [pc, #276]	; (8001470 <main+0x10b8>)
 800135a:	2100      	movs	r1, #0
 800135c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001360:	4b42      	ldr	r3, [pc, #264]	; (800146c <main+0x10b4>)
 8001362:	881b      	ldrh	r3, [r3, #0]
 8001364:	1c5a      	adds	r2, r3, #1
 8001366:	b291      	uxth	r1, r2
 8001368:	4a40      	ldr	r2, [pc, #256]	; (800146c <main+0x10b4>)
 800136a:	8011      	strh	r1, [r2, #0]
 800136c:	461a      	mov	r2, r3
 800136e:	4b40      	ldr	r3, [pc, #256]	; (8001470 <main+0x10b8>)
 8001370:	2103      	movs	r1, #3
 8001372:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001376:	4b3d      	ldr	r3, [pc, #244]	; (800146c <main+0x10b4>)
 8001378:	881b      	ldrh	r3, [r3, #0]
 800137a:	1c5a      	adds	r2, r3, #1
 800137c:	b291      	uxth	r1, r2
 800137e:	4a3b      	ldr	r2, [pc, #236]	; (800146c <main+0x10b4>)
 8001380:	8011      	strh	r1, [r2, #0]
 8001382:	461a      	mov	r2, r3
 8001384:	4b3a      	ldr	r3, [pc, #232]	; (8001470 <main+0x10b8>)
 8001386:	2100      	movs	r1, #0
 8001388:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800138c:	4b37      	ldr	r3, [pc, #220]	; (800146c <main+0x10b4>)
 800138e:	881b      	ldrh	r3, [r3, #0]
 8001390:	1c5a      	adds	r2, r3, #1
 8001392:	b291      	uxth	r1, r2
 8001394:	4a35      	ldr	r2, [pc, #212]	; (800146c <main+0x10b4>)
 8001396:	8011      	strh	r1, [r2, #0]
 8001398:	461a      	mov	r2, r3
 800139a:	4b35      	ldr	r3, [pc, #212]	; (8001470 <main+0x10b8>)
 800139c:	2103      	movs	r1, #3
 800139e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80013a2:	e358      	b.n	8001a56 <main+0x169e>
      case '2': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 80013a4:	4b31      	ldr	r3, [pc, #196]	; (800146c <main+0x10b4>)
 80013a6:	881b      	ldrh	r3, [r3, #0]
 80013a8:	1c5a      	adds	r2, r3, #1
 80013aa:	b291      	uxth	r1, r2
 80013ac:	4a2f      	ldr	r2, [pc, #188]	; (800146c <main+0x10b4>)
 80013ae:	8011      	strh	r1, [r2, #0]
 80013b0:	461a      	mov	r2, r3
 80013b2:	4b2f      	ldr	r3, [pc, #188]	; (8001470 <main+0x10b8>)
 80013b4:	2101      	movs	r1, #1
 80013b6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80013ba:	4b2c      	ldr	r3, [pc, #176]	; (800146c <main+0x10b4>)
 80013bc:	881b      	ldrh	r3, [r3, #0]
 80013be:	1c5a      	adds	r2, r3, #1
 80013c0:	b291      	uxth	r1, r2
 80013c2:	4a2a      	ldr	r2, [pc, #168]	; (800146c <main+0x10b4>)
 80013c4:	8011      	strh	r1, [r2, #0]
 80013c6:	461a      	mov	r2, r3
 80013c8:	4b29      	ldr	r3, [pc, #164]	; (8001470 <main+0x10b8>)
 80013ca:	2100      	movs	r1, #0
 80013cc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80013d0:	4b26      	ldr	r3, [pc, #152]	; (800146c <main+0x10b4>)
 80013d2:	881b      	ldrh	r3, [r3, #0]
 80013d4:	1c5a      	adds	r2, r3, #1
 80013d6:	b291      	uxth	r1, r2
 80013d8:	4a24      	ldr	r2, [pc, #144]	; (800146c <main+0x10b4>)
 80013da:	8011      	strh	r1, [r2, #0]
 80013dc:	461a      	mov	r2, r3
 80013de:	4b24      	ldr	r3, [pc, #144]	; (8001470 <main+0x10b8>)
 80013e0:	2101      	movs	r1, #1
 80013e2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80013e6:	4b21      	ldr	r3, [pc, #132]	; (800146c <main+0x10b4>)
 80013e8:	881b      	ldrh	r3, [r3, #0]
 80013ea:	1c5a      	adds	r2, r3, #1
 80013ec:	b291      	uxth	r1, r2
 80013ee:	4a1f      	ldr	r2, [pc, #124]	; (800146c <main+0x10b4>)
 80013f0:	8011      	strh	r1, [r2, #0]
 80013f2:	461a      	mov	r2, r3
 80013f4:	4b1e      	ldr	r3, [pc, #120]	; (8001470 <main+0x10b8>)
 80013f6:	2100      	movs	r1, #0
 80013f8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80013fc:	4b1b      	ldr	r3, [pc, #108]	; (800146c <main+0x10b4>)
 80013fe:	881b      	ldrh	r3, [r3, #0]
 8001400:	1c5a      	adds	r2, r3, #1
 8001402:	b291      	uxth	r1, r2
 8001404:	4a19      	ldr	r2, [pc, #100]	; (800146c <main+0x10b4>)
 8001406:	8011      	strh	r1, [r2, #0]
 8001408:	461a      	mov	r2, r3
 800140a:	4b19      	ldr	r3, [pc, #100]	; (8001470 <main+0x10b8>)
 800140c:	2103      	movs	r1, #3
 800140e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001412:	4b16      	ldr	r3, [pc, #88]	; (800146c <main+0x10b4>)
 8001414:	881b      	ldrh	r3, [r3, #0]
 8001416:	1c5a      	adds	r2, r3, #1
 8001418:	b291      	uxth	r1, r2
 800141a:	4a14      	ldr	r2, [pc, #80]	; (800146c <main+0x10b4>)
 800141c:	8011      	strh	r1, [r2, #0]
 800141e:	461a      	mov	r2, r3
 8001420:	4b13      	ldr	r3, [pc, #76]	; (8001470 <main+0x10b8>)
 8001422:	2100      	movs	r1, #0
 8001424:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001428:	4b10      	ldr	r3, [pc, #64]	; (800146c <main+0x10b4>)
 800142a:	881b      	ldrh	r3, [r3, #0]
 800142c:	1c5a      	adds	r2, r3, #1
 800142e:	b291      	uxth	r1, r2
 8001430:	4a0e      	ldr	r2, [pc, #56]	; (800146c <main+0x10b4>)
 8001432:	8011      	strh	r1, [r2, #0]
 8001434:	461a      	mov	r2, r3
 8001436:	4b0e      	ldr	r3, [pc, #56]	; (8001470 <main+0x10b8>)
 8001438:	2103      	movs	r1, #3
 800143a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800143e:	4b0b      	ldr	r3, [pc, #44]	; (800146c <main+0x10b4>)
 8001440:	881b      	ldrh	r3, [r3, #0]
 8001442:	1c5a      	adds	r2, r3, #1
 8001444:	b291      	uxth	r1, r2
 8001446:	4a09      	ldr	r2, [pc, #36]	; (800146c <main+0x10b4>)
 8001448:	8011      	strh	r1, [r2, #0]
 800144a:	461a      	mov	r2, r3
 800144c:	4b08      	ldr	r3, [pc, #32]	; (8001470 <main+0x10b8>)
 800144e:	2100      	movs	r1, #0
 8001450:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001454:	4b05      	ldr	r3, [pc, #20]	; (800146c <main+0x10b4>)
 8001456:	881b      	ldrh	r3, [r3, #0]
 8001458:	1c5a      	adds	r2, r3, #1
 800145a:	b291      	uxth	r1, r2
 800145c:	4a03      	ldr	r2, [pc, #12]	; (800146c <main+0x10b4>)
 800145e:	8011      	strh	r1, [r2, #0]
 8001460:	461a      	mov	r2, r3
 8001462:	4b03      	ldr	r3, [pc, #12]	; (8001470 <main+0x10b8>)
 8001464:	2103      	movs	r1, #3
 8001466:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 800146a:	e2f4      	b.n	8001a56 <main+0x169e>
 800146c:	200005aa 	.word	0x200005aa
 8001470:	200007cc 	.word	0x200007cc
      case '3': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3;
 8001474:	4b95      	ldr	r3, [pc, #596]	; (80016cc <main+0x1314>)
 8001476:	881b      	ldrh	r3, [r3, #0]
 8001478:	1c5a      	adds	r2, r3, #1
 800147a:	b291      	uxth	r1, r2
 800147c:	4a93      	ldr	r2, [pc, #588]	; (80016cc <main+0x1314>)
 800147e:	8011      	strh	r1, [r2, #0]
 8001480:	461a      	mov	r2, r3
 8001482:	4b93      	ldr	r3, [pc, #588]	; (80016d0 <main+0x1318>)
 8001484:	2101      	movs	r1, #1
 8001486:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800148a:	4b90      	ldr	r3, [pc, #576]	; (80016cc <main+0x1314>)
 800148c:	881b      	ldrh	r3, [r3, #0]
 800148e:	1c5a      	adds	r2, r3, #1
 8001490:	b291      	uxth	r1, r2
 8001492:	4a8e      	ldr	r2, [pc, #568]	; (80016cc <main+0x1314>)
 8001494:	8011      	strh	r1, [r2, #0]
 8001496:	461a      	mov	r2, r3
 8001498:	4b8d      	ldr	r3, [pc, #564]	; (80016d0 <main+0x1318>)
 800149a:	2100      	movs	r1, #0
 800149c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80014a0:	4b8a      	ldr	r3, [pc, #552]	; (80016cc <main+0x1314>)
 80014a2:	881b      	ldrh	r3, [r3, #0]
 80014a4:	1c5a      	adds	r2, r3, #1
 80014a6:	b291      	uxth	r1, r2
 80014a8:	4a88      	ldr	r2, [pc, #544]	; (80016cc <main+0x1314>)
 80014aa:	8011      	strh	r1, [r2, #0]
 80014ac:	461a      	mov	r2, r3
 80014ae:	4b88      	ldr	r3, [pc, #544]	; (80016d0 <main+0x1318>)
 80014b0:	2101      	movs	r1, #1
 80014b2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80014b6:	4b85      	ldr	r3, [pc, #532]	; (80016cc <main+0x1314>)
 80014b8:	881b      	ldrh	r3, [r3, #0]
 80014ba:	1c5a      	adds	r2, r3, #1
 80014bc:	b291      	uxth	r1, r2
 80014be:	4a83      	ldr	r2, [pc, #524]	; (80016cc <main+0x1314>)
 80014c0:	8011      	strh	r1, [r2, #0]
 80014c2:	461a      	mov	r2, r3
 80014c4:	4b82      	ldr	r3, [pc, #520]	; (80016d0 <main+0x1318>)
 80014c6:	2100      	movs	r1, #0
 80014c8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80014cc:	4b7f      	ldr	r3, [pc, #508]	; (80016cc <main+0x1314>)
 80014ce:	881b      	ldrh	r3, [r3, #0]
 80014d0:	1c5a      	adds	r2, r3, #1
 80014d2:	b291      	uxth	r1, r2
 80014d4:	4a7d      	ldr	r2, [pc, #500]	; (80016cc <main+0x1314>)
 80014d6:	8011      	strh	r1, [r2, #0]
 80014d8:	461a      	mov	r2, r3
 80014da:	4b7d      	ldr	r3, [pc, #500]	; (80016d0 <main+0x1318>)
 80014dc:	2101      	movs	r1, #1
 80014de:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80014e2:	4b7a      	ldr	r3, [pc, #488]	; (80016cc <main+0x1314>)
 80014e4:	881b      	ldrh	r3, [r3, #0]
 80014e6:	1c5a      	adds	r2, r3, #1
 80014e8:	b291      	uxth	r1, r2
 80014ea:	4a78      	ldr	r2, [pc, #480]	; (80016cc <main+0x1314>)
 80014ec:	8011      	strh	r1, [r2, #0]
 80014ee:	461a      	mov	r2, r3
 80014f0:	4b77      	ldr	r3, [pc, #476]	; (80016d0 <main+0x1318>)
 80014f2:	2100      	movs	r1, #0
 80014f4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80014f8:	4b74      	ldr	r3, [pc, #464]	; (80016cc <main+0x1314>)
 80014fa:	881b      	ldrh	r3, [r3, #0]
 80014fc:	1c5a      	adds	r2, r3, #1
 80014fe:	b291      	uxth	r1, r2
 8001500:	4a72      	ldr	r2, [pc, #456]	; (80016cc <main+0x1314>)
 8001502:	8011      	strh	r1, [r2, #0]
 8001504:	461a      	mov	r2, r3
 8001506:	4b72      	ldr	r3, [pc, #456]	; (80016d0 <main+0x1318>)
 8001508:	2103      	movs	r1, #3
 800150a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800150e:	4b6f      	ldr	r3, [pc, #444]	; (80016cc <main+0x1314>)
 8001510:	881b      	ldrh	r3, [r3, #0]
 8001512:	1c5a      	adds	r2, r3, #1
 8001514:	b291      	uxth	r1, r2
 8001516:	4a6d      	ldr	r2, [pc, #436]	; (80016cc <main+0x1314>)
 8001518:	8011      	strh	r1, [r2, #0]
 800151a:	461a      	mov	r2, r3
 800151c:	4b6c      	ldr	r3, [pc, #432]	; (80016d0 <main+0x1318>)
 800151e:	2100      	movs	r1, #0
 8001520:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001524:	4b69      	ldr	r3, [pc, #420]	; (80016cc <main+0x1314>)
 8001526:	881b      	ldrh	r3, [r3, #0]
 8001528:	1c5a      	adds	r2, r3, #1
 800152a:	b291      	uxth	r1, r2
 800152c:	4a67      	ldr	r2, [pc, #412]	; (80016cc <main+0x1314>)
 800152e:	8011      	strh	r1, [r2, #0]
 8001530:	461a      	mov	r2, r3
 8001532:	4b67      	ldr	r3, [pc, #412]	; (80016d0 <main+0x1318>)
 8001534:	2103      	movs	r1, #3
 8001536:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 800153a:	e28c      	b.n	8001a56 <main+0x169e>
      case '4': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=3;
 800153c:	4b63      	ldr	r3, [pc, #396]	; (80016cc <main+0x1314>)
 800153e:	881b      	ldrh	r3, [r3, #0]
 8001540:	1c5a      	adds	r2, r3, #1
 8001542:	b291      	uxth	r1, r2
 8001544:	4a61      	ldr	r2, [pc, #388]	; (80016cc <main+0x1314>)
 8001546:	8011      	strh	r1, [r2, #0]
 8001548:	461a      	mov	r2, r3
 800154a:	4b61      	ldr	r3, [pc, #388]	; (80016d0 <main+0x1318>)
 800154c:	2101      	movs	r1, #1
 800154e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001552:	4b5e      	ldr	r3, [pc, #376]	; (80016cc <main+0x1314>)
 8001554:	881b      	ldrh	r3, [r3, #0]
 8001556:	1c5a      	adds	r2, r3, #1
 8001558:	b291      	uxth	r1, r2
 800155a:	4a5c      	ldr	r2, [pc, #368]	; (80016cc <main+0x1314>)
 800155c:	8011      	strh	r1, [r2, #0]
 800155e:	461a      	mov	r2, r3
 8001560:	4b5b      	ldr	r3, [pc, #364]	; (80016d0 <main+0x1318>)
 8001562:	2100      	movs	r1, #0
 8001564:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001568:	4b58      	ldr	r3, [pc, #352]	; (80016cc <main+0x1314>)
 800156a:	881b      	ldrh	r3, [r3, #0]
 800156c:	1c5a      	adds	r2, r3, #1
 800156e:	b291      	uxth	r1, r2
 8001570:	4a56      	ldr	r2, [pc, #344]	; (80016cc <main+0x1314>)
 8001572:	8011      	strh	r1, [r2, #0]
 8001574:	461a      	mov	r2, r3
 8001576:	4b56      	ldr	r3, [pc, #344]	; (80016d0 <main+0x1318>)
 8001578:	2101      	movs	r1, #1
 800157a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800157e:	4b53      	ldr	r3, [pc, #332]	; (80016cc <main+0x1314>)
 8001580:	881b      	ldrh	r3, [r3, #0]
 8001582:	1c5a      	adds	r2, r3, #1
 8001584:	b291      	uxth	r1, r2
 8001586:	4a51      	ldr	r2, [pc, #324]	; (80016cc <main+0x1314>)
 8001588:	8011      	strh	r1, [r2, #0]
 800158a:	461a      	mov	r2, r3
 800158c:	4b50      	ldr	r3, [pc, #320]	; (80016d0 <main+0x1318>)
 800158e:	2100      	movs	r1, #0
 8001590:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001594:	4b4d      	ldr	r3, [pc, #308]	; (80016cc <main+0x1314>)
 8001596:	881b      	ldrh	r3, [r3, #0]
 8001598:	1c5a      	adds	r2, r3, #1
 800159a:	b291      	uxth	r1, r2
 800159c:	4a4b      	ldr	r2, [pc, #300]	; (80016cc <main+0x1314>)
 800159e:	8011      	strh	r1, [r2, #0]
 80015a0:	461a      	mov	r2, r3
 80015a2:	4b4b      	ldr	r3, [pc, #300]	; (80016d0 <main+0x1318>)
 80015a4:	2101      	movs	r1, #1
 80015a6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80015aa:	4b48      	ldr	r3, [pc, #288]	; (80016cc <main+0x1314>)
 80015ac:	881b      	ldrh	r3, [r3, #0]
 80015ae:	1c5a      	adds	r2, r3, #1
 80015b0:	b291      	uxth	r1, r2
 80015b2:	4a46      	ldr	r2, [pc, #280]	; (80016cc <main+0x1314>)
 80015b4:	8011      	strh	r1, [r2, #0]
 80015b6:	461a      	mov	r2, r3
 80015b8:	4b45      	ldr	r3, [pc, #276]	; (80016d0 <main+0x1318>)
 80015ba:	2100      	movs	r1, #0
 80015bc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80015c0:	4b42      	ldr	r3, [pc, #264]	; (80016cc <main+0x1314>)
 80015c2:	881b      	ldrh	r3, [r3, #0]
 80015c4:	1c5a      	adds	r2, r3, #1
 80015c6:	b291      	uxth	r1, r2
 80015c8:	4a40      	ldr	r2, [pc, #256]	; (80016cc <main+0x1314>)
 80015ca:	8011      	strh	r1, [r2, #0]
 80015cc:	461a      	mov	r2, r3
 80015ce:	4b40      	ldr	r3, [pc, #256]	; (80016d0 <main+0x1318>)
 80015d0:	2101      	movs	r1, #1
 80015d2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80015d6:	4b3d      	ldr	r3, [pc, #244]	; (80016cc <main+0x1314>)
 80015d8:	881b      	ldrh	r3, [r3, #0]
 80015da:	1c5a      	adds	r2, r3, #1
 80015dc:	b291      	uxth	r1, r2
 80015de:	4a3b      	ldr	r2, [pc, #236]	; (80016cc <main+0x1314>)
 80015e0:	8011      	strh	r1, [r2, #0]
 80015e2:	461a      	mov	r2, r3
 80015e4:	4b3a      	ldr	r3, [pc, #232]	; (80016d0 <main+0x1318>)
 80015e6:	2100      	movs	r1, #0
 80015e8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80015ec:	4b37      	ldr	r3, [pc, #220]	; (80016cc <main+0x1314>)
 80015ee:	881b      	ldrh	r3, [r3, #0]
 80015f0:	1c5a      	adds	r2, r3, #1
 80015f2:	b291      	uxth	r1, r2
 80015f4:	4a35      	ldr	r2, [pc, #212]	; (80016cc <main+0x1314>)
 80015f6:	8011      	strh	r1, [r2, #0]
 80015f8:	461a      	mov	r2, r3
 80015fa:	4b35      	ldr	r3, [pc, #212]	; (80016d0 <main+0x1318>)
 80015fc:	2103      	movs	r1, #3
 80015fe:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001602:	e228      	b.n	8001a56 <main+0x169e>
      case '5': MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8001604:	4b31      	ldr	r3, [pc, #196]	; (80016cc <main+0x1314>)
 8001606:	881b      	ldrh	r3, [r3, #0]
 8001608:	1c5a      	adds	r2, r3, #1
 800160a:	b291      	uxth	r1, r2
 800160c:	4a2f      	ldr	r2, [pc, #188]	; (80016cc <main+0x1314>)
 800160e:	8011      	strh	r1, [r2, #0]
 8001610:	461a      	mov	r2, r3
 8001612:	4b2f      	ldr	r3, [pc, #188]	; (80016d0 <main+0x1318>)
 8001614:	2101      	movs	r1, #1
 8001616:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800161a:	4b2c      	ldr	r3, [pc, #176]	; (80016cc <main+0x1314>)
 800161c:	881b      	ldrh	r3, [r3, #0]
 800161e:	1c5a      	adds	r2, r3, #1
 8001620:	b291      	uxth	r1, r2
 8001622:	4a2a      	ldr	r2, [pc, #168]	; (80016cc <main+0x1314>)
 8001624:	8011      	strh	r1, [r2, #0]
 8001626:	461a      	mov	r2, r3
 8001628:	4b29      	ldr	r3, [pc, #164]	; (80016d0 <main+0x1318>)
 800162a:	2100      	movs	r1, #0
 800162c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001630:	4b26      	ldr	r3, [pc, #152]	; (80016cc <main+0x1314>)
 8001632:	881b      	ldrh	r3, [r3, #0]
 8001634:	1c5a      	adds	r2, r3, #1
 8001636:	b291      	uxth	r1, r2
 8001638:	4a24      	ldr	r2, [pc, #144]	; (80016cc <main+0x1314>)
 800163a:	8011      	strh	r1, [r2, #0]
 800163c:	461a      	mov	r2, r3
 800163e:	4b24      	ldr	r3, [pc, #144]	; (80016d0 <main+0x1318>)
 8001640:	2101      	movs	r1, #1
 8001642:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001646:	4b21      	ldr	r3, [pc, #132]	; (80016cc <main+0x1314>)
 8001648:	881b      	ldrh	r3, [r3, #0]
 800164a:	1c5a      	adds	r2, r3, #1
 800164c:	b291      	uxth	r1, r2
 800164e:	4a1f      	ldr	r2, [pc, #124]	; (80016cc <main+0x1314>)
 8001650:	8011      	strh	r1, [r2, #0]
 8001652:	461a      	mov	r2, r3
 8001654:	4b1e      	ldr	r3, [pc, #120]	; (80016d0 <main+0x1318>)
 8001656:	2100      	movs	r1, #0
 8001658:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800165c:	4b1b      	ldr	r3, [pc, #108]	; (80016cc <main+0x1314>)
 800165e:	881b      	ldrh	r3, [r3, #0]
 8001660:	1c5a      	adds	r2, r3, #1
 8001662:	b291      	uxth	r1, r2
 8001664:	4a19      	ldr	r2, [pc, #100]	; (80016cc <main+0x1314>)
 8001666:	8011      	strh	r1, [r2, #0]
 8001668:	461a      	mov	r2, r3
 800166a:	4b19      	ldr	r3, [pc, #100]	; (80016d0 <main+0x1318>)
 800166c:	2101      	movs	r1, #1
 800166e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001672:	4b16      	ldr	r3, [pc, #88]	; (80016cc <main+0x1314>)
 8001674:	881b      	ldrh	r3, [r3, #0]
 8001676:	1c5a      	adds	r2, r3, #1
 8001678:	b291      	uxth	r1, r2
 800167a:	4a14      	ldr	r2, [pc, #80]	; (80016cc <main+0x1314>)
 800167c:	8011      	strh	r1, [r2, #0]
 800167e:	461a      	mov	r2, r3
 8001680:	4b13      	ldr	r3, [pc, #76]	; (80016d0 <main+0x1318>)
 8001682:	2100      	movs	r1, #0
 8001684:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001688:	4b10      	ldr	r3, [pc, #64]	; (80016cc <main+0x1314>)
 800168a:	881b      	ldrh	r3, [r3, #0]
 800168c:	1c5a      	adds	r2, r3, #1
 800168e:	b291      	uxth	r1, r2
 8001690:	4a0e      	ldr	r2, [pc, #56]	; (80016cc <main+0x1314>)
 8001692:	8011      	strh	r1, [r2, #0]
 8001694:	461a      	mov	r2, r3
 8001696:	4b0e      	ldr	r3, [pc, #56]	; (80016d0 <main+0x1318>)
 8001698:	2101      	movs	r1, #1
 800169a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800169e:	4b0b      	ldr	r3, [pc, #44]	; (80016cc <main+0x1314>)
 80016a0:	881b      	ldrh	r3, [r3, #0]
 80016a2:	1c5a      	adds	r2, r3, #1
 80016a4:	b291      	uxth	r1, r2
 80016a6:	4a09      	ldr	r2, [pc, #36]	; (80016cc <main+0x1314>)
 80016a8:	8011      	strh	r1, [r2, #0]
 80016aa:	461a      	mov	r2, r3
 80016ac:	4b08      	ldr	r3, [pc, #32]	; (80016d0 <main+0x1318>)
 80016ae:	2100      	movs	r1, #0
 80016b0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80016b4:	4b05      	ldr	r3, [pc, #20]	; (80016cc <main+0x1314>)
 80016b6:	881b      	ldrh	r3, [r3, #0]
 80016b8:	1c5a      	adds	r2, r3, #1
 80016ba:	b291      	uxth	r1, r2
 80016bc:	4a03      	ldr	r2, [pc, #12]	; (80016cc <main+0x1314>)
 80016be:	8011      	strh	r1, [r2, #0]
 80016c0:	461a      	mov	r2, r3
 80016c2:	4b03      	ldr	r3, [pc, #12]	; (80016d0 <main+0x1318>)
 80016c4:	2101      	movs	r1, #1
 80016c6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80016ca:	e1c4      	b.n	8001a56 <main+0x169e>
 80016cc:	200005aa 	.word	0x200005aa
 80016d0:	200007cc 	.word	0x200007cc
      case '6': MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 80016d4:	4b95      	ldr	r3, [pc, #596]	; (800192c <main+0x1574>)
 80016d6:	881b      	ldrh	r3, [r3, #0]
 80016d8:	1c5a      	adds	r2, r3, #1
 80016da:	b291      	uxth	r1, r2
 80016dc:	4a93      	ldr	r2, [pc, #588]	; (800192c <main+0x1574>)
 80016de:	8011      	strh	r1, [r2, #0]
 80016e0:	461a      	mov	r2, r3
 80016e2:	4b93      	ldr	r3, [pc, #588]	; (8001930 <main+0x1578>)
 80016e4:	2103      	movs	r1, #3
 80016e6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80016ea:	4b90      	ldr	r3, [pc, #576]	; (800192c <main+0x1574>)
 80016ec:	881b      	ldrh	r3, [r3, #0]
 80016ee:	1c5a      	adds	r2, r3, #1
 80016f0:	b291      	uxth	r1, r2
 80016f2:	4a8e      	ldr	r2, [pc, #568]	; (800192c <main+0x1574>)
 80016f4:	8011      	strh	r1, [r2, #0]
 80016f6:	461a      	mov	r2, r3
 80016f8:	4b8d      	ldr	r3, [pc, #564]	; (8001930 <main+0x1578>)
 80016fa:	2100      	movs	r1, #0
 80016fc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001700:	4b8a      	ldr	r3, [pc, #552]	; (800192c <main+0x1574>)
 8001702:	881b      	ldrh	r3, [r3, #0]
 8001704:	1c5a      	adds	r2, r3, #1
 8001706:	b291      	uxth	r1, r2
 8001708:	4a88      	ldr	r2, [pc, #544]	; (800192c <main+0x1574>)
 800170a:	8011      	strh	r1, [r2, #0]
 800170c:	461a      	mov	r2, r3
 800170e:	4b88      	ldr	r3, [pc, #544]	; (8001930 <main+0x1578>)
 8001710:	2101      	movs	r1, #1
 8001712:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001716:	4b85      	ldr	r3, [pc, #532]	; (800192c <main+0x1574>)
 8001718:	881b      	ldrh	r3, [r3, #0]
 800171a:	1c5a      	adds	r2, r3, #1
 800171c:	b291      	uxth	r1, r2
 800171e:	4a83      	ldr	r2, [pc, #524]	; (800192c <main+0x1574>)
 8001720:	8011      	strh	r1, [r2, #0]
 8001722:	461a      	mov	r2, r3
 8001724:	4b82      	ldr	r3, [pc, #520]	; (8001930 <main+0x1578>)
 8001726:	2100      	movs	r1, #0
 8001728:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800172c:	4b7f      	ldr	r3, [pc, #508]	; (800192c <main+0x1574>)
 800172e:	881b      	ldrh	r3, [r3, #0]
 8001730:	1c5a      	adds	r2, r3, #1
 8001732:	b291      	uxth	r1, r2
 8001734:	4a7d      	ldr	r2, [pc, #500]	; (800192c <main+0x1574>)
 8001736:	8011      	strh	r1, [r2, #0]
 8001738:	461a      	mov	r2, r3
 800173a:	4b7d      	ldr	r3, [pc, #500]	; (8001930 <main+0x1578>)
 800173c:	2101      	movs	r1, #1
 800173e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001742:	4b7a      	ldr	r3, [pc, #488]	; (800192c <main+0x1574>)
 8001744:	881b      	ldrh	r3, [r3, #0]
 8001746:	1c5a      	adds	r2, r3, #1
 8001748:	b291      	uxth	r1, r2
 800174a:	4a78      	ldr	r2, [pc, #480]	; (800192c <main+0x1574>)
 800174c:	8011      	strh	r1, [r2, #0]
 800174e:	461a      	mov	r2, r3
 8001750:	4b77      	ldr	r3, [pc, #476]	; (8001930 <main+0x1578>)
 8001752:	2100      	movs	r1, #0
 8001754:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001758:	4b74      	ldr	r3, [pc, #464]	; (800192c <main+0x1574>)
 800175a:	881b      	ldrh	r3, [r3, #0]
 800175c:	1c5a      	adds	r2, r3, #1
 800175e:	b291      	uxth	r1, r2
 8001760:	4a72      	ldr	r2, [pc, #456]	; (800192c <main+0x1574>)
 8001762:	8011      	strh	r1, [r2, #0]
 8001764:	461a      	mov	r2, r3
 8001766:	4b72      	ldr	r3, [pc, #456]	; (8001930 <main+0x1578>)
 8001768:	2101      	movs	r1, #1
 800176a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800176e:	4b6f      	ldr	r3, [pc, #444]	; (800192c <main+0x1574>)
 8001770:	881b      	ldrh	r3, [r3, #0]
 8001772:	1c5a      	adds	r2, r3, #1
 8001774:	b291      	uxth	r1, r2
 8001776:	4a6d      	ldr	r2, [pc, #436]	; (800192c <main+0x1574>)
 8001778:	8011      	strh	r1, [r2, #0]
 800177a:	461a      	mov	r2, r3
 800177c:	4b6c      	ldr	r3, [pc, #432]	; (8001930 <main+0x1578>)
 800177e:	2100      	movs	r1, #0
 8001780:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001784:	4b69      	ldr	r3, [pc, #420]	; (800192c <main+0x1574>)
 8001786:	881b      	ldrh	r3, [r3, #0]
 8001788:	1c5a      	adds	r2, r3, #1
 800178a:	b291      	uxth	r1, r2
 800178c:	4a67      	ldr	r2, [pc, #412]	; (800192c <main+0x1574>)
 800178e:	8011      	strh	r1, [r2, #0]
 8001790:	461a      	mov	r2, r3
 8001792:	4b67      	ldr	r3, [pc, #412]	; (8001930 <main+0x1578>)
 8001794:	2101      	movs	r1, #1
 8001796:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 800179a:	e15c      	b.n	8001a56 <main+0x169e>
      case '7': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 800179c:	4b63      	ldr	r3, [pc, #396]	; (800192c <main+0x1574>)
 800179e:	881b      	ldrh	r3, [r3, #0]
 80017a0:	1c5a      	adds	r2, r3, #1
 80017a2:	b291      	uxth	r1, r2
 80017a4:	4a61      	ldr	r2, [pc, #388]	; (800192c <main+0x1574>)
 80017a6:	8011      	strh	r1, [r2, #0]
 80017a8:	461a      	mov	r2, r3
 80017aa:	4b61      	ldr	r3, [pc, #388]	; (8001930 <main+0x1578>)
 80017ac:	2103      	movs	r1, #3
 80017ae:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80017b2:	4b5e      	ldr	r3, [pc, #376]	; (800192c <main+0x1574>)
 80017b4:	881b      	ldrh	r3, [r3, #0]
 80017b6:	1c5a      	adds	r2, r3, #1
 80017b8:	b291      	uxth	r1, r2
 80017ba:	4a5c      	ldr	r2, [pc, #368]	; (800192c <main+0x1574>)
 80017bc:	8011      	strh	r1, [r2, #0]
 80017be:	461a      	mov	r2, r3
 80017c0:	4b5b      	ldr	r3, [pc, #364]	; (8001930 <main+0x1578>)
 80017c2:	2100      	movs	r1, #0
 80017c4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80017c8:	4b58      	ldr	r3, [pc, #352]	; (800192c <main+0x1574>)
 80017ca:	881b      	ldrh	r3, [r3, #0]
 80017cc:	1c5a      	adds	r2, r3, #1
 80017ce:	b291      	uxth	r1, r2
 80017d0:	4a56      	ldr	r2, [pc, #344]	; (800192c <main+0x1574>)
 80017d2:	8011      	strh	r1, [r2, #0]
 80017d4:	461a      	mov	r2, r3
 80017d6:	4b56      	ldr	r3, [pc, #344]	; (8001930 <main+0x1578>)
 80017d8:	2103      	movs	r1, #3
 80017da:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80017de:	4b53      	ldr	r3, [pc, #332]	; (800192c <main+0x1574>)
 80017e0:	881b      	ldrh	r3, [r3, #0]
 80017e2:	1c5a      	adds	r2, r3, #1
 80017e4:	b291      	uxth	r1, r2
 80017e6:	4a51      	ldr	r2, [pc, #324]	; (800192c <main+0x1574>)
 80017e8:	8011      	strh	r1, [r2, #0]
 80017ea:	461a      	mov	r2, r3
 80017ec:	4b50      	ldr	r3, [pc, #320]	; (8001930 <main+0x1578>)
 80017ee:	2100      	movs	r1, #0
 80017f0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80017f4:	4b4d      	ldr	r3, [pc, #308]	; (800192c <main+0x1574>)
 80017f6:	881b      	ldrh	r3, [r3, #0]
 80017f8:	1c5a      	adds	r2, r3, #1
 80017fa:	b291      	uxth	r1, r2
 80017fc:	4a4b      	ldr	r2, [pc, #300]	; (800192c <main+0x1574>)
 80017fe:	8011      	strh	r1, [r2, #0]
 8001800:	461a      	mov	r2, r3
 8001802:	4b4b      	ldr	r3, [pc, #300]	; (8001930 <main+0x1578>)
 8001804:	2101      	movs	r1, #1
 8001806:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800180a:	4b48      	ldr	r3, [pc, #288]	; (800192c <main+0x1574>)
 800180c:	881b      	ldrh	r3, [r3, #0]
 800180e:	1c5a      	adds	r2, r3, #1
 8001810:	b291      	uxth	r1, r2
 8001812:	4a46      	ldr	r2, [pc, #280]	; (800192c <main+0x1574>)
 8001814:	8011      	strh	r1, [r2, #0]
 8001816:	461a      	mov	r2, r3
 8001818:	4b45      	ldr	r3, [pc, #276]	; (8001930 <main+0x1578>)
 800181a:	2100      	movs	r1, #0
 800181c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001820:	4b42      	ldr	r3, [pc, #264]	; (800192c <main+0x1574>)
 8001822:	881b      	ldrh	r3, [r3, #0]
 8001824:	1c5a      	adds	r2, r3, #1
 8001826:	b291      	uxth	r1, r2
 8001828:	4a40      	ldr	r2, [pc, #256]	; (800192c <main+0x1574>)
 800182a:	8011      	strh	r1, [r2, #0]
 800182c:	461a      	mov	r2, r3
 800182e:	4b40      	ldr	r3, [pc, #256]	; (8001930 <main+0x1578>)
 8001830:	2101      	movs	r1, #1
 8001832:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001836:	4b3d      	ldr	r3, [pc, #244]	; (800192c <main+0x1574>)
 8001838:	881b      	ldrh	r3, [r3, #0]
 800183a:	1c5a      	adds	r2, r3, #1
 800183c:	b291      	uxth	r1, r2
 800183e:	4a3b      	ldr	r2, [pc, #236]	; (800192c <main+0x1574>)
 8001840:	8011      	strh	r1, [r2, #0]
 8001842:	461a      	mov	r2, r3
 8001844:	4b3a      	ldr	r3, [pc, #232]	; (8001930 <main+0x1578>)
 8001846:	2100      	movs	r1, #0
 8001848:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800184c:	4b37      	ldr	r3, [pc, #220]	; (800192c <main+0x1574>)
 800184e:	881b      	ldrh	r3, [r3, #0]
 8001850:	1c5a      	adds	r2, r3, #1
 8001852:	b291      	uxth	r1, r2
 8001854:	4a35      	ldr	r2, [pc, #212]	; (800192c <main+0x1574>)
 8001856:	8011      	strh	r1, [r2, #0]
 8001858:	461a      	mov	r2, r3
 800185a:	4b35      	ldr	r3, [pc, #212]	; (8001930 <main+0x1578>)
 800185c:	2101      	movs	r1, #1
 800185e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001862:	e0f8      	b.n	8001a56 <main+0x169e>
      case '8': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1; MC1[j++]=0; MC1[j++]=1;
 8001864:	4b31      	ldr	r3, [pc, #196]	; (800192c <main+0x1574>)
 8001866:	881b      	ldrh	r3, [r3, #0]
 8001868:	1c5a      	adds	r2, r3, #1
 800186a:	b291      	uxth	r1, r2
 800186c:	4a2f      	ldr	r2, [pc, #188]	; (800192c <main+0x1574>)
 800186e:	8011      	strh	r1, [r2, #0]
 8001870:	461a      	mov	r2, r3
 8001872:	4b2f      	ldr	r3, [pc, #188]	; (8001930 <main+0x1578>)
 8001874:	2103      	movs	r1, #3
 8001876:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800187a:	4b2c      	ldr	r3, [pc, #176]	; (800192c <main+0x1574>)
 800187c:	881b      	ldrh	r3, [r3, #0]
 800187e:	1c5a      	adds	r2, r3, #1
 8001880:	b291      	uxth	r1, r2
 8001882:	4a2a      	ldr	r2, [pc, #168]	; (800192c <main+0x1574>)
 8001884:	8011      	strh	r1, [r2, #0]
 8001886:	461a      	mov	r2, r3
 8001888:	4b29      	ldr	r3, [pc, #164]	; (8001930 <main+0x1578>)
 800188a:	2100      	movs	r1, #0
 800188c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001890:	4b26      	ldr	r3, [pc, #152]	; (800192c <main+0x1574>)
 8001892:	881b      	ldrh	r3, [r3, #0]
 8001894:	1c5a      	adds	r2, r3, #1
 8001896:	b291      	uxth	r1, r2
 8001898:	4a24      	ldr	r2, [pc, #144]	; (800192c <main+0x1574>)
 800189a:	8011      	strh	r1, [r2, #0]
 800189c:	461a      	mov	r2, r3
 800189e:	4b24      	ldr	r3, [pc, #144]	; (8001930 <main+0x1578>)
 80018a0:	2103      	movs	r1, #3
 80018a2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80018a6:	4b21      	ldr	r3, [pc, #132]	; (800192c <main+0x1574>)
 80018a8:	881b      	ldrh	r3, [r3, #0]
 80018aa:	1c5a      	adds	r2, r3, #1
 80018ac:	b291      	uxth	r1, r2
 80018ae:	4a1f      	ldr	r2, [pc, #124]	; (800192c <main+0x1574>)
 80018b0:	8011      	strh	r1, [r2, #0]
 80018b2:	461a      	mov	r2, r3
 80018b4:	4b1e      	ldr	r3, [pc, #120]	; (8001930 <main+0x1578>)
 80018b6:	2100      	movs	r1, #0
 80018b8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80018bc:	4b1b      	ldr	r3, [pc, #108]	; (800192c <main+0x1574>)
 80018be:	881b      	ldrh	r3, [r3, #0]
 80018c0:	1c5a      	adds	r2, r3, #1
 80018c2:	b291      	uxth	r1, r2
 80018c4:	4a19      	ldr	r2, [pc, #100]	; (800192c <main+0x1574>)
 80018c6:	8011      	strh	r1, [r2, #0]
 80018c8:	461a      	mov	r2, r3
 80018ca:	4b19      	ldr	r3, [pc, #100]	; (8001930 <main+0x1578>)
 80018cc:	2103      	movs	r1, #3
 80018ce:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80018d2:	4b16      	ldr	r3, [pc, #88]	; (800192c <main+0x1574>)
 80018d4:	881b      	ldrh	r3, [r3, #0]
 80018d6:	1c5a      	adds	r2, r3, #1
 80018d8:	b291      	uxth	r1, r2
 80018da:	4a14      	ldr	r2, [pc, #80]	; (800192c <main+0x1574>)
 80018dc:	8011      	strh	r1, [r2, #0]
 80018de:	461a      	mov	r2, r3
 80018e0:	4b13      	ldr	r3, [pc, #76]	; (8001930 <main+0x1578>)
 80018e2:	2100      	movs	r1, #0
 80018e4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80018e8:	4b10      	ldr	r3, [pc, #64]	; (800192c <main+0x1574>)
 80018ea:	881b      	ldrh	r3, [r3, #0]
 80018ec:	1c5a      	adds	r2, r3, #1
 80018ee:	b291      	uxth	r1, r2
 80018f0:	4a0e      	ldr	r2, [pc, #56]	; (800192c <main+0x1574>)
 80018f2:	8011      	strh	r1, [r2, #0]
 80018f4:	461a      	mov	r2, r3
 80018f6:	4b0e      	ldr	r3, [pc, #56]	; (8001930 <main+0x1578>)
 80018f8:	2101      	movs	r1, #1
 80018fa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80018fe:	4b0b      	ldr	r3, [pc, #44]	; (800192c <main+0x1574>)
 8001900:	881b      	ldrh	r3, [r3, #0]
 8001902:	1c5a      	adds	r2, r3, #1
 8001904:	b291      	uxth	r1, r2
 8001906:	4a09      	ldr	r2, [pc, #36]	; (800192c <main+0x1574>)
 8001908:	8011      	strh	r1, [r2, #0]
 800190a:	461a      	mov	r2, r3
 800190c:	4b08      	ldr	r3, [pc, #32]	; (8001930 <main+0x1578>)
 800190e:	2100      	movs	r1, #0
 8001910:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001914:	4b05      	ldr	r3, [pc, #20]	; (800192c <main+0x1574>)
 8001916:	881b      	ldrh	r3, [r3, #0]
 8001918:	1c5a      	adds	r2, r3, #1
 800191a:	b291      	uxth	r1, r2
 800191c:	4a03      	ldr	r2, [pc, #12]	; (800192c <main+0x1574>)
 800191e:	8011      	strh	r1, [r2, #0]
 8001920:	461a      	mov	r2, r3
 8001922:	4b03      	ldr	r3, [pc, #12]	; (8001930 <main+0x1578>)
 8001924:	2101      	movs	r1, #1
 8001926:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 800192a:	e094      	b.n	8001a56 <main+0x169e>
 800192c:	200005aa 	.word	0x200005aa
 8001930:	200007cc 	.word	0x200007cc
      case '9': MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=3; MC1[j++]=0; MC1[j++]=1;
 8001934:	4b80      	ldr	r3, [pc, #512]	; (8001b38 <main+0x1780>)
 8001936:	881b      	ldrh	r3, [r3, #0]
 8001938:	1c5a      	adds	r2, r3, #1
 800193a:	b291      	uxth	r1, r2
 800193c:	4a7e      	ldr	r2, [pc, #504]	; (8001b38 <main+0x1780>)
 800193e:	8011      	strh	r1, [r2, #0]
 8001940:	461a      	mov	r2, r3
 8001942:	4b7e      	ldr	r3, [pc, #504]	; (8001b3c <main+0x1784>)
 8001944:	2103      	movs	r1, #3
 8001946:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800194a:	4b7b      	ldr	r3, [pc, #492]	; (8001b38 <main+0x1780>)
 800194c:	881b      	ldrh	r3, [r3, #0]
 800194e:	1c5a      	adds	r2, r3, #1
 8001950:	b291      	uxth	r1, r2
 8001952:	4a79      	ldr	r2, [pc, #484]	; (8001b38 <main+0x1780>)
 8001954:	8011      	strh	r1, [r2, #0]
 8001956:	461a      	mov	r2, r3
 8001958:	4b78      	ldr	r3, [pc, #480]	; (8001b3c <main+0x1784>)
 800195a:	2100      	movs	r1, #0
 800195c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001960:	4b75      	ldr	r3, [pc, #468]	; (8001b38 <main+0x1780>)
 8001962:	881b      	ldrh	r3, [r3, #0]
 8001964:	1c5a      	adds	r2, r3, #1
 8001966:	b291      	uxth	r1, r2
 8001968:	4a73      	ldr	r2, [pc, #460]	; (8001b38 <main+0x1780>)
 800196a:	8011      	strh	r1, [r2, #0]
 800196c:	461a      	mov	r2, r3
 800196e:	4b73      	ldr	r3, [pc, #460]	; (8001b3c <main+0x1784>)
 8001970:	2103      	movs	r1, #3
 8001972:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001976:	4b70      	ldr	r3, [pc, #448]	; (8001b38 <main+0x1780>)
 8001978:	881b      	ldrh	r3, [r3, #0]
 800197a:	1c5a      	adds	r2, r3, #1
 800197c:	b291      	uxth	r1, r2
 800197e:	4a6e      	ldr	r2, [pc, #440]	; (8001b38 <main+0x1780>)
 8001980:	8011      	strh	r1, [r2, #0]
 8001982:	461a      	mov	r2, r3
 8001984:	4b6d      	ldr	r3, [pc, #436]	; (8001b3c <main+0x1784>)
 8001986:	2100      	movs	r1, #0
 8001988:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800198c:	4b6a      	ldr	r3, [pc, #424]	; (8001b38 <main+0x1780>)
 800198e:	881b      	ldrh	r3, [r3, #0]
 8001990:	1c5a      	adds	r2, r3, #1
 8001992:	b291      	uxth	r1, r2
 8001994:	4a68      	ldr	r2, [pc, #416]	; (8001b38 <main+0x1780>)
 8001996:	8011      	strh	r1, [r2, #0]
 8001998:	461a      	mov	r2, r3
 800199a:	4b68      	ldr	r3, [pc, #416]	; (8001b3c <main+0x1784>)
 800199c:	2103      	movs	r1, #3
 800199e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80019a2:	4b65      	ldr	r3, [pc, #404]	; (8001b38 <main+0x1780>)
 80019a4:	881b      	ldrh	r3, [r3, #0]
 80019a6:	1c5a      	adds	r2, r3, #1
 80019a8:	b291      	uxth	r1, r2
 80019aa:	4a63      	ldr	r2, [pc, #396]	; (8001b38 <main+0x1780>)
 80019ac:	8011      	strh	r1, [r2, #0]
 80019ae:	461a      	mov	r2, r3
 80019b0:	4b62      	ldr	r3, [pc, #392]	; (8001b3c <main+0x1784>)
 80019b2:	2100      	movs	r1, #0
 80019b4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80019b8:	4b5f      	ldr	r3, [pc, #380]	; (8001b38 <main+0x1780>)
 80019ba:	881b      	ldrh	r3, [r3, #0]
 80019bc:	1c5a      	adds	r2, r3, #1
 80019be:	b291      	uxth	r1, r2
 80019c0:	4a5d      	ldr	r2, [pc, #372]	; (8001b38 <main+0x1780>)
 80019c2:	8011      	strh	r1, [r2, #0]
 80019c4:	461a      	mov	r2, r3
 80019c6:	4b5d      	ldr	r3, [pc, #372]	; (8001b3c <main+0x1784>)
 80019c8:	2103      	movs	r1, #3
 80019ca:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80019ce:	4b5a      	ldr	r3, [pc, #360]	; (8001b38 <main+0x1780>)
 80019d0:	881b      	ldrh	r3, [r3, #0]
 80019d2:	1c5a      	adds	r2, r3, #1
 80019d4:	b291      	uxth	r1, r2
 80019d6:	4a58      	ldr	r2, [pc, #352]	; (8001b38 <main+0x1780>)
 80019d8:	8011      	strh	r1, [r2, #0]
 80019da:	461a      	mov	r2, r3
 80019dc:	4b57      	ldr	r3, [pc, #348]	; (8001b3c <main+0x1784>)
 80019de:	2100      	movs	r1, #0
 80019e0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80019e4:	4b54      	ldr	r3, [pc, #336]	; (8001b38 <main+0x1780>)
 80019e6:	881b      	ldrh	r3, [r3, #0]
 80019e8:	1c5a      	adds	r2, r3, #1
 80019ea:	b291      	uxth	r1, r2
 80019ec:	4a52      	ldr	r2, [pc, #328]	; (8001b38 <main+0x1780>)
 80019ee:	8011      	strh	r1, [r2, #0]
 80019f0:	461a      	mov	r2, r3
 80019f2:	4b52      	ldr	r3, [pc, #328]	; (8001b3c <main+0x1784>)
 80019f4:	2101      	movs	r1, #1
 80019f6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 80019fa:	e02c      	b.n	8001a56 <main+0x169e>
      case ' ': MC1[j++]=0; MC1[j++]=0; MC1[j++]=0; MC1[j++]=0;
 80019fc:	4b4e      	ldr	r3, [pc, #312]	; (8001b38 <main+0x1780>)
 80019fe:	881b      	ldrh	r3, [r3, #0]
 8001a00:	1c5a      	adds	r2, r3, #1
 8001a02:	b291      	uxth	r1, r2
 8001a04:	4a4c      	ldr	r2, [pc, #304]	; (8001b38 <main+0x1780>)
 8001a06:	8011      	strh	r1, [r2, #0]
 8001a08:	461a      	mov	r2, r3
 8001a0a:	4b4c      	ldr	r3, [pc, #304]	; (8001b3c <main+0x1784>)
 8001a0c:	2100      	movs	r1, #0
 8001a0e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001a12:	4b49      	ldr	r3, [pc, #292]	; (8001b38 <main+0x1780>)
 8001a14:	881b      	ldrh	r3, [r3, #0]
 8001a16:	1c5a      	adds	r2, r3, #1
 8001a18:	b291      	uxth	r1, r2
 8001a1a:	4a47      	ldr	r2, [pc, #284]	; (8001b38 <main+0x1780>)
 8001a1c:	8011      	strh	r1, [r2, #0]
 8001a1e:	461a      	mov	r2, r3
 8001a20:	4b46      	ldr	r3, [pc, #280]	; (8001b3c <main+0x1784>)
 8001a22:	2100      	movs	r1, #0
 8001a24:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001a28:	4b43      	ldr	r3, [pc, #268]	; (8001b38 <main+0x1780>)
 8001a2a:	881b      	ldrh	r3, [r3, #0]
 8001a2c:	1c5a      	adds	r2, r3, #1
 8001a2e:	b291      	uxth	r1, r2
 8001a30:	4a41      	ldr	r2, [pc, #260]	; (8001b38 <main+0x1780>)
 8001a32:	8011      	strh	r1, [r2, #0]
 8001a34:	461a      	mov	r2, r3
 8001a36:	4b41      	ldr	r3, [pc, #260]	; (8001b3c <main+0x1784>)
 8001a38:	2100      	movs	r1, #0
 8001a3a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001a3e:	4b3e      	ldr	r3, [pc, #248]	; (8001b38 <main+0x1780>)
 8001a40:	881b      	ldrh	r3, [r3, #0]
 8001a42:	1c5a      	adds	r2, r3, #1
 8001a44:	b291      	uxth	r1, r2
 8001a46:	4a3c      	ldr	r2, [pc, #240]	; (8001b38 <main+0x1780>)
 8001a48:	8011      	strh	r1, [r2, #0]
 8001a4a:	461a      	mov	r2, r3
 8001a4c:	4b3b      	ldr	r3, [pc, #236]	; (8001b3c <main+0x1784>)
 8001a4e:	2100      	movs	r1, #0
 8001a50:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
              break;
 8001a54:	bf00      	nop
    }
    MC1[j++]=0; MC1[j++]=0; MC1[j++]=0;
 8001a56:	4b38      	ldr	r3, [pc, #224]	; (8001b38 <main+0x1780>)
 8001a58:	881b      	ldrh	r3, [r3, #0]
 8001a5a:	1c5a      	adds	r2, r3, #1
 8001a5c:	b291      	uxth	r1, r2
 8001a5e:	4a36      	ldr	r2, [pc, #216]	; (8001b38 <main+0x1780>)
 8001a60:	8011      	strh	r1, [r2, #0]
 8001a62:	461a      	mov	r2, r3
 8001a64:	4b35      	ldr	r3, [pc, #212]	; (8001b3c <main+0x1784>)
 8001a66:	2100      	movs	r1, #0
 8001a68:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001a6c:	4b32      	ldr	r3, [pc, #200]	; (8001b38 <main+0x1780>)
 8001a6e:	881b      	ldrh	r3, [r3, #0]
 8001a70:	1c5a      	adds	r2, r3, #1
 8001a72:	b291      	uxth	r1, r2
 8001a74:	4a30      	ldr	r2, [pc, #192]	; (8001b38 <main+0x1780>)
 8001a76:	8011      	strh	r1, [r2, #0]
 8001a78:	461a      	mov	r2, r3
 8001a7a:	4b30      	ldr	r3, [pc, #192]	; (8001b3c <main+0x1784>)
 8001a7c:	2100      	movs	r1, #0
 8001a7e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001a82:	4b2d      	ldr	r3, [pc, #180]	; (8001b38 <main+0x1780>)
 8001a84:	881b      	ldrh	r3, [r3, #0]
 8001a86:	1c5a      	adds	r2, r3, #1
 8001a88:	b291      	uxth	r1, r2
 8001a8a:	4a2b      	ldr	r2, [pc, #172]	; (8001b38 <main+0x1780>)
 8001a8c:	8011      	strh	r1, [r2, #0]
 8001a8e:	461a      	mov	r2, r3
 8001a90:	4b2a      	ldr	r3, [pc, #168]	; (8001b3c <main+0x1784>)
 8001a92:	2100      	movs	r1, #0
 8001a94:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
  for(i=0;str[i]!='\0';++i)
 8001a98:	4b29      	ldr	r3, [pc, #164]	; (8001b40 <main+0x1788>)
 8001a9a:	881b      	ldrh	r3, [r3, #0]
 8001a9c:	3301      	adds	r3, #1
 8001a9e:	b29a      	uxth	r2, r3
 8001aa0:	4b27      	ldr	r3, [pc, #156]	; (8001b40 <main+0x1788>)
 8001aa2:	801a      	strh	r2, [r3, #0]
 8001aa4:	4b26      	ldr	r3, [pc, #152]	; (8001b40 <main+0x1788>)
 8001aa6:	881b      	ldrh	r3, [r3, #0]
 8001aa8:	461a      	mov	r2, r3
 8001aaa:	4b26      	ldr	r3, [pc, #152]	; (8001b44 <main+0x178c>)
 8001aac:	5c9b      	ldrb	r3, [r3, r2]
 8001aae:	2b00      	cmp	r3, #0
 8001ab0:	f47e aca3 	bne.w	80003fa <main+0x42>
  }  
  j-=2;
 8001ab4:	4b20      	ldr	r3, [pc, #128]	; (8001b38 <main+0x1780>)
 8001ab6:	881b      	ldrh	r3, [r3, #0]
 8001ab8:	3b02      	subs	r3, #2
 8001aba:	b29a      	uxth	r2, r3
 8001abc:	4b1e      	ldr	r3, [pc, #120]	; (8001b38 <main+0x1780>)
 8001abe:	801a      	strh	r2, [r3, #0]

  while(1)
  {
    if(XMC_GPIO_GetInput(P1_14)==0&&f1==0&&f2==0)
 8001ac0:	210e      	movs	r1, #14
 8001ac2:	4821      	ldr	r0, [pc, #132]	; (8001b48 <main+0x1790>)
 8001ac4:	f7fe fc65 	bl	8000392 <XMC_GPIO_GetInput>
 8001ac8:	4603      	mov	r3, r0
 8001aca:	2b00      	cmp	r3, #0
 8001acc:	d150      	bne.n	8001b70 <main+0x17b8>
 8001ace:	4b1f      	ldr	r3, [pc, #124]	; (8001b4c <main+0x1794>)
 8001ad0:	881b      	ldrh	r3, [r3, #0]
 8001ad2:	2b00      	cmp	r3, #0
 8001ad4:	d14c      	bne.n	8001b70 <main+0x17b8>
 8001ad6:	4b1e      	ldr	r3, [pc, #120]	; (8001b50 <main+0x1798>)
 8001ad8:	881b      	ldrh	r3, [r3, #0]
 8001ada:	2b00      	cmp	r3, #0
 8001adc:	d148      	bne.n	8001b70 <main+0x17b8>
    {
      t1=t2;
 8001ade:	4b1d      	ldr	r3, [pc, #116]	; (8001b54 <main+0x179c>)
 8001ae0:	681b      	ldr	r3, [r3, #0]
 8001ae2:	4a1d      	ldr	r2, [pc, #116]	; (8001b58 <main+0x17a0>)
 8001ae4:	6013      	str	r3, [r2, #0]
      t3+=(12000000-PPB->SYST_CVR)*100/12000000;
 8001ae6:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 8001aea:	699b      	ldr	r3, [r3, #24]
 8001aec:	f06f 0263 	mvn.w	r2, #99	; 0x63
 8001af0:	fb02 f203 	mul.w	r2, r2, r3
 8001af4:	4b19      	ldr	r3, [pc, #100]	; (8001b5c <main+0x17a4>)
 8001af6:	4413      	add	r3, r2
 8001af8:	4a19      	ldr	r2, [pc, #100]	; (8001b60 <main+0x17a8>)
 8001afa:	fba2 2303 	umull	r2, r3, r2, r3
 8001afe:	0d1a      	lsrs	r2, r3, #20
 8001b00:	4b18      	ldr	r3, [pc, #96]	; (8001b64 <main+0x17ac>)
 8001b02:	681b      	ldr	r3, [r3, #0]
 8001b04:	4413      	add	r3, r2
 8001b06:	4a17      	ldr	r2, [pc, #92]	; (8001b64 <main+0x17ac>)
 8001b08:	6013      	str	r3, [r2, #0]
      t2=t3;
 8001b0a:	4b16      	ldr	r3, [pc, #88]	; (8001b64 <main+0x17ac>)
 8001b0c:	681b      	ldr	r3, [r3, #0]
 8001b0e:	4a11      	ldr	r2, [pc, #68]	; (8001b54 <main+0x179c>)
 8001b10:	6013      	str	r3, [r2, #0]
      SysTick_Config(12000000);
 8001b12:	4815      	ldr	r0, [pc, #84]	; (8001b68 <main+0x17b0>)
 8001b14:	f7fe fbf8 	bl	8000308 <SysTick_Config>
      XMC_GPIO_SetOutputHigh(P1_1);
 8001b18:	2101      	movs	r1, #1
 8001b1a:	480b      	ldr	r0, [pc, #44]	; (8001b48 <main+0x1790>)
 8001b1c:	f7fe fc16 	bl	800034c <XMC_GPIO_SetOutputHigh>
      i=k=0;
 8001b20:	4b12      	ldr	r3, [pc, #72]	; (8001b6c <main+0x17b4>)
 8001b22:	2200      	movs	r2, #0
 8001b24:	801a      	strh	r2, [r3, #0]
 8001b26:	4b11      	ldr	r3, [pc, #68]	; (8001b6c <main+0x17b4>)
 8001b28:	881a      	ldrh	r2, [r3, #0]
 8001b2a:	4b05      	ldr	r3, [pc, #20]	; (8001b40 <main+0x1788>)
 8001b2c:	801a      	strh	r2, [r3, #0]
      f1=1;
 8001b2e:	4b07      	ldr	r3, [pc, #28]	; (8001b4c <main+0x1794>)
 8001b30:	2201      	movs	r2, #1
 8001b32:	801a      	strh	r2, [r3, #0]
 8001b34:	f000 bd6b 	b.w	800260e <main+0x2256>
 8001b38:	200005aa 	.word	0x200005aa
 8001b3c:	200007cc 	.word	0x200007cc
 8001b40:	200005a8 	.word	0x200005a8
 8001b44:	20000000 	.word	0x20000000
 8001b48:	48028100 	.word	0x48028100
 8001b4c:	200005a4 	.word	0x200005a4
 8001b50:	200005a6 	.word	0x200005a6
 8001b54:	200005b4 	.word	0x200005b4
 8001b58:	200005b0 	.word	0x200005b0
 8001b5c:	47868c00 	.word	0x47868c00
 8001b60:	165e9f81 	.word	0x165e9f81
 8001b64:	200005b8 	.word	0x200005b8
 8001b68:	00b71b00 	.word	0x00b71b00
 8001b6c:	200005ac 	.word	0x200005ac
    }
    else if(XMC_GPIO_GetInput(P1_15)==0&&f1==0&&f2==0)
 8001b70:	210f      	movs	r1, #15
 8001b72:	489e      	ldr	r0, [pc, #632]	; (8001dec <main+0x1a34>)
 8001b74:	f7fe fc0d 	bl	8000392 <XMC_GPIO_GetInput>
 8001b78:	4603      	mov	r3, r0
 8001b7a:	2b00      	cmp	r3, #0
 8001b7c:	d1a0      	bne.n	8001ac0 <main+0x1708>
 8001b7e:	4b9c      	ldr	r3, [pc, #624]	; (8001df0 <main+0x1a38>)
 8001b80:	881b      	ldrh	r3, [r3, #0]
 8001b82:	2b00      	cmp	r3, #0
 8001b84:	d19c      	bne.n	8001ac0 <main+0x1708>
 8001b86:	4b9b      	ldr	r3, [pc, #620]	; (8001df4 <main+0x1a3c>)
 8001b88:	881b      	ldrh	r3, [r3, #0]
 8001b8a:	2b00      	cmp	r3, #0
 8001b8c:	d198      	bne.n	8001ac0 <main+0x1708>
    {
      f2=1;
 8001b8e:	4b99      	ldr	r3, [pc, #612]	; (8001df4 <main+0x1a3c>)
 8001b90:	2201      	movs	r2, #1
 8001b92:	801a      	strh	r2, [r3, #0]
      p=1000;
 8001b94:	4b98      	ldr	r3, [pc, #608]	; (8001df8 <main+0x1a40>)
 8001b96:	f44f 727a 	mov.w	r2, #1000	; 0x3e8
 8001b9a:	601a      	str	r2, [r3, #0]
      k=n=0;
 8001b9c:	4b97      	ldr	r3, [pc, #604]	; (8001dfc <main+0x1a44>)
 8001b9e:	2200      	movs	r2, #0
 8001ba0:	801a      	strh	r2, [r3, #0]
 8001ba2:	4b96      	ldr	r3, [pc, #600]	; (8001dfc <main+0x1a44>)
 8001ba4:	881a      	ldrh	r2, [r3, #0]
 8001ba6:	4b96      	ldr	r3, [pc, #600]	; (8001e00 <main+0x1a48>)
 8001ba8:	801a      	strh	r2, [r3, #0]
      if(t2==0)
 8001baa:	4b96      	ldr	r3, [pc, #600]	; (8001e04 <main+0x1a4c>)
 8001bac:	681b      	ldr	r3, [r3, #0]
 8001bae:	2b00      	cmp	r3, #0
 8001bb0:	f040 8084 	bne.w	8001cbc <main+0x1904>
      {
        MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=0; MC2[n++]=0;
 8001bb4:	4b91      	ldr	r3, [pc, #580]	; (8001dfc <main+0x1a44>)
 8001bb6:	881b      	ldrh	r3, [r3, #0]
 8001bb8:	1c5a      	adds	r2, r3, #1
 8001bba:	b291      	uxth	r1, r2
 8001bbc:	4a8f      	ldr	r2, [pc, #572]	; (8001dfc <main+0x1a44>)
 8001bbe:	8011      	strh	r1, [r2, #0]
 8001bc0:	461a      	mov	r2, r3
 8001bc2:	4b91      	ldr	r3, [pc, #580]	; (8001e08 <main+0x1a50>)
 8001bc4:	2103      	movs	r1, #3
 8001bc6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001bca:	4b8c      	ldr	r3, [pc, #560]	; (8001dfc <main+0x1a44>)
 8001bcc:	881b      	ldrh	r3, [r3, #0]
 8001bce:	1c5a      	adds	r2, r3, #1
 8001bd0:	b291      	uxth	r1, r2
 8001bd2:	4a8a      	ldr	r2, [pc, #552]	; (8001dfc <main+0x1a44>)
 8001bd4:	8011      	strh	r1, [r2, #0]
 8001bd6:	461a      	mov	r2, r3
 8001bd8:	4b8b      	ldr	r3, [pc, #556]	; (8001e08 <main+0x1a50>)
 8001bda:	2100      	movs	r1, #0
 8001bdc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001be0:	4b86      	ldr	r3, [pc, #536]	; (8001dfc <main+0x1a44>)
 8001be2:	881b      	ldrh	r3, [r3, #0]
 8001be4:	1c5a      	adds	r2, r3, #1
 8001be6:	b291      	uxth	r1, r2
 8001be8:	4a84      	ldr	r2, [pc, #528]	; (8001dfc <main+0x1a44>)
 8001bea:	8011      	strh	r1, [r2, #0]
 8001bec:	461a      	mov	r2, r3
 8001bee:	4b86      	ldr	r3, [pc, #536]	; (8001e08 <main+0x1a50>)
 8001bf0:	2103      	movs	r1, #3
 8001bf2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001bf6:	4b81      	ldr	r3, [pc, #516]	; (8001dfc <main+0x1a44>)
 8001bf8:	881b      	ldrh	r3, [r3, #0]
 8001bfa:	1c5a      	adds	r2, r3, #1
 8001bfc:	b291      	uxth	r1, r2
 8001bfe:	4a7f      	ldr	r2, [pc, #508]	; (8001dfc <main+0x1a44>)
 8001c00:	8011      	strh	r1, [r2, #0]
 8001c02:	461a      	mov	r2, r3
 8001c04:	4b80      	ldr	r3, [pc, #512]	; (8001e08 <main+0x1a50>)
 8001c06:	2100      	movs	r1, #0
 8001c08:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c0c:	4b7b      	ldr	r3, [pc, #492]	; (8001dfc <main+0x1a44>)
 8001c0e:	881b      	ldrh	r3, [r3, #0]
 8001c10:	1c5a      	adds	r2, r3, #1
 8001c12:	b291      	uxth	r1, r2
 8001c14:	4a79      	ldr	r2, [pc, #484]	; (8001dfc <main+0x1a44>)
 8001c16:	8011      	strh	r1, [r2, #0]
 8001c18:	461a      	mov	r2, r3
 8001c1a:	4b7b      	ldr	r3, [pc, #492]	; (8001e08 <main+0x1a50>)
 8001c1c:	2103      	movs	r1, #3
 8001c1e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c22:	4b76      	ldr	r3, [pc, #472]	; (8001dfc <main+0x1a44>)
 8001c24:	881b      	ldrh	r3, [r3, #0]
 8001c26:	1c5a      	adds	r2, r3, #1
 8001c28:	b291      	uxth	r1, r2
 8001c2a:	4a74      	ldr	r2, [pc, #464]	; (8001dfc <main+0x1a44>)
 8001c2c:	8011      	strh	r1, [r2, #0]
 8001c2e:	461a      	mov	r2, r3
 8001c30:	4b75      	ldr	r3, [pc, #468]	; (8001e08 <main+0x1a50>)
 8001c32:	2100      	movs	r1, #0
 8001c34:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c38:	4b70      	ldr	r3, [pc, #448]	; (8001dfc <main+0x1a44>)
 8001c3a:	881b      	ldrh	r3, [r3, #0]
 8001c3c:	1c5a      	adds	r2, r3, #1
 8001c3e:	b291      	uxth	r1, r2
 8001c40:	4a6e      	ldr	r2, [pc, #440]	; (8001dfc <main+0x1a44>)
 8001c42:	8011      	strh	r1, [r2, #0]
 8001c44:	461a      	mov	r2, r3
 8001c46:	4b70      	ldr	r3, [pc, #448]	; (8001e08 <main+0x1a50>)
 8001c48:	2103      	movs	r1, #3
 8001c4a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c4e:	4b6b      	ldr	r3, [pc, #428]	; (8001dfc <main+0x1a44>)
 8001c50:	881b      	ldrh	r3, [r3, #0]
 8001c52:	1c5a      	adds	r2, r3, #1
 8001c54:	b291      	uxth	r1, r2
 8001c56:	4a69      	ldr	r2, [pc, #420]	; (8001dfc <main+0x1a44>)
 8001c58:	8011      	strh	r1, [r2, #0]
 8001c5a:	461a      	mov	r2, r3
 8001c5c:	4b6a      	ldr	r3, [pc, #424]	; (8001e08 <main+0x1a50>)
 8001c5e:	2100      	movs	r1, #0
 8001c60:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c64:	4b65      	ldr	r3, [pc, #404]	; (8001dfc <main+0x1a44>)
 8001c66:	881b      	ldrh	r3, [r3, #0]
 8001c68:	1c5a      	adds	r2, r3, #1
 8001c6a:	b291      	uxth	r1, r2
 8001c6c:	4a63      	ldr	r2, [pc, #396]	; (8001dfc <main+0x1a44>)
 8001c6e:	8011      	strh	r1, [r2, #0]
 8001c70:	461a      	mov	r2, r3
 8001c72:	4b65      	ldr	r3, [pc, #404]	; (8001e08 <main+0x1a50>)
 8001c74:	2103      	movs	r1, #3
 8001c76:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c7a:	4b60      	ldr	r3, [pc, #384]	; (8001dfc <main+0x1a44>)
 8001c7c:	881b      	ldrh	r3, [r3, #0]
 8001c7e:	1c5a      	adds	r2, r3, #1
 8001c80:	b291      	uxth	r1, r2
 8001c82:	4a5e      	ldr	r2, [pc, #376]	; (8001dfc <main+0x1a44>)
 8001c84:	8011      	strh	r1, [r2, #0]
 8001c86:	461a      	mov	r2, r3
 8001c88:	4b5f      	ldr	r3, [pc, #380]	; (8001e08 <main+0x1a50>)
 8001c8a:	2100      	movs	r1, #0
 8001c8c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001c90:	4b5a      	ldr	r3, [pc, #360]	; (8001dfc <main+0x1a44>)
 8001c92:	881b      	ldrh	r3, [r3, #0]
 8001c94:	1c5a      	adds	r2, r3, #1
 8001c96:	b291      	uxth	r1, r2
 8001c98:	4a58      	ldr	r2, [pc, #352]	; (8001dfc <main+0x1a44>)
 8001c9a:	8011      	strh	r1, [r2, #0]
 8001c9c:	461a      	mov	r2, r3
 8001c9e:	4b5a      	ldr	r3, [pc, #360]	; (8001e08 <main+0x1a50>)
 8001ca0:	2100      	movs	r1, #0
 8001ca2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001ca6:	4b55      	ldr	r3, [pc, #340]	; (8001dfc <main+0x1a44>)
 8001ca8:	881b      	ldrh	r3, [r3, #0]
 8001caa:	1c5a      	adds	r2, r3, #1
 8001cac:	b291      	uxth	r1, r2
 8001cae:	4a53      	ldr	r2, [pc, #332]	; (8001dfc <main+0x1a44>)
 8001cb0:	8011      	strh	r1, [r2, #0]
 8001cb2:	461a      	mov	r2, r3
 8001cb4:	4b54      	ldr	r3, [pc, #336]	; (8001e08 <main+0x1a50>)
 8001cb6:	2100      	movs	r1, #0
 8001cb8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
      }
      for(i=0;(t2-t1)%(p/10)!=t2-t1&&t2!=0;++i)
 8001cbc:	4b53      	ldr	r3, [pc, #332]	; (8001e0c <main+0x1a54>)
 8001cbe:	2200      	movs	r2, #0
 8001cc0:	801a      	strh	r2, [r3, #0]
 8001cc2:	f000 bc69 	b.w	8002598 <main+0x21e0>
      {
        switch(((t2-t1)%p)/(p/10))
 8001cc6:	4b4f      	ldr	r3, [pc, #316]	; (8001e04 <main+0x1a4c>)
 8001cc8:	681a      	ldr	r2, [r3, #0]
 8001cca:	4b51      	ldr	r3, [pc, #324]	; (8001e10 <main+0x1a58>)
 8001ccc:	681b      	ldr	r3, [r3, #0]
 8001cce:	1ad3      	subs	r3, r2, r3
 8001cd0:	4a49      	ldr	r2, [pc, #292]	; (8001df8 <main+0x1a40>)
 8001cd2:	6812      	ldr	r2, [r2, #0]
 8001cd4:	fbb3 f1f2 	udiv	r1, r3, r2
 8001cd8:	fb02 f201 	mul.w	r2, r2, r1
 8001cdc:	1a9a      	subs	r2, r3, r2
 8001cde:	4b46      	ldr	r3, [pc, #280]	; (8001df8 <main+0x1a40>)
 8001ce0:	681b      	ldr	r3, [r3, #0]
 8001ce2:	494c      	ldr	r1, [pc, #304]	; (8001e14 <main+0x1a5c>)
 8001ce4:	fba1 1303 	umull	r1, r3, r1, r3
 8001ce8:	08db      	lsrs	r3, r3, #3
 8001cea:	fbb2 f3f3 	udiv	r3, r2, r3
 8001cee:	2b09      	cmp	r3, #9
 8001cf0:	f200 8422 	bhi.w	8002538 <main+0x2180>
 8001cf4:	a201      	add	r2, pc, #4	; (adr r2, 8001cfc <main+0x1944>)
 8001cf6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8001cfa:	bf00      	nop
 8001cfc:	08001d25 	.word	0x08001d25
 8001d00:	08001e19 	.word	0x08001e19
 8001d04:	08001ee1 	.word	0x08001ee1
 8001d08:	08001fa9 	.word	0x08001fa9
 8001d0c:	08002079 	.word	0x08002079
 8001d10:	08002141 	.word	0x08002141
 8001d14:	08002209 	.word	0x08002209
 8001d18:	080022d9 	.word	0x080022d9
 8001d1c:	080023a1 	.word	0x080023a1
 8001d20:	08002471 	.word	0x08002471
        {
          case 0: MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3;
 8001d24:	4b35      	ldr	r3, [pc, #212]	; (8001dfc <main+0x1a44>)
 8001d26:	881b      	ldrh	r3, [r3, #0]
 8001d28:	1c5a      	adds	r2, r3, #1
 8001d2a:	b291      	uxth	r1, r2
 8001d2c:	4a33      	ldr	r2, [pc, #204]	; (8001dfc <main+0x1a44>)
 8001d2e:	8011      	strh	r1, [r2, #0]
 8001d30:	461a      	mov	r2, r3
 8001d32:	4b35      	ldr	r3, [pc, #212]	; (8001e08 <main+0x1a50>)
 8001d34:	2103      	movs	r1, #3
 8001d36:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001d3a:	4b30      	ldr	r3, [pc, #192]	; (8001dfc <main+0x1a44>)
 8001d3c:	881b      	ldrh	r3, [r3, #0]
 8001d3e:	1c5a      	adds	r2, r3, #1
 8001d40:	b291      	uxth	r1, r2
 8001d42:	4a2e      	ldr	r2, [pc, #184]	; (8001dfc <main+0x1a44>)
 8001d44:	8011      	strh	r1, [r2, #0]
 8001d46:	461a      	mov	r2, r3
 8001d48:	4b2f      	ldr	r3, [pc, #188]	; (8001e08 <main+0x1a50>)
 8001d4a:	2100      	movs	r1, #0
 8001d4c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001d50:	4b2a      	ldr	r3, [pc, #168]	; (8001dfc <main+0x1a44>)
 8001d52:	881b      	ldrh	r3, [r3, #0]
 8001d54:	1c5a      	adds	r2, r3, #1
 8001d56:	b291      	uxth	r1, r2
 8001d58:	4a28      	ldr	r2, [pc, #160]	; (8001dfc <main+0x1a44>)
 8001d5a:	8011      	strh	r1, [r2, #0]
 8001d5c:	461a      	mov	r2, r3
 8001d5e:	4b2a      	ldr	r3, [pc, #168]	; (8001e08 <main+0x1a50>)
 8001d60:	2103      	movs	r1, #3
 8001d62:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001d66:	4b25      	ldr	r3, [pc, #148]	; (8001dfc <main+0x1a44>)
 8001d68:	881b      	ldrh	r3, [r3, #0]
 8001d6a:	1c5a      	adds	r2, r3, #1
 8001d6c:	b291      	uxth	r1, r2
 8001d6e:	4a23      	ldr	r2, [pc, #140]	; (8001dfc <main+0x1a44>)
 8001d70:	8011      	strh	r1, [r2, #0]
 8001d72:	461a      	mov	r2, r3
 8001d74:	4b24      	ldr	r3, [pc, #144]	; (8001e08 <main+0x1a50>)
 8001d76:	2100      	movs	r1, #0
 8001d78:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001d7c:	4b1f      	ldr	r3, [pc, #124]	; (8001dfc <main+0x1a44>)
 8001d7e:	881b      	ldrh	r3, [r3, #0]
 8001d80:	1c5a      	adds	r2, r3, #1
 8001d82:	b291      	uxth	r1, r2
 8001d84:	4a1d      	ldr	r2, [pc, #116]	; (8001dfc <main+0x1a44>)
 8001d86:	8011      	strh	r1, [r2, #0]
 8001d88:	461a      	mov	r2, r3
 8001d8a:	4b1f      	ldr	r3, [pc, #124]	; (8001e08 <main+0x1a50>)
 8001d8c:	2103      	movs	r1, #3
 8001d8e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001d92:	4b1a      	ldr	r3, [pc, #104]	; (8001dfc <main+0x1a44>)
 8001d94:	881b      	ldrh	r3, [r3, #0]
 8001d96:	1c5a      	adds	r2, r3, #1
 8001d98:	b291      	uxth	r1, r2
 8001d9a:	4a18      	ldr	r2, [pc, #96]	; (8001dfc <main+0x1a44>)
 8001d9c:	8011      	strh	r1, [r2, #0]
 8001d9e:	461a      	mov	r2, r3
 8001da0:	4b19      	ldr	r3, [pc, #100]	; (8001e08 <main+0x1a50>)
 8001da2:	2100      	movs	r1, #0
 8001da4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001da8:	4b14      	ldr	r3, [pc, #80]	; (8001dfc <main+0x1a44>)
 8001daa:	881b      	ldrh	r3, [r3, #0]
 8001dac:	1c5a      	adds	r2, r3, #1
 8001dae:	b291      	uxth	r1, r2
 8001db0:	4a12      	ldr	r2, [pc, #72]	; (8001dfc <main+0x1a44>)
 8001db2:	8011      	strh	r1, [r2, #0]
 8001db4:	461a      	mov	r2, r3
 8001db6:	4b14      	ldr	r3, [pc, #80]	; (8001e08 <main+0x1a50>)
 8001db8:	2103      	movs	r1, #3
 8001dba:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001dbe:	4b0f      	ldr	r3, [pc, #60]	; (8001dfc <main+0x1a44>)
 8001dc0:	881b      	ldrh	r3, [r3, #0]
 8001dc2:	1c5a      	adds	r2, r3, #1
 8001dc4:	b291      	uxth	r1, r2
 8001dc6:	4a0d      	ldr	r2, [pc, #52]	; (8001dfc <main+0x1a44>)
 8001dc8:	8011      	strh	r1, [r2, #0]
 8001dca:	461a      	mov	r2, r3
 8001dcc:	4b0e      	ldr	r3, [pc, #56]	; (8001e08 <main+0x1a50>)
 8001dce:	2100      	movs	r1, #0
 8001dd0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001dd4:	4b09      	ldr	r3, [pc, #36]	; (8001dfc <main+0x1a44>)
 8001dd6:	881b      	ldrh	r3, [r3, #0]
 8001dd8:	1c5a      	adds	r2, r3, #1
 8001dda:	b291      	uxth	r1, r2
 8001ddc:	4a07      	ldr	r2, [pc, #28]	; (8001dfc <main+0x1a44>)
 8001dde:	8011      	strh	r1, [r2, #0]
 8001de0:	461a      	mov	r2, r3
 8001de2:	4b09      	ldr	r3, [pc, #36]	; (8001e08 <main+0x1a50>)
 8001de4:	2103      	movs	r1, #3
 8001de6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8001dea:	e3a5      	b.n	8002538 <main+0x2180>
 8001dec:	48028100 	.word	0x48028100
 8001df0:	200005a4 	.word	0x200005a4
 8001df4:	200005a6 	.word	0x200005a6
 8001df8:	200007c8 	.word	0x200007c8
 8001dfc:	200005ae 	.word	0x200005ae
 8001e00:	200005ac 	.word	0x200005ac
 8001e04:	200005b4 	.word	0x200005b4
 8001e08:	200005c8 	.word	0x200005c8
 8001e0c:	200005a8 	.word	0x200005a8
 8001e10:	200005b0 	.word	0x200005b0
 8001e14:	cccccccd 	.word	0xcccccccd
          case 1: MC2[n++]=1; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3;
 8001e18:	4b95      	ldr	r3, [pc, #596]	; (8002070 <main+0x1cb8>)
 8001e1a:	881b      	ldrh	r3, [r3, #0]
 8001e1c:	1c5a      	adds	r2, r3, #1
 8001e1e:	b291      	uxth	r1, r2
 8001e20:	4a93      	ldr	r2, [pc, #588]	; (8002070 <main+0x1cb8>)
 8001e22:	8011      	strh	r1, [r2, #0]
 8001e24:	461a      	mov	r2, r3
 8001e26:	4b93      	ldr	r3, [pc, #588]	; (8002074 <main+0x1cbc>)
 8001e28:	2101      	movs	r1, #1
 8001e2a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e2e:	4b90      	ldr	r3, [pc, #576]	; (8002070 <main+0x1cb8>)
 8001e30:	881b      	ldrh	r3, [r3, #0]
 8001e32:	1c5a      	adds	r2, r3, #1
 8001e34:	b291      	uxth	r1, r2
 8001e36:	4a8e      	ldr	r2, [pc, #568]	; (8002070 <main+0x1cb8>)
 8001e38:	8011      	strh	r1, [r2, #0]
 8001e3a:	461a      	mov	r2, r3
 8001e3c:	4b8d      	ldr	r3, [pc, #564]	; (8002074 <main+0x1cbc>)
 8001e3e:	2100      	movs	r1, #0
 8001e40:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e44:	4b8a      	ldr	r3, [pc, #552]	; (8002070 <main+0x1cb8>)
 8001e46:	881b      	ldrh	r3, [r3, #0]
 8001e48:	1c5a      	adds	r2, r3, #1
 8001e4a:	b291      	uxth	r1, r2
 8001e4c:	4a88      	ldr	r2, [pc, #544]	; (8002070 <main+0x1cb8>)
 8001e4e:	8011      	strh	r1, [r2, #0]
 8001e50:	461a      	mov	r2, r3
 8001e52:	4b88      	ldr	r3, [pc, #544]	; (8002074 <main+0x1cbc>)
 8001e54:	2103      	movs	r1, #3
 8001e56:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e5a:	4b85      	ldr	r3, [pc, #532]	; (8002070 <main+0x1cb8>)
 8001e5c:	881b      	ldrh	r3, [r3, #0]
 8001e5e:	1c5a      	adds	r2, r3, #1
 8001e60:	b291      	uxth	r1, r2
 8001e62:	4a83      	ldr	r2, [pc, #524]	; (8002070 <main+0x1cb8>)
 8001e64:	8011      	strh	r1, [r2, #0]
 8001e66:	461a      	mov	r2, r3
 8001e68:	4b82      	ldr	r3, [pc, #520]	; (8002074 <main+0x1cbc>)
 8001e6a:	2100      	movs	r1, #0
 8001e6c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e70:	4b7f      	ldr	r3, [pc, #508]	; (8002070 <main+0x1cb8>)
 8001e72:	881b      	ldrh	r3, [r3, #0]
 8001e74:	1c5a      	adds	r2, r3, #1
 8001e76:	b291      	uxth	r1, r2
 8001e78:	4a7d      	ldr	r2, [pc, #500]	; (8002070 <main+0x1cb8>)
 8001e7a:	8011      	strh	r1, [r2, #0]
 8001e7c:	461a      	mov	r2, r3
 8001e7e:	4b7d      	ldr	r3, [pc, #500]	; (8002074 <main+0x1cbc>)
 8001e80:	2103      	movs	r1, #3
 8001e82:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e86:	4b7a      	ldr	r3, [pc, #488]	; (8002070 <main+0x1cb8>)
 8001e88:	881b      	ldrh	r3, [r3, #0]
 8001e8a:	1c5a      	adds	r2, r3, #1
 8001e8c:	b291      	uxth	r1, r2
 8001e8e:	4a78      	ldr	r2, [pc, #480]	; (8002070 <main+0x1cb8>)
 8001e90:	8011      	strh	r1, [r2, #0]
 8001e92:	461a      	mov	r2, r3
 8001e94:	4b77      	ldr	r3, [pc, #476]	; (8002074 <main+0x1cbc>)
 8001e96:	2100      	movs	r1, #0
 8001e98:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001e9c:	4b74      	ldr	r3, [pc, #464]	; (8002070 <main+0x1cb8>)
 8001e9e:	881b      	ldrh	r3, [r3, #0]
 8001ea0:	1c5a      	adds	r2, r3, #1
 8001ea2:	b291      	uxth	r1, r2
 8001ea4:	4a72      	ldr	r2, [pc, #456]	; (8002070 <main+0x1cb8>)
 8001ea6:	8011      	strh	r1, [r2, #0]
 8001ea8:	461a      	mov	r2, r3
 8001eaa:	4b72      	ldr	r3, [pc, #456]	; (8002074 <main+0x1cbc>)
 8001eac:	2103      	movs	r1, #3
 8001eae:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001eb2:	4b6f      	ldr	r3, [pc, #444]	; (8002070 <main+0x1cb8>)
 8001eb4:	881b      	ldrh	r3, [r3, #0]
 8001eb6:	1c5a      	adds	r2, r3, #1
 8001eb8:	b291      	uxth	r1, r2
 8001eba:	4a6d      	ldr	r2, [pc, #436]	; (8002070 <main+0x1cb8>)
 8001ebc:	8011      	strh	r1, [r2, #0]
 8001ebe:	461a      	mov	r2, r3
 8001ec0:	4b6c      	ldr	r3, [pc, #432]	; (8002074 <main+0x1cbc>)
 8001ec2:	2100      	movs	r1, #0
 8001ec4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001ec8:	4b69      	ldr	r3, [pc, #420]	; (8002070 <main+0x1cb8>)
 8001eca:	881b      	ldrh	r3, [r3, #0]
 8001ecc:	1c5a      	adds	r2, r3, #1
 8001ece:	b291      	uxth	r1, r2
 8001ed0:	4a67      	ldr	r2, [pc, #412]	; (8002070 <main+0x1cb8>)
 8001ed2:	8011      	strh	r1, [r2, #0]
 8001ed4:	461a      	mov	r2, r3
 8001ed6:	4b67      	ldr	r3, [pc, #412]	; (8002074 <main+0x1cbc>)
 8001ed8:	2103      	movs	r1, #3
 8001eda:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8001ede:	e32b      	b.n	8002538 <main+0x2180>
          case 2: MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3;
 8001ee0:	4b63      	ldr	r3, [pc, #396]	; (8002070 <main+0x1cb8>)
 8001ee2:	881b      	ldrh	r3, [r3, #0]
 8001ee4:	1c5a      	adds	r2, r3, #1
 8001ee6:	b291      	uxth	r1, r2
 8001ee8:	4a61      	ldr	r2, [pc, #388]	; (8002070 <main+0x1cb8>)
 8001eea:	8011      	strh	r1, [r2, #0]
 8001eec:	461a      	mov	r2, r3
 8001eee:	4b61      	ldr	r3, [pc, #388]	; (8002074 <main+0x1cbc>)
 8001ef0:	2101      	movs	r1, #1
 8001ef2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001ef6:	4b5e      	ldr	r3, [pc, #376]	; (8002070 <main+0x1cb8>)
 8001ef8:	881b      	ldrh	r3, [r3, #0]
 8001efa:	1c5a      	adds	r2, r3, #1
 8001efc:	b291      	uxth	r1, r2
 8001efe:	4a5c      	ldr	r2, [pc, #368]	; (8002070 <main+0x1cb8>)
 8001f00:	8011      	strh	r1, [r2, #0]
 8001f02:	461a      	mov	r2, r3
 8001f04:	4b5b      	ldr	r3, [pc, #364]	; (8002074 <main+0x1cbc>)
 8001f06:	2100      	movs	r1, #0
 8001f08:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f0c:	4b58      	ldr	r3, [pc, #352]	; (8002070 <main+0x1cb8>)
 8001f0e:	881b      	ldrh	r3, [r3, #0]
 8001f10:	1c5a      	adds	r2, r3, #1
 8001f12:	b291      	uxth	r1, r2
 8001f14:	4a56      	ldr	r2, [pc, #344]	; (8002070 <main+0x1cb8>)
 8001f16:	8011      	strh	r1, [r2, #0]
 8001f18:	461a      	mov	r2, r3
 8001f1a:	4b56      	ldr	r3, [pc, #344]	; (8002074 <main+0x1cbc>)
 8001f1c:	2101      	movs	r1, #1
 8001f1e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f22:	4b53      	ldr	r3, [pc, #332]	; (8002070 <main+0x1cb8>)
 8001f24:	881b      	ldrh	r3, [r3, #0]
 8001f26:	1c5a      	adds	r2, r3, #1
 8001f28:	b291      	uxth	r1, r2
 8001f2a:	4a51      	ldr	r2, [pc, #324]	; (8002070 <main+0x1cb8>)
 8001f2c:	8011      	strh	r1, [r2, #0]
 8001f2e:	461a      	mov	r2, r3
 8001f30:	4b50      	ldr	r3, [pc, #320]	; (8002074 <main+0x1cbc>)
 8001f32:	2100      	movs	r1, #0
 8001f34:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f38:	4b4d      	ldr	r3, [pc, #308]	; (8002070 <main+0x1cb8>)
 8001f3a:	881b      	ldrh	r3, [r3, #0]
 8001f3c:	1c5a      	adds	r2, r3, #1
 8001f3e:	b291      	uxth	r1, r2
 8001f40:	4a4b      	ldr	r2, [pc, #300]	; (8002070 <main+0x1cb8>)
 8001f42:	8011      	strh	r1, [r2, #0]
 8001f44:	461a      	mov	r2, r3
 8001f46:	4b4b      	ldr	r3, [pc, #300]	; (8002074 <main+0x1cbc>)
 8001f48:	2103      	movs	r1, #3
 8001f4a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f4e:	4b48      	ldr	r3, [pc, #288]	; (8002070 <main+0x1cb8>)
 8001f50:	881b      	ldrh	r3, [r3, #0]
 8001f52:	1c5a      	adds	r2, r3, #1
 8001f54:	b291      	uxth	r1, r2
 8001f56:	4a46      	ldr	r2, [pc, #280]	; (8002070 <main+0x1cb8>)
 8001f58:	8011      	strh	r1, [r2, #0]
 8001f5a:	461a      	mov	r2, r3
 8001f5c:	4b45      	ldr	r3, [pc, #276]	; (8002074 <main+0x1cbc>)
 8001f5e:	2100      	movs	r1, #0
 8001f60:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f64:	4b42      	ldr	r3, [pc, #264]	; (8002070 <main+0x1cb8>)
 8001f66:	881b      	ldrh	r3, [r3, #0]
 8001f68:	1c5a      	adds	r2, r3, #1
 8001f6a:	b291      	uxth	r1, r2
 8001f6c:	4a40      	ldr	r2, [pc, #256]	; (8002070 <main+0x1cb8>)
 8001f6e:	8011      	strh	r1, [r2, #0]
 8001f70:	461a      	mov	r2, r3
 8001f72:	4b40      	ldr	r3, [pc, #256]	; (8002074 <main+0x1cbc>)
 8001f74:	2103      	movs	r1, #3
 8001f76:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f7a:	4b3d      	ldr	r3, [pc, #244]	; (8002070 <main+0x1cb8>)
 8001f7c:	881b      	ldrh	r3, [r3, #0]
 8001f7e:	1c5a      	adds	r2, r3, #1
 8001f80:	b291      	uxth	r1, r2
 8001f82:	4a3b      	ldr	r2, [pc, #236]	; (8002070 <main+0x1cb8>)
 8001f84:	8011      	strh	r1, [r2, #0]
 8001f86:	461a      	mov	r2, r3
 8001f88:	4b3a      	ldr	r3, [pc, #232]	; (8002074 <main+0x1cbc>)
 8001f8a:	2100      	movs	r1, #0
 8001f8c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001f90:	4b37      	ldr	r3, [pc, #220]	; (8002070 <main+0x1cb8>)
 8001f92:	881b      	ldrh	r3, [r3, #0]
 8001f94:	1c5a      	adds	r2, r3, #1
 8001f96:	b291      	uxth	r1, r2
 8001f98:	4a35      	ldr	r2, [pc, #212]	; (8002070 <main+0x1cb8>)
 8001f9a:	8011      	strh	r1, [r2, #0]
 8001f9c:	461a      	mov	r2, r3
 8001f9e:	4b35      	ldr	r3, [pc, #212]	; (8002074 <main+0x1cbc>)
 8001fa0:	2103      	movs	r1, #3
 8001fa2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8001fa6:	e2c7      	b.n	8002538 <main+0x2180>
          case 3: MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3;
 8001fa8:	4b31      	ldr	r3, [pc, #196]	; (8002070 <main+0x1cb8>)
 8001faa:	881b      	ldrh	r3, [r3, #0]
 8001fac:	1c5a      	adds	r2, r3, #1
 8001fae:	b291      	uxth	r1, r2
 8001fb0:	4a2f      	ldr	r2, [pc, #188]	; (8002070 <main+0x1cb8>)
 8001fb2:	8011      	strh	r1, [r2, #0]
 8001fb4:	461a      	mov	r2, r3
 8001fb6:	4b2f      	ldr	r3, [pc, #188]	; (8002074 <main+0x1cbc>)
 8001fb8:	2101      	movs	r1, #1
 8001fba:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001fbe:	4b2c      	ldr	r3, [pc, #176]	; (8002070 <main+0x1cb8>)
 8001fc0:	881b      	ldrh	r3, [r3, #0]
 8001fc2:	1c5a      	adds	r2, r3, #1
 8001fc4:	b291      	uxth	r1, r2
 8001fc6:	4a2a      	ldr	r2, [pc, #168]	; (8002070 <main+0x1cb8>)
 8001fc8:	8011      	strh	r1, [r2, #0]
 8001fca:	461a      	mov	r2, r3
 8001fcc:	4b29      	ldr	r3, [pc, #164]	; (8002074 <main+0x1cbc>)
 8001fce:	2100      	movs	r1, #0
 8001fd0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001fd4:	4b26      	ldr	r3, [pc, #152]	; (8002070 <main+0x1cb8>)
 8001fd6:	881b      	ldrh	r3, [r3, #0]
 8001fd8:	1c5a      	adds	r2, r3, #1
 8001fda:	b291      	uxth	r1, r2
 8001fdc:	4a24      	ldr	r2, [pc, #144]	; (8002070 <main+0x1cb8>)
 8001fde:	8011      	strh	r1, [r2, #0]
 8001fe0:	461a      	mov	r2, r3
 8001fe2:	4b24      	ldr	r3, [pc, #144]	; (8002074 <main+0x1cbc>)
 8001fe4:	2101      	movs	r1, #1
 8001fe6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8001fea:	4b21      	ldr	r3, [pc, #132]	; (8002070 <main+0x1cb8>)
 8001fec:	881b      	ldrh	r3, [r3, #0]
 8001fee:	1c5a      	adds	r2, r3, #1
 8001ff0:	b291      	uxth	r1, r2
 8001ff2:	4a1f      	ldr	r2, [pc, #124]	; (8002070 <main+0x1cb8>)
 8001ff4:	8011      	strh	r1, [r2, #0]
 8001ff6:	461a      	mov	r2, r3
 8001ff8:	4b1e      	ldr	r3, [pc, #120]	; (8002074 <main+0x1cbc>)
 8001ffa:	2100      	movs	r1, #0
 8001ffc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002000:	4b1b      	ldr	r3, [pc, #108]	; (8002070 <main+0x1cb8>)
 8002002:	881b      	ldrh	r3, [r3, #0]
 8002004:	1c5a      	adds	r2, r3, #1
 8002006:	b291      	uxth	r1, r2
 8002008:	4a19      	ldr	r2, [pc, #100]	; (8002070 <main+0x1cb8>)
 800200a:	8011      	strh	r1, [r2, #0]
 800200c:	461a      	mov	r2, r3
 800200e:	4b19      	ldr	r3, [pc, #100]	; (8002074 <main+0x1cbc>)
 8002010:	2101      	movs	r1, #1
 8002012:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002016:	4b16      	ldr	r3, [pc, #88]	; (8002070 <main+0x1cb8>)
 8002018:	881b      	ldrh	r3, [r3, #0]
 800201a:	1c5a      	adds	r2, r3, #1
 800201c:	b291      	uxth	r1, r2
 800201e:	4a14      	ldr	r2, [pc, #80]	; (8002070 <main+0x1cb8>)
 8002020:	8011      	strh	r1, [r2, #0]
 8002022:	461a      	mov	r2, r3
 8002024:	4b13      	ldr	r3, [pc, #76]	; (8002074 <main+0x1cbc>)
 8002026:	2100      	movs	r1, #0
 8002028:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800202c:	4b10      	ldr	r3, [pc, #64]	; (8002070 <main+0x1cb8>)
 800202e:	881b      	ldrh	r3, [r3, #0]
 8002030:	1c5a      	adds	r2, r3, #1
 8002032:	b291      	uxth	r1, r2
 8002034:	4a0e      	ldr	r2, [pc, #56]	; (8002070 <main+0x1cb8>)
 8002036:	8011      	strh	r1, [r2, #0]
 8002038:	461a      	mov	r2, r3
 800203a:	4b0e      	ldr	r3, [pc, #56]	; (8002074 <main+0x1cbc>)
 800203c:	2103      	movs	r1, #3
 800203e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002042:	4b0b      	ldr	r3, [pc, #44]	; (8002070 <main+0x1cb8>)
 8002044:	881b      	ldrh	r3, [r3, #0]
 8002046:	1c5a      	adds	r2, r3, #1
 8002048:	b291      	uxth	r1, r2
 800204a:	4a09      	ldr	r2, [pc, #36]	; (8002070 <main+0x1cb8>)
 800204c:	8011      	strh	r1, [r2, #0]
 800204e:	461a      	mov	r2, r3
 8002050:	4b08      	ldr	r3, [pc, #32]	; (8002074 <main+0x1cbc>)
 8002052:	2100      	movs	r1, #0
 8002054:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002058:	4b05      	ldr	r3, [pc, #20]	; (8002070 <main+0x1cb8>)
 800205a:	881b      	ldrh	r3, [r3, #0]
 800205c:	1c5a      	adds	r2, r3, #1
 800205e:	b291      	uxth	r1, r2
 8002060:	4a03      	ldr	r2, [pc, #12]	; (8002070 <main+0x1cb8>)
 8002062:	8011      	strh	r1, [r2, #0]
 8002064:	461a      	mov	r2, r3
 8002066:	4b03      	ldr	r3, [pc, #12]	; (8002074 <main+0x1cbc>)
 8002068:	2103      	movs	r1, #3
 800206a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 800206e:	e263      	b.n	8002538 <main+0x2180>
 8002070:	200005ae 	.word	0x200005ae
 8002074:	200005c8 	.word	0x200005c8
          case 4: MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=3;
 8002078:	4b95      	ldr	r3, [pc, #596]	; (80022d0 <main+0x1f18>)
 800207a:	881b      	ldrh	r3, [r3, #0]
 800207c:	1c5a      	adds	r2, r3, #1
 800207e:	b291      	uxth	r1, r2
 8002080:	4a93      	ldr	r2, [pc, #588]	; (80022d0 <main+0x1f18>)
 8002082:	8011      	strh	r1, [r2, #0]
 8002084:	461a      	mov	r2, r3
 8002086:	4b93      	ldr	r3, [pc, #588]	; (80022d4 <main+0x1f1c>)
 8002088:	2101      	movs	r1, #1
 800208a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800208e:	4b90      	ldr	r3, [pc, #576]	; (80022d0 <main+0x1f18>)
 8002090:	881b      	ldrh	r3, [r3, #0]
 8002092:	1c5a      	adds	r2, r3, #1
 8002094:	b291      	uxth	r1, r2
 8002096:	4a8e      	ldr	r2, [pc, #568]	; (80022d0 <main+0x1f18>)
 8002098:	8011      	strh	r1, [r2, #0]
 800209a:	461a      	mov	r2, r3
 800209c:	4b8d      	ldr	r3, [pc, #564]	; (80022d4 <main+0x1f1c>)
 800209e:	2100      	movs	r1, #0
 80020a0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80020a4:	4b8a      	ldr	r3, [pc, #552]	; (80022d0 <main+0x1f18>)
 80020a6:	881b      	ldrh	r3, [r3, #0]
 80020a8:	1c5a      	adds	r2, r3, #1
 80020aa:	b291      	uxth	r1, r2
 80020ac:	4a88      	ldr	r2, [pc, #544]	; (80022d0 <main+0x1f18>)
 80020ae:	8011      	strh	r1, [r2, #0]
 80020b0:	461a      	mov	r2, r3
 80020b2:	4b88      	ldr	r3, [pc, #544]	; (80022d4 <main+0x1f1c>)
 80020b4:	2101      	movs	r1, #1
 80020b6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80020ba:	4b85      	ldr	r3, [pc, #532]	; (80022d0 <main+0x1f18>)
 80020bc:	881b      	ldrh	r3, [r3, #0]
 80020be:	1c5a      	adds	r2, r3, #1
 80020c0:	b291      	uxth	r1, r2
 80020c2:	4a83      	ldr	r2, [pc, #524]	; (80022d0 <main+0x1f18>)
 80020c4:	8011      	strh	r1, [r2, #0]
 80020c6:	461a      	mov	r2, r3
 80020c8:	4b82      	ldr	r3, [pc, #520]	; (80022d4 <main+0x1f1c>)
 80020ca:	2100      	movs	r1, #0
 80020cc:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80020d0:	4b7f      	ldr	r3, [pc, #508]	; (80022d0 <main+0x1f18>)
 80020d2:	881b      	ldrh	r3, [r3, #0]
 80020d4:	1c5a      	adds	r2, r3, #1
 80020d6:	b291      	uxth	r1, r2
 80020d8:	4a7d      	ldr	r2, [pc, #500]	; (80022d0 <main+0x1f18>)
 80020da:	8011      	strh	r1, [r2, #0]
 80020dc:	461a      	mov	r2, r3
 80020de:	4b7d      	ldr	r3, [pc, #500]	; (80022d4 <main+0x1f1c>)
 80020e0:	2101      	movs	r1, #1
 80020e2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80020e6:	4b7a      	ldr	r3, [pc, #488]	; (80022d0 <main+0x1f18>)
 80020e8:	881b      	ldrh	r3, [r3, #0]
 80020ea:	1c5a      	adds	r2, r3, #1
 80020ec:	b291      	uxth	r1, r2
 80020ee:	4a78      	ldr	r2, [pc, #480]	; (80022d0 <main+0x1f18>)
 80020f0:	8011      	strh	r1, [r2, #0]
 80020f2:	461a      	mov	r2, r3
 80020f4:	4b77      	ldr	r3, [pc, #476]	; (80022d4 <main+0x1f1c>)
 80020f6:	2100      	movs	r1, #0
 80020f8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80020fc:	4b74      	ldr	r3, [pc, #464]	; (80022d0 <main+0x1f18>)
 80020fe:	881b      	ldrh	r3, [r3, #0]
 8002100:	1c5a      	adds	r2, r3, #1
 8002102:	b291      	uxth	r1, r2
 8002104:	4a72      	ldr	r2, [pc, #456]	; (80022d0 <main+0x1f18>)
 8002106:	8011      	strh	r1, [r2, #0]
 8002108:	461a      	mov	r2, r3
 800210a:	4b72      	ldr	r3, [pc, #456]	; (80022d4 <main+0x1f1c>)
 800210c:	2101      	movs	r1, #1
 800210e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002112:	4b6f      	ldr	r3, [pc, #444]	; (80022d0 <main+0x1f18>)
 8002114:	881b      	ldrh	r3, [r3, #0]
 8002116:	1c5a      	adds	r2, r3, #1
 8002118:	b291      	uxth	r1, r2
 800211a:	4a6d      	ldr	r2, [pc, #436]	; (80022d0 <main+0x1f18>)
 800211c:	8011      	strh	r1, [r2, #0]
 800211e:	461a      	mov	r2, r3
 8002120:	4b6c      	ldr	r3, [pc, #432]	; (80022d4 <main+0x1f1c>)
 8002122:	2100      	movs	r1, #0
 8002124:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002128:	4b69      	ldr	r3, [pc, #420]	; (80022d0 <main+0x1f18>)
 800212a:	881b      	ldrh	r3, [r3, #0]
 800212c:	1c5a      	adds	r2, r3, #1
 800212e:	b291      	uxth	r1, r2
 8002130:	4a67      	ldr	r2, [pc, #412]	; (80022d0 <main+0x1f18>)
 8002132:	8011      	strh	r1, [r2, #0]
 8002134:	461a      	mov	r2, r3
 8002136:	4b67      	ldr	r3, [pc, #412]	; (80022d4 <main+0x1f1c>)
 8002138:	2103      	movs	r1, #3
 800213a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 800213e:	e1fb      	b.n	8002538 <main+0x2180>
          case 5: MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1;
 8002140:	4b63      	ldr	r3, [pc, #396]	; (80022d0 <main+0x1f18>)
 8002142:	881b      	ldrh	r3, [r3, #0]
 8002144:	1c5a      	adds	r2, r3, #1
 8002146:	b291      	uxth	r1, r2
 8002148:	4a61      	ldr	r2, [pc, #388]	; (80022d0 <main+0x1f18>)
 800214a:	8011      	strh	r1, [r2, #0]
 800214c:	461a      	mov	r2, r3
 800214e:	4b61      	ldr	r3, [pc, #388]	; (80022d4 <main+0x1f1c>)
 8002150:	2101      	movs	r1, #1
 8002152:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002156:	4b5e      	ldr	r3, [pc, #376]	; (80022d0 <main+0x1f18>)
 8002158:	881b      	ldrh	r3, [r3, #0]
 800215a:	1c5a      	adds	r2, r3, #1
 800215c:	b291      	uxth	r1, r2
 800215e:	4a5c      	ldr	r2, [pc, #368]	; (80022d0 <main+0x1f18>)
 8002160:	8011      	strh	r1, [r2, #0]
 8002162:	461a      	mov	r2, r3
 8002164:	4b5b      	ldr	r3, [pc, #364]	; (80022d4 <main+0x1f1c>)
 8002166:	2100      	movs	r1, #0
 8002168:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800216c:	4b58      	ldr	r3, [pc, #352]	; (80022d0 <main+0x1f18>)
 800216e:	881b      	ldrh	r3, [r3, #0]
 8002170:	1c5a      	adds	r2, r3, #1
 8002172:	b291      	uxth	r1, r2
 8002174:	4a56      	ldr	r2, [pc, #344]	; (80022d0 <main+0x1f18>)
 8002176:	8011      	strh	r1, [r2, #0]
 8002178:	461a      	mov	r2, r3
 800217a:	4b56      	ldr	r3, [pc, #344]	; (80022d4 <main+0x1f1c>)
 800217c:	2101      	movs	r1, #1
 800217e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002182:	4b53      	ldr	r3, [pc, #332]	; (80022d0 <main+0x1f18>)
 8002184:	881b      	ldrh	r3, [r3, #0]
 8002186:	1c5a      	adds	r2, r3, #1
 8002188:	b291      	uxth	r1, r2
 800218a:	4a51      	ldr	r2, [pc, #324]	; (80022d0 <main+0x1f18>)
 800218c:	8011      	strh	r1, [r2, #0]
 800218e:	461a      	mov	r2, r3
 8002190:	4b50      	ldr	r3, [pc, #320]	; (80022d4 <main+0x1f1c>)
 8002192:	2100      	movs	r1, #0
 8002194:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002198:	4b4d      	ldr	r3, [pc, #308]	; (80022d0 <main+0x1f18>)
 800219a:	881b      	ldrh	r3, [r3, #0]
 800219c:	1c5a      	adds	r2, r3, #1
 800219e:	b291      	uxth	r1, r2
 80021a0:	4a4b      	ldr	r2, [pc, #300]	; (80022d0 <main+0x1f18>)
 80021a2:	8011      	strh	r1, [r2, #0]
 80021a4:	461a      	mov	r2, r3
 80021a6:	4b4b      	ldr	r3, [pc, #300]	; (80022d4 <main+0x1f1c>)
 80021a8:	2101      	movs	r1, #1
 80021aa:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80021ae:	4b48      	ldr	r3, [pc, #288]	; (80022d0 <main+0x1f18>)
 80021b0:	881b      	ldrh	r3, [r3, #0]
 80021b2:	1c5a      	adds	r2, r3, #1
 80021b4:	b291      	uxth	r1, r2
 80021b6:	4a46      	ldr	r2, [pc, #280]	; (80022d0 <main+0x1f18>)
 80021b8:	8011      	strh	r1, [r2, #0]
 80021ba:	461a      	mov	r2, r3
 80021bc:	4b45      	ldr	r3, [pc, #276]	; (80022d4 <main+0x1f1c>)
 80021be:	2100      	movs	r1, #0
 80021c0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80021c4:	4b42      	ldr	r3, [pc, #264]	; (80022d0 <main+0x1f18>)
 80021c6:	881b      	ldrh	r3, [r3, #0]
 80021c8:	1c5a      	adds	r2, r3, #1
 80021ca:	b291      	uxth	r1, r2
 80021cc:	4a40      	ldr	r2, [pc, #256]	; (80022d0 <main+0x1f18>)
 80021ce:	8011      	strh	r1, [r2, #0]
 80021d0:	461a      	mov	r2, r3
 80021d2:	4b40      	ldr	r3, [pc, #256]	; (80022d4 <main+0x1f1c>)
 80021d4:	2101      	movs	r1, #1
 80021d6:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80021da:	4b3d      	ldr	r3, [pc, #244]	; (80022d0 <main+0x1f18>)
 80021dc:	881b      	ldrh	r3, [r3, #0]
 80021de:	1c5a      	adds	r2, r3, #1
 80021e0:	b291      	uxth	r1, r2
 80021e2:	4a3b      	ldr	r2, [pc, #236]	; (80022d0 <main+0x1f18>)
 80021e4:	8011      	strh	r1, [r2, #0]
 80021e6:	461a      	mov	r2, r3
 80021e8:	4b3a      	ldr	r3, [pc, #232]	; (80022d4 <main+0x1f1c>)
 80021ea:	2100      	movs	r1, #0
 80021ec:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80021f0:	4b37      	ldr	r3, [pc, #220]	; (80022d0 <main+0x1f18>)
 80021f2:	881b      	ldrh	r3, [r3, #0]
 80021f4:	1c5a      	adds	r2, r3, #1
 80021f6:	b291      	uxth	r1, r2
 80021f8:	4a35      	ldr	r2, [pc, #212]	; (80022d0 <main+0x1f18>)
 80021fa:	8011      	strh	r1, [r2, #0]
 80021fc:	461a      	mov	r2, r3
 80021fe:	4b35      	ldr	r3, [pc, #212]	; (80022d4 <main+0x1f1c>)
 8002200:	2101      	movs	r1, #1
 8002202:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8002206:	e197      	b.n	8002538 <main+0x2180>
          case 6: MC2[n++]=3; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1;
 8002208:	4b31      	ldr	r3, [pc, #196]	; (80022d0 <main+0x1f18>)
 800220a:	881b      	ldrh	r3, [r3, #0]
 800220c:	1c5a      	adds	r2, r3, #1
 800220e:	b291      	uxth	r1, r2
 8002210:	4a2f      	ldr	r2, [pc, #188]	; (80022d0 <main+0x1f18>)
 8002212:	8011      	strh	r1, [r2, #0]
 8002214:	461a      	mov	r2, r3
 8002216:	4b2f      	ldr	r3, [pc, #188]	; (80022d4 <main+0x1f1c>)
 8002218:	2103      	movs	r1, #3
 800221a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800221e:	4b2c      	ldr	r3, [pc, #176]	; (80022d0 <main+0x1f18>)
 8002220:	881b      	ldrh	r3, [r3, #0]
 8002222:	1c5a      	adds	r2, r3, #1
 8002224:	b291      	uxth	r1, r2
 8002226:	4a2a      	ldr	r2, [pc, #168]	; (80022d0 <main+0x1f18>)
 8002228:	8011      	strh	r1, [r2, #0]
 800222a:	461a      	mov	r2, r3
 800222c:	4b29      	ldr	r3, [pc, #164]	; (80022d4 <main+0x1f1c>)
 800222e:	2100      	movs	r1, #0
 8002230:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002234:	4b26      	ldr	r3, [pc, #152]	; (80022d0 <main+0x1f18>)
 8002236:	881b      	ldrh	r3, [r3, #0]
 8002238:	1c5a      	adds	r2, r3, #1
 800223a:	b291      	uxth	r1, r2
 800223c:	4a24      	ldr	r2, [pc, #144]	; (80022d0 <main+0x1f18>)
 800223e:	8011      	strh	r1, [r2, #0]
 8002240:	461a      	mov	r2, r3
 8002242:	4b24      	ldr	r3, [pc, #144]	; (80022d4 <main+0x1f1c>)
 8002244:	2101      	movs	r1, #1
 8002246:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800224a:	4b21      	ldr	r3, [pc, #132]	; (80022d0 <main+0x1f18>)
 800224c:	881b      	ldrh	r3, [r3, #0]
 800224e:	1c5a      	adds	r2, r3, #1
 8002250:	b291      	uxth	r1, r2
 8002252:	4a1f      	ldr	r2, [pc, #124]	; (80022d0 <main+0x1f18>)
 8002254:	8011      	strh	r1, [r2, #0]
 8002256:	461a      	mov	r2, r3
 8002258:	4b1e      	ldr	r3, [pc, #120]	; (80022d4 <main+0x1f1c>)
 800225a:	2100      	movs	r1, #0
 800225c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002260:	4b1b      	ldr	r3, [pc, #108]	; (80022d0 <main+0x1f18>)
 8002262:	881b      	ldrh	r3, [r3, #0]
 8002264:	1c5a      	adds	r2, r3, #1
 8002266:	b291      	uxth	r1, r2
 8002268:	4a19      	ldr	r2, [pc, #100]	; (80022d0 <main+0x1f18>)
 800226a:	8011      	strh	r1, [r2, #0]
 800226c:	461a      	mov	r2, r3
 800226e:	4b19      	ldr	r3, [pc, #100]	; (80022d4 <main+0x1f1c>)
 8002270:	2101      	movs	r1, #1
 8002272:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002276:	4b16      	ldr	r3, [pc, #88]	; (80022d0 <main+0x1f18>)
 8002278:	881b      	ldrh	r3, [r3, #0]
 800227a:	1c5a      	adds	r2, r3, #1
 800227c:	b291      	uxth	r1, r2
 800227e:	4a14      	ldr	r2, [pc, #80]	; (80022d0 <main+0x1f18>)
 8002280:	8011      	strh	r1, [r2, #0]
 8002282:	461a      	mov	r2, r3
 8002284:	4b13      	ldr	r3, [pc, #76]	; (80022d4 <main+0x1f1c>)
 8002286:	2100      	movs	r1, #0
 8002288:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800228c:	4b10      	ldr	r3, [pc, #64]	; (80022d0 <main+0x1f18>)
 800228e:	881b      	ldrh	r3, [r3, #0]
 8002290:	1c5a      	adds	r2, r3, #1
 8002292:	b291      	uxth	r1, r2
 8002294:	4a0e      	ldr	r2, [pc, #56]	; (80022d0 <main+0x1f18>)
 8002296:	8011      	strh	r1, [r2, #0]
 8002298:	461a      	mov	r2, r3
 800229a:	4b0e      	ldr	r3, [pc, #56]	; (80022d4 <main+0x1f1c>)
 800229c:	2101      	movs	r1, #1
 800229e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80022a2:	4b0b      	ldr	r3, [pc, #44]	; (80022d0 <main+0x1f18>)
 80022a4:	881b      	ldrh	r3, [r3, #0]
 80022a6:	1c5a      	adds	r2, r3, #1
 80022a8:	b291      	uxth	r1, r2
 80022aa:	4a09      	ldr	r2, [pc, #36]	; (80022d0 <main+0x1f18>)
 80022ac:	8011      	strh	r1, [r2, #0]
 80022ae:	461a      	mov	r2, r3
 80022b0:	4b08      	ldr	r3, [pc, #32]	; (80022d4 <main+0x1f1c>)
 80022b2:	2100      	movs	r1, #0
 80022b4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80022b8:	4b05      	ldr	r3, [pc, #20]	; (80022d0 <main+0x1f18>)
 80022ba:	881b      	ldrh	r3, [r3, #0]
 80022bc:	1c5a      	adds	r2, r3, #1
 80022be:	b291      	uxth	r1, r2
 80022c0:	4a03      	ldr	r2, [pc, #12]	; (80022d0 <main+0x1f18>)
 80022c2:	8011      	strh	r1, [r2, #0]
 80022c4:	461a      	mov	r2, r3
 80022c6:	4b03      	ldr	r3, [pc, #12]	; (80022d4 <main+0x1f1c>)
 80022c8:	2101      	movs	r1, #1
 80022ca:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 80022ce:	e133      	b.n	8002538 <main+0x2180>
 80022d0:	200005ae 	.word	0x200005ae
 80022d4:	200005c8 	.word	0x200005c8
          case 7: MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1;
 80022d8:	4b63      	ldr	r3, [pc, #396]	; (8002468 <main+0x20b0>)
 80022da:	881b      	ldrh	r3, [r3, #0]
 80022dc:	1c5a      	adds	r2, r3, #1
 80022de:	b291      	uxth	r1, r2
 80022e0:	4a61      	ldr	r2, [pc, #388]	; (8002468 <main+0x20b0>)
 80022e2:	8011      	strh	r1, [r2, #0]
 80022e4:	461a      	mov	r2, r3
 80022e6:	4b61      	ldr	r3, [pc, #388]	; (800246c <main+0x20b4>)
 80022e8:	2103      	movs	r1, #3
 80022ea:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80022ee:	4b5e      	ldr	r3, [pc, #376]	; (8002468 <main+0x20b0>)
 80022f0:	881b      	ldrh	r3, [r3, #0]
 80022f2:	1c5a      	adds	r2, r3, #1
 80022f4:	b291      	uxth	r1, r2
 80022f6:	4a5c      	ldr	r2, [pc, #368]	; (8002468 <main+0x20b0>)
 80022f8:	8011      	strh	r1, [r2, #0]
 80022fa:	461a      	mov	r2, r3
 80022fc:	4b5b      	ldr	r3, [pc, #364]	; (800246c <main+0x20b4>)
 80022fe:	2100      	movs	r1, #0
 8002300:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002304:	4b58      	ldr	r3, [pc, #352]	; (8002468 <main+0x20b0>)
 8002306:	881b      	ldrh	r3, [r3, #0]
 8002308:	1c5a      	adds	r2, r3, #1
 800230a:	b291      	uxth	r1, r2
 800230c:	4a56      	ldr	r2, [pc, #344]	; (8002468 <main+0x20b0>)
 800230e:	8011      	strh	r1, [r2, #0]
 8002310:	461a      	mov	r2, r3
 8002312:	4b56      	ldr	r3, [pc, #344]	; (800246c <main+0x20b4>)
 8002314:	2103      	movs	r1, #3
 8002316:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800231a:	4b53      	ldr	r3, [pc, #332]	; (8002468 <main+0x20b0>)
 800231c:	881b      	ldrh	r3, [r3, #0]
 800231e:	1c5a      	adds	r2, r3, #1
 8002320:	b291      	uxth	r1, r2
 8002322:	4a51      	ldr	r2, [pc, #324]	; (8002468 <main+0x20b0>)
 8002324:	8011      	strh	r1, [r2, #0]
 8002326:	461a      	mov	r2, r3
 8002328:	4b50      	ldr	r3, [pc, #320]	; (800246c <main+0x20b4>)
 800232a:	2100      	movs	r1, #0
 800232c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002330:	4b4d      	ldr	r3, [pc, #308]	; (8002468 <main+0x20b0>)
 8002332:	881b      	ldrh	r3, [r3, #0]
 8002334:	1c5a      	adds	r2, r3, #1
 8002336:	b291      	uxth	r1, r2
 8002338:	4a4b      	ldr	r2, [pc, #300]	; (8002468 <main+0x20b0>)
 800233a:	8011      	strh	r1, [r2, #0]
 800233c:	461a      	mov	r2, r3
 800233e:	4b4b      	ldr	r3, [pc, #300]	; (800246c <main+0x20b4>)
 8002340:	2101      	movs	r1, #1
 8002342:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002346:	4b48      	ldr	r3, [pc, #288]	; (8002468 <main+0x20b0>)
 8002348:	881b      	ldrh	r3, [r3, #0]
 800234a:	1c5a      	adds	r2, r3, #1
 800234c:	b291      	uxth	r1, r2
 800234e:	4a46      	ldr	r2, [pc, #280]	; (8002468 <main+0x20b0>)
 8002350:	8011      	strh	r1, [r2, #0]
 8002352:	461a      	mov	r2, r3
 8002354:	4b45      	ldr	r3, [pc, #276]	; (800246c <main+0x20b4>)
 8002356:	2100      	movs	r1, #0
 8002358:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800235c:	4b42      	ldr	r3, [pc, #264]	; (8002468 <main+0x20b0>)
 800235e:	881b      	ldrh	r3, [r3, #0]
 8002360:	1c5a      	adds	r2, r3, #1
 8002362:	b291      	uxth	r1, r2
 8002364:	4a40      	ldr	r2, [pc, #256]	; (8002468 <main+0x20b0>)
 8002366:	8011      	strh	r1, [r2, #0]
 8002368:	461a      	mov	r2, r3
 800236a:	4b40      	ldr	r3, [pc, #256]	; (800246c <main+0x20b4>)
 800236c:	2101      	movs	r1, #1
 800236e:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002372:	4b3d      	ldr	r3, [pc, #244]	; (8002468 <main+0x20b0>)
 8002374:	881b      	ldrh	r3, [r3, #0]
 8002376:	1c5a      	adds	r2, r3, #1
 8002378:	b291      	uxth	r1, r2
 800237a:	4a3b      	ldr	r2, [pc, #236]	; (8002468 <main+0x20b0>)
 800237c:	8011      	strh	r1, [r2, #0]
 800237e:	461a      	mov	r2, r3
 8002380:	4b3a      	ldr	r3, [pc, #232]	; (800246c <main+0x20b4>)
 8002382:	2100      	movs	r1, #0
 8002384:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002388:	4b37      	ldr	r3, [pc, #220]	; (8002468 <main+0x20b0>)
 800238a:	881b      	ldrh	r3, [r3, #0]
 800238c:	1c5a      	adds	r2, r3, #1
 800238e:	b291      	uxth	r1, r2
 8002390:	4a35      	ldr	r2, [pc, #212]	; (8002468 <main+0x20b0>)
 8002392:	8011      	strh	r1, [r2, #0]
 8002394:	461a      	mov	r2, r3
 8002396:	4b35      	ldr	r3, [pc, #212]	; (800246c <main+0x20b4>)
 8002398:	2101      	movs	r1, #1
 800239a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 800239e:	e0cb      	b.n	8002538 <main+0x2180>
          case 8: MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=1; MC2[n++]=0; MC2[n++]=1;
 80023a0:	4b31      	ldr	r3, [pc, #196]	; (8002468 <main+0x20b0>)
 80023a2:	881b      	ldrh	r3, [r3, #0]
 80023a4:	1c5a      	adds	r2, r3, #1
 80023a6:	b291      	uxth	r1, r2
 80023a8:	4a2f      	ldr	r2, [pc, #188]	; (8002468 <main+0x20b0>)
 80023aa:	8011      	strh	r1, [r2, #0]
 80023ac:	461a      	mov	r2, r3
 80023ae:	4b2f      	ldr	r3, [pc, #188]	; (800246c <main+0x20b4>)
 80023b0:	2103      	movs	r1, #3
 80023b2:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80023b6:	4b2c      	ldr	r3, [pc, #176]	; (8002468 <main+0x20b0>)
 80023b8:	881b      	ldrh	r3, [r3, #0]
 80023ba:	1c5a      	adds	r2, r3, #1
 80023bc:	b291      	uxth	r1, r2
 80023be:	4a2a      	ldr	r2, [pc, #168]	; (8002468 <main+0x20b0>)
 80023c0:	8011      	strh	r1, [r2, #0]
 80023c2:	461a      	mov	r2, r3
 80023c4:	4b29      	ldr	r3, [pc, #164]	; (800246c <main+0x20b4>)
 80023c6:	2100      	movs	r1, #0
 80023c8:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80023cc:	4b26      	ldr	r3, [pc, #152]	; (8002468 <main+0x20b0>)
 80023ce:	881b      	ldrh	r3, [r3, #0]
 80023d0:	1c5a      	adds	r2, r3, #1
 80023d2:	b291      	uxth	r1, r2
 80023d4:	4a24      	ldr	r2, [pc, #144]	; (8002468 <main+0x20b0>)
 80023d6:	8011      	strh	r1, [r2, #0]
 80023d8:	461a      	mov	r2, r3
 80023da:	4b24      	ldr	r3, [pc, #144]	; (800246c <main+0x20b4>)
 80023dc:	2103      	movs	r1, #3
 80023de:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80023e2:	4b21      	ldr	r3, [pc, #132]	; (8002468 <main+0x20b0>)
 80023e4:	881b      	ldrh	r3, [r3, #0]
 80023e6:	1c5a      	adds	r2, r3, #1
 80023e8:	b291      	uxth	r1, r2
 80023ea:	4a1f      	ldr	r2, [pc, #124]	; (8002468 <main+0x20b0>)
 80023ec:	8011      	strh	r1, [r2, #0]
 80023ee:	461a      	mov	r2, r3
 80023f0:	4b1e      	ldr	r3, [pc, #120]	; (800246c <main+0x20b4>)
 80023f2:	2100      	movs	r1, #0
 80023f4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80023f8:	4b1b      	ldr	r3, [pc, #108]	; (8002468 <main+0x20b0>)
 80023fa:	881b      	ldrh	r3, [r3, #0]
 80023fc:	1c5a      	adds	r2, r3, #1
 80023fe:	b291      	uxth	r1, r2
 8002400:	4a19      	ldr	r2, [pc, #100]	; (8002468 <main+0x20b0>)
 8002402:	8011      	strh	r1, [r2, #0]
 8002404:	461a      	mov	r2, r3
 8002406:	4b19      	ldr	r3, [pc, #100]	; (800246c <main+0x20b4>)
 8002408:	2103      	movs	r1, #3
 800240a:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800240e:	4b16      	ldr	r3, [pc, #88]	; (8002468 <main+0x20b0>)
 8002410:	881b      	ldrh	r3, [r3, #0]
 8002412:	1c5a      	adds	r2, r3, #1
 8002414:	b291      	uxth	r1, r2
 8002416:	4a14      	ldr	r2, [pc, #80]	; (8002468 <main+0x20b0>)
 8002418:	8011      	strh	r1, [r2, #0]
 800241a:	461a      	mov	r2, r3
 800241c:	4b13      	ldr	r3, [pc, #76]	; (800246c <main+0x20b4>)
 800241e:	2100      	movs	r1, #0
 8002420:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002424:	4b10      	ldr	r3, [pc, #64]	; (8002468 <main+0x20b0>)
 8002426:	881b      	ldrh	r3, [r3, #0]
 8002428:	1c5a      	adds	r2, r3, #1
 800242a:	b291      	uxth	r1, r2
 800242c:	4a0e      	ldr	r2, [pc, #56]	; (8002468 <main+0x20b0>)
 800242e:	8011      	strh	r1, [r2, #0]
 8002430:	461a      	mov	r2, r3
 8002432:	4b0e      	ldr	r3, [pc, #56]	; (800246c <main+0x20b4>)
 8002434:	2101      	movs	r1, #1
 8002436:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800243a:	4b0b      	ldr	r3, [pc, #44]	; (8002468 <main+0x20b0>)
 800243c:	881b      	ldrh	r3, [r3, #0]
 800243e:	1c5a      	adds	r2, r3, #1
 8002440:	b291      	uxth	r1, r2
 8002442:	4a09      	ldr	r2, [pc, #36]	; (8002468 <main+0x20b0>)
 8002444:	8011      	strh	r1, [r2, #0]
 8002446:	461a      	mov	r2, r3
 8002448:	4b08      	ldr	r3, [pc, #32]	; (800246c <main+0x20b4>)
 800244a:	2100      	movs	r1, #0
 800244c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002450:	4b05      	ldr	r3, [pc, #20]	; (8002468 <main+0x20b0>)
 8002452:	881b      	ldrh	r3, [r3, #0]
 8002454:	1c5a      	adds	r2, r3, #1
 8002456:	b291      	uxth	r1, r2
 8002458:	4a03      	ldr	r2, [pc, #12]	; (8002468 <main+0x20b0>)
 800245a:	8011      	strh	r1, [r2, #0]
 800245c:	461a      	mov	r2, r3
 800245e:	4b03      	ldr	r3, [pc, #12]	; (800246c <main+0x20b4>)
 8002460:	2101      	movs	r1, #1
 8002462:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8002466:	e067      	b.n	8002538 <main+0x2180>
 8002468:	200005ae 	.word	0x200005ae
 800246c:	200005c8 	.word	0x200005c8
          case 9: MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=3; MC2[n++]=0; MC2[n++]=1;
 8002470:	4b68      	ldr	r3, [pc, #416]	; (8002614 <main+0x225c>)
 8002472:	881b      	ldrh	r3, [r3, #0]
 8002474:	1c5a      	adds	r2, r3, #1
 8002476:	b291      	uxth	r1, r2
 8002478:	4a66      	ldr	r2, [pc, #408]	; (8002614 <main+0x225c>)
 800247a:	8011      	strh	r1, [r2, #0]
 800247c:	461a      	mov	r2, r3
 800247e:	4b66      	ldr	r3, [pc, #408]	; (8002618 <main+0x2260>)
 8002480:	2103      	movs	r1, #3
 8002482:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002486:	4b63      	ldr	r3, [pc, #396]	; (8002614 <main+0x225c>)
 8002488:	881b      	ldrh	r3, [r3, #0]
 800248a:	1c5a      	adds	r2, r3, #1
 800248c:	b291      	uxth	r1, r2
 800248e:	4a61      	ldr	r2, [pc, #388]	; (8002614 <main+0x225c>)
 8002490:	8011      	strh	r1, [r2, #0]
 8002492:	461a      	mov	r2, r3
 8002494:	4b60      	ldr	r3, [pc, #384]	; (8002618 <main+0x2260>)
 8002496:	2100      	movs	r1, #0
 8002498:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800249c:	4b5d      	ldr	r3, [pc, #372]	; (8002614 <main+0x225c>)
 800249e:	881b      	ldrh	r3, [r3, #0]
 80024a0:	1c5a      	adds	r2, r3, #1
 80024a2:	b291      	uxth	r1, r2
 80024a4:	4a5b      	ldr	r2, [pc, #364]	; (8002614 <main+0x225c>)
 80024a6:	8011      	strh	r1, [r2, #0]
 80024a8:	461a      	mov	r2, r3
 80024aa:	4b5b      	ldr	r3, [pc, #364]	; (8002618 <main+0x2260>)
 80024ac:	2103      	movs	r1, #3
 80024ae:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80024b2:	4b58      	ldr	r3, [pc, #352]	; (8002614 <main+0x225c>)
 80024b4:	881b      	ldrh	r3, [r3, #0]
 80024b6:	1c5a      	adds	r2, r3, #1
 80024b8:	b291      	uxth	r1, r2
 80024ba:	4a56      	ldr	r2, [pc, #344]	; (8002614 <main+0x225c>)
 80024bc:	8011      	strh	r1, [r2, #0]
 80024be:	461a      	mov	r2, r3
 80024c0:	4b55      	ldr	r3, [pc, #340]	; (8002618 <main+0x2260>)
 80024c2:	2100      	movs	r1, #0
 80024c4:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80024c8:	4b52      	ldr	r3, [pc, #328]	; (8002614 <main+0x225c>)
 80024ca:	881b      	ldrh	r3, [r3, #0]
 80024cc:	1c5a      	adds	r2, r3, #1
 80024ce:	b291      	uxth	r1, r2
 80024d0:	4a50      	ldr	r2, [pc, #320]	; (8002614 <main+0x225c>)
 80024d2:	8011      	strh	r1, [r2, #0]
 80024d4:	461a      	mov	r2, r3
 80024d6:	4b50      	ldr	r3, [pc, #320]	; (8002618 <main+0x2260>)
 80024d8:	2103      	movs	r1, #3
 80024da:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80024de:	4b4d      	ldr	r3, [pc, #308]	; (8002614 <main+0x225c>)
 80024e0:	881b      	ldrh	r3, [r3, #0]
 80024e2:	1c5a      	adds	r2, r3, #1
 80024e4:	b291      	uxth	r1, r2
 80024e6:	4a4b      	ldr	r2, [pc, #300]	; (8002614 <main+0x225c>)
 80024e8:	8011      	strh	r1, [r2, #0]
 80024ea:	461a      	mov	r2, r3
 80024ec:	4b4a      	ldr	r3, [pc, #296]	; (8002618 <main+0x2260>)
 80024ee:	2100      	movs	r1, #0
 80024f0:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 80024f4:	4b47      	ldr	r3, [pc, #284]	; (8002614 <main+0x225c>)
 80024f6:	881b      	ldrh	r3, [r3, #0]
 80024f8:	1c5a      	adds	r2, r3, #1
 80024fa:	b291      	uxth	r1, r2
 80024fc:	4a45      	ldr	r2, [pc, #276]	; (8002614 <main+0x225c>)
 80024fe:	8011      	strh	r1, [r2, #0]
 8002500:	461a      	mov	r2, r3
 8002502:	4b45      	ldr	r3, [pc, #276]	; (8002618 <main+0x2260>)
 8002504:	2103      	movs	r1, #3
 8002506:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 800250a:	4b42      	ldr	r3, [pc, #264]	; (8002614 <main+0x225c>)
 800250c:	881b      	ldrh	r3, [r3, #0]
 800250e:	1c5a      	adds	r2, r3, #1
 8002510:	b291      	uxth	r1, r2
 8002512:	4a40      	ldr	r2, [pc, #256]	; (8002614 <main+0x225c>)
 8002514:	8011      	strh	r1, [r2, #0]
 8002516:	461a      	mov	r2, r3
 8002518:	4b3f      	ldr	r3, [pc, #252]	; (8002618 <main+0x2260>)
 800251a:	2100      	movs	r1, #0
 800251c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002520:	4b3c      	ldr	r3, [pc, #240]	; (8002614 <main+0x225c>)
 8002522:	881b      	ldrh	r3, [r3, #0]
 8002524:	1c5a      	adds	r2, r3, #1
 8002526:	b291      	uxth	r1, r2
 8002528:	4a3a      	ldr	r2, [pc, #232]	; (8002614 <main+0x225c>)
 800252a:	8011      	strh	r1, [r2, #0]
 800252c:	461a      	mov	r2, r3
 800252e:	4b3a      	ldr	r3, [pc, #232]	; (8002618 <main+0x2260>)
 8002530:	2101      	movs	r1, #1
 8002532:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
                  break;
 8002536:	bf00      	nop
        }
        p*=10;
 8002538:	4b38      	ldr	r3, [pc, #224]	; (800261c <main+0x2264>)
 800253a:	681a      	ldr	r2, [r3, #0]
 800253c:	4613      	mov	r3, r2
 800253e:	009b      	lsls	r3, r3, #2
 8002540:	4413      	add	r3, r2
 8002542:	005b      	lsls	r3, r3, #1
 8002544:	461a      	mov	r2, r3
 8002546:	4b35      	ldr	r3, [pc, #212]	; (800261c <main+0x2264>)
 8002548:	601a      	str	r2, [r3, #0]
        MC2[n++]=0; MC2[n++]=0; MC2[n++]=0;
 800254a:	4b32      	ldr	r3, [pc, #200]	; (8002614 <main+0x225c>)
 800254c:	881b      	ldrh	r3, [r3, #0]
 800254e:	1c5a      	adds	r2, r3, #1
 8002550:	b291      	uxth	r1, r2
 8002552:	4a30      	ldr	r2, [pc, #192]	; (8002614 <main+0x225c>)
 8002554:	8011      	strh	r1, [r2, #0]
 8002556:	461a      	mov	r2, r3
 8002558:	4b2f      	ldr	r3, [pc, #188]	; (8002618 <main+0x2260>)
 800255a:	2100      	movs	r1, #0
 800255c:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002560:	4b2c      	ldr	r3, [pc, #176]	; (8002614 <main+0x225c>)
 8002562:	881b      	ldrh	r3, [r3, #0]
 8002564:	1c5a      	adds	r2, r3, #1
 8002566:	b291      	uxth	r1, r2
 8002568:	4a2a      	ldr	r2, [pc, #168]	; (8002614 <main+0x225c>)
 800256a:	8011      	strh	r1, [r2, #0]
 800256c:	461a      	mov	r2, r3
 800256e:	4b2a      	ldr	r3, [pc, #168]	; (8002618 <main+0x2260>)
 8002570:	2100      	movs	r1, #0
 8002572:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
 8002576:	4b27      	ldr	r3, [pc, #156]	; (8002614 <main+0x225c>)
 8002578:	881b      	ldrh	r3, [r3, #0]
 800257a:	1c5a      	adds	r2, r3, #1
 800257c:	b291      	uxth	r1, r2
 800257e:	4a25      	ldr	r2, [pc, #148]	; (8002614 <main+0x225c>)
 8002580:	8011      	strh	r1, [r2, #0]
 8002582:	461a      	mov	r2, r3
 8002584:	4b24      	ldr	r3, [pc, #144]	; (8002618 <main+0x2260>)
 8002586:	2100      	movs	r1, #0
 8002588:	f823 1012 	strh.w	r1, [r3, r2, lsl #1]
      for(i=0;(t2-t1)%(p/10)!=t2-t1&&t2!=0;++i)
 800258c:	4b24      	ldr	r3, [pc, #144]	; (8002620 <main+0x2268>)
 800258e:	881b      	ldrh	r3, [r3, #0]
 8002590:	3301      	adds	r3, #1
 8002592:	b29a      	uxth	r2, r3
 8002594:	4b22      	ldr	r3, [pc, #136]	; (8002620 <main+0x2268>)
 8002596:	801a      	strh	r2, [r3, #0]
 8002598:	4b22      	ldr	r3, [pc, #136]	; (8002624 <main+0x226c>)
 800259a:	681a      	ldr	r2, [r3, #0]
 800259c:	4b22      	ldr	r3, [pc, #136]	; (8002628 <main+0x2270>)
 800259e:	681b      	ldr	r3, [r3, #0]
 80025a0:	1ad3      	subs	r3, r2, r3
 80025a2:	4a1e      	ldr	r2, [pc, #120]	; (800261c <main+0x2264>)
 80025a4:	6812      	ldr	r2, [r2, #0]
 80025a6:	4921      	ldr	r1, [pc, #132]	; (800262c <main+0x2274>)
 80025a8:	fba1 1202 	umull	r1, r2, r1, r2
 80025ac:	08d2      	lsrs	r2, r2, #3
 80025ae:	fbb3 f1f2 	udiv	r1, r3, r2
 80025b2:	fb02 f201 	mul.w	r2, r2, r1
 80025b6:	1a9a      	subs	r2, r3, r2
 80025b8:	4b1a      	ldr	r3, [pc, #104]	; (8002624 <main+0x226c>)
 80025ba:	6819      	ldr	r1, [r3, #0]
 80025bc:	4b1a      	ldr	r3, [pc, #104]	; (8002628 <main+0x2270>)
 80025be:	681b      	ldr	r3, [r3, #0]
 80025c0:	1acb      	subs	r3, r1, r3
 80025c2:	429a      	cmp	r2, r3
 80025c4:	d004      	beq.n	80025d0 <main+0x2218>
 80025c6:	4b17      	ldr	r3, [pc, #92]	; (8002624 <main+0x226c>)
 80025c8:	681b      	ldr	r3, [r3, #0]
 80025ca:	2b00      	cmp	r3, #0
 80025cc:	f47f ab7b 	bne.w	8001cc6 <main+0x190e>
      }
      n-=2;
 80025d0:	4b10      	ldr	r3, [pc, #64]	; (8002614 <main+0x225c>)
 80025d2:	881b      	ldrh	r3, [r3, #0]
 80025d4:	3b02      	subs	r3, #2
 80025d6:	b29a      	uxth	r2, r3
 80025d8:	4b0e      	ldr	r3, [pc, #56]	; (8002614 <main+0x225c>)
 80025da:	801a      	strh	r2, [r3, #0]
      
      t3+=(12000000-PPB->SYST_CVR)*100/12000000;
 80025dc:	f04f 23e0 	mov.w	r3, #3758153728	; 0xe000e000
 80025e0:	699b      	ldr	r3, [r3, #24]
 80025e2:	f06f 0263 	mvn.w	r2, #99	; 0x63
 80025e6:	fb02 f203 	mul.w	r2, r2, r3
 80025ea:	4b11      	ldr	r3, [pc, #68]	; (8002630 <main+0x2278>)
 80025ec:	4413      	add	r3, r2
 80025ee:	4a11      	ldr	r2, [pc, #68]	; (8002634 <main+0x227c>)
 80025f0:	fba2 2303 	umull	r2, r3, r2, r3
 80025f4:	0d1a      	lsrs	r2, r3, #20
 80025f6:	4b10      	ldr	r3, [pc, #64]	; (8002638 <main+0x2280>)
 80025f8:	681b      	ldr	r3, [r3, #0]
 80025fa:	4413      	add	r3, r2
 80025fc:	4a0e      	ldr	r2, [pc, #56]	; (8002638 <main+0x2280>)
 80025fe:	6013      	str	r3, [r2, #0]
      SysTick_Config(12000000);
 8002600:	480e      	ldr	r0, [pc, #56]	; (800263c <main+0x2284>)
 8002602:	f7fd fe81 	bl	8000308 <SysTick_Config>
      XMC_GPIO_SetOutputHigh(P1_1);
 8002606:	2101      	movs	r1, #1
 8002608:	480d      	ldr	r0, [pc, #52]	; (8002640 <main+0x2288>)
 800260a:	f7fd fe9f 	bl	800034c <XMC_GPIO_SetOutputHigh>
    if(XMC_GPIO_GetInput(P1_14)==0&&f1==0&&f2==0)
 800260e:	f7ff ba57 	b.w	8001ac0 <main+0x1708>
 8002612:	bf00      	nop
 8002614:	200005ae 	.word	0x200005ae
 8002618:	200005c8 	.word	0x200005c8
 800261c:	200007c8 	.word	0x200007c8
 8002620:	200005a8 	.word	0x200005a8
 8002624:	200005b4 	.word	0x200005b4
 8002628:	200005b0 	.word	0x200005b0
 800262c:	cccccccd 	.word	0xcccccccd
 8002630:	47868c00 	.word	0x47868c00
 8002634:	165e9f81 	.word	0x165e9f81
 8002638:	200005b8 	.word	0x200005b8
 800263c:	00b71b00 	.word	0x00b71b00
 8002640:	48028100 	.word	0x48028100

08002644 <SysTick_Handler>:

  return(0);
}

void SysTick_Handler(void)
{
 8002644:	b580      	push	{r7, lr}
 8002646:	af00      	add	r7, sp, #0
  t3+=100;
 8002648:	4b76      	ldr	r3, [pc, #472]	; (8002824 <SysTick_Handler+0x1e0>)
 800264a:	681b      	ldr	r3, [r3, #0]
 800264c:	3364      	adds	r3, #100	; 0x64
 800264e:	4a75      	ldr	r2, [pc, #468]	; (8002824 <SysTick_Handler+0x1e0>)
 8002650:	6013      	str	r3, [r2, #0]
  if(f1==1)
 8002652:	4b75      	ldr	r3, [pc, #468]	; (8002828 <SysTick_Handler+0x1e4>)
 8002654:	881b      	ldrh	r3, [r3, #0]
 8002656:	2b01      	cmp	r3, #1
 8002658:	d16d      	bne.n	8002736 <SysTick_Handler+0xf2>
  {
    if(i<j)
 800265a:	4b74      	ldr	r3, [pc, #464]	; (800282c <SysTick_Handler+0x1e8>)
 800265c:	881a      	ldrh	r2, [r3, #0]
 800265e:	4b74      	ldr	r3, [pc, #464]	; (8002830 <SysTick_Handler+0x1ec>)
 8002660:	881b      	ldrh	r3, [r3, #0]
 8002662:	429a      	cmp	r2, r3
 8002664:	d25b      	bcs.n	800271e <SysTick_Handler+0xda>
    {
      if(MC1[i]==++k)
 8002666:	4b71      	ldr	r3, [pc, #452]	; (800282c <SysTick_Handler+0x1e8>)
 8002668:	881b      	ldrh	r3, [r3, #0]
 800266a:	461a      	mov	r2, r3
 800266c:	4b71      	ldr	r3, [pc, #452]	; (8002834 <SysTick_Handler+0x1f0>)
 800266e:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002672:	4b71      	ldr	r3, [pc, #452]	; (8002838 <SysTick_Handler+0x1f4>)
 8002674:	881b      	ldrh	r3, [r3, #0]
 8002676:	3301      	adds	r3, #1
 8002678:	b299      	uxth	r1, r3
 800267a:	4b6f      	ldr	r3, [pc, #444]	; (8002838 <SysTick_Handler+0x1f4>)
 800267c:	8019      	strh	r1, [r3, #0]
 800267e:	4b6e      	ldr	r3, [pc, #440]	; (8002838 <SysTick_Handler+0x1f4>)
 8002680:	881b      	ldrh	r3, [r3, #0]
 8002682:	429a      	cmp	r2, r3
 8002684:	d10d      	bne.n	80026a2 <SysTick_Handler+0x5e>
      {
        k=0;
 8002686:	4b6c      	ldr	r3, [pc, #432]	; (8002838 <SysTick_Handler+0x1f4>)
 8002688:	2200      	movs	r2, #0
 800268a:	801a      	strh	r2, [r3, #0]
        ++i;
 800268c:	4b67      	ldr	r3, [pc, #412]	; (800282c <SysTick_Handler+0x1e8>)
 800268e:	881b      	ldrh	r3, [r3, #0]
 8002690:	3301      	adds	r3, #1
 8002692:	b29a      	uxth	r2, r3
 8002694:	4b65      	ldr	r3, [pc, #404]	; (800282c <SysTick_Handler+0x1e8>)
 8002696:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputLow(P1_1);
 8002698:	2101      	movs	r1, #1
 800269a:	4868      	ldr	r0, [pc, #416]	; (800283c <SysTick_Handler+0x1f8>)
 800269c:	f7fd fe67 	bl	800036e <XMC_GPIO_SetOutputLow>
        XMC_GPIO_SetOutputLow(P1_1);
      }
    }
    else f2=i=k=n=0;
  }
 80026a0:	e0bd      	b.n	800281e <SysTick_Handler+0x1da>
      else if(MC1[i]==0&&MC1[i+1]!=0)
 80026a2:	4b62      	ldr	r3, [pc, #392]	; (800282c <SysTick_Handler+0x1e8>)
 80026a4:	881b      	ldrh	r3, [r3, #0]
 80026a6:	461a      	mov	r2, r3
 80026a8:	4b62      	ldr	r3, [pc, #392]	; (8002834 <SysTick_Handler+0x1f0>)
 80026aa:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80026ae:	2b00      	cmp	r3, #0
 80026b0:	d115      	bne.n	80026de <SysTick_Handler+0x9a>
 80026b2:	4b5e      	ldr	r3, [pc, #376]	; (800282c <SysTick_Handler+0x1e8>)
 80026b4:	881b      	ldrh	r3, [r3, #0]
 80026b6:	3301      	adds	r3, #1
 80026b8:	4a5e      	ldr	r2, [pc, #376]	; (8002834 <SysTick_Handler+0x1f0>)
 80026ba:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80026be:	2b00      	cmp	r3, #0
 80026c0:	d00d      	beq.n	80026de <SysTick_Handler+0x9a>
        k=0;
 80026c2:	4b5d      	ldr	r3, [pc, #372]	; (8002838 <SysTick_Handler+0x1f4>)
 80026c4:	2200      	movs	r2, #0
 80026c6:	801a      	strh	r2, [r3, #0]
        ++i;
 80026c8:	4b58      	ldr	r3, [pc, #352]	; (800282c <SysTick_Handler+0x1e8>)
 80026ca:	881b      	ldrh	r3, [r3, #0]
 80026cc:	3301      	adds	r3, #1
 80026ce:	b29a      	uxth	r2, r3
 80026d0:	4b56      	ldr	r3, [pc, #344]	; (800282c <SysTick_Handler+0x1e8>)
 80026d2:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputHigh(P1_1);
 80026d4:	2101      	movs	r1, #1
 80026d6:	4859      	ldr	r0, [pc, #356]	; (800283c <SysTick_Handler+0x1f8>)
 80026d8:	f7fd fe38 	bl	800034c <XMC_GPIO_SetOutputHigh>
 80026dc:	e09f      	b.n	800281e <SysTick_Handler+0x1da>
      else if(MC1[i]==0&&MC1[i+1]==0)
 80026de:	4b53      	ldr	r3, [pc, #332]	; (800282c <SysTick_Handler+0x1e8>)
 80026e0:	881b      	ldrh	r3, [r3, #0]
 80026e2:	461a      	mov	r2, r3
 80026e4:	4b53      	ldr	r3, [pc, #332]	; (8002834 <SysTick_Handler+0x1f0>)
 80026e6:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80026ea:	2b00      	cmp	r3, #0
 80026ec:	f040 8097 	bne.w	800281e <SysTick_Handler+0x1da>
 80026f0:	4b4e      	ldr	r3, [pc, #312]	; (800282c <SysTick_Handler+0x1e8>)
 80026f2:	881b      	ldrh	r3, [r3, #0]
 80026f4:	3301      	adds	r3, #1
 80026f6:	4a4f      	ldr	r2, [pc, #316]	; (8002834 <SysTick_Handler+0x1f0>)
 80026f8:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80026fc:	2b00      	cmp	r3, #0
 80026fe:	f040 808e 	bne.w	800281e <SysTick_Handler+0x1da>
        k=0;
 8002702:	4b4d      	ldr	r3, [pc, #308]	; (8002838 <SysTick_Handler+0x1f4>)
 8002704:	2200      	movs	r2, #0
 8002706:	801a      	strh	r2, [r3, #0]
        ++i;
 8002708:	4b48      	ldr	r3, [pc, #288]	; (800282c <SysTick_Handler+0x1e8>)
 800270a:	881b      	ldrh	r3, [r3, #0]
 800270c:	3301      	adds	r3, #1
 800270e:	b29a      	uxth	r2, r3
 8002710:	4b46      	ldr	r3, [pc, #280]	; (800282c <SysTick_Handler+0x1e8>)
 8002712:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputLow(P1_1);
 8002714:	2101      	movs	r1, #1
 8002716:	4849      	ldr	r0, [pc, #292]	; (800283c <SysTick_Handler+0x1f8>)
 8002718:	f7fd fe29 	bl	800036e <XMC_GPIO_SetOutputLow>
 800271c:	e07f      	b.n	800281e <SysTick_Handler+0x1da>
    else f1=i=k=0;
 800271e:	4b46      	ldr	r3, [pc, #280]	; (8002838 <SysTick_Handler+0x1f4>)
 8002720:	2200      	movs	r2, #0
 8002722:	801a      	strh	r2, [r3, #0]
 8002724:	4b44      	ldr	r3, [pc, #272]	; (8002838 <SysTick_Handler+0x1f4>)
 8002726:	881a      	ldrh	r2, [r3, #0]
 8002728:	4b40      	ldr	r3, [pc, #256]	; (800282c <SysTick_Handler+0x1e8>)
 800272a:	801a      	strh	r2, [r3, #0]
 800272c:	4b3f      	ldr	r3, [pc, #252]	; (800282c <SysTick_Handler+0x1e8>)
 800272e:	881a      	ldrh	r2, [r3, #0]
 8002730:	4b3d      	ldr	r3, [pc, #244]	; (8002828 <SysTick_Handler+0x1e4>)
 8002732:	801a      	strh	r2, [r3, #0]
 8002734:	e073      	b.n	800281e <SysTick_Handler+0x1da>
  else if(f2==1)
 8002736:	4b42      	ldr	r3, [pc, #264]	; (8002840 <SysTick_Handler+0x1fc>)
 8002738:	881b      	ldrh	r3, [r3, #0]
 800273a:	2b01      	cmp	r3, #1
 800273c:	d16f      	bne.n	800281e <SysTick_Handler+0x1da>
    if(i<n)
 800273e:	4b3b      	ldr	r3, [pc, #236]	; (800282c <SysTick_Handler+0x1e8>)
 8002740:	881a      	ldrh	r2, [r3, #0]
 8002742:	4b40      	ldr	r3, [pc, #256]	; (8002844 <SysTick_Handler+0x200>)
 8002744:	881b      	ldrh	r3, [r3, #0]
 8002746:	429a      	cmp	r2, r3
 8002748:	d259      	bcs.n	80027fe <SysTick_Handler+0x1ba>
      if(MC2[i]==++k)
 800274a:	4b38      	ldr	r3, [pc, #224]	; (800282c <SysTick_Handler+0x1e8>)
 800274c:	881b      	ldrh	r3, [r3, #0]
 800274e:	461a      	mov	r2, r3
 8002750:	4b3d      	ldr	r3, [pc, #244]	; (8002848 <SysTick_Handler+0x204>)
 8002752:	f833 2012 	ldrh.w	r2, [r3, r2, lsl #1]
 8002756:	4b38      	ldr	r3, [pc, #224]	; (8002838 <SysTick_Handler+0x1f4>)
 8002758:	881b      	ldrh	r3, [r3, #0]
 800275a:	3301      	adds	r3, #1
 800275c:	b299      	uxth	r1, r3
 800275e:	4b36      	ldr	r3, [pc, #216]	; (8002838 <SysTick_Handler+0x1f4>)
 8002760:	8019      	strh	r1, [r3, #0]
 8002762:	4b35      	ldr	r3, [pc, #212]	; (8002838 <SysTick_Handler+0x1f4>)
 8002764:	881b      	ldrh	r3, [r3, #0]
 8002766:	429a      	cmp	r2, r3
 8002768:	d10d      	bne.n	8002786 <SysTick_Handler+0x142>
        k=0;
 800276a:	4b33      	ldr	r3, [pc, #204]	; (8002838 <SysTick_Handler+0x1f4>)
 800276c:	2200      	movs	r2, #0
 800276e:	801a      	strh	r2, [r3, #0]
        ++i;
 8002770:	4b2e      	ldr	r3, [pc, #184]	; (800282c <SysTick_Handler+0x1e8>)
 8002772:	881b      	ldrh	r3, [r3, #0]
 8002774:	3301      	adds	r3, #1
 8002776:	b29a      	uxth	r2, r3
 8002778:	4b2c      	ldr	r3, [pc, #176]	; (800282c <SysTick_Handler+0x1e8>)
 800277a:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputLow(P1_1);
 800277c:	2101      	movs	r1, #1
 800277e:	482f      	ldr	r0, [pc, #188]	; (800283c <SysTick_Handler+0x1f8>)
 8002780:	f7fd fdf5 	bl	800036e <XMC_GPIO_SetOutputLow>
 8002784:	e04b      	b.n	800281e <SysTick_Handler+0x1da>
      else if(MC2[i]==0&&MC2[i+1]!=0)
 8002786:	4b29      	ldr	r3, [pc, #164]	; (800282c <SysTick_Handler+0x1e8>)
 8002788:	881b      	ldrh	r3, [r3, #0]
 800278a:	461a      	mov	r2, r3
 800278c:	4b2e      	ldr	r3, [pc, #184]	; (8002848 <SysTick_Handler+0x204>)
 800278e:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 8002792:	2b00      	cmp	r3, #0
 8002794:	d115      	bne.n	80027c2 <SysTick_Handler+0x17e>
 8002796:	4b25      	ldr	r3, [pc, #148]	; (800282c <SysTick_Handler+0x1e8>)
 8002798:	881b      	ldrh	r3, [r3, #0]
 800279a:	3301      	adds	r3, #1
 800279c:	4a2a      	ldr	r2, [pc, #168]	; (8002848 <SysTick_Handler+0x204>)
 800279e:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80027a2:	2b00      	cmp	r3, #0
 80027a4:	d00d      	beq.n	80027c2 <SysTick_Handler+0x17e>
        k=0;
 80027a6:	4b24      	ldr	r3, [pc, #144]	; (8002838 <SysTick_Handler+0x1f4>)
 80027a8:	2200      	movs	r2, #0
 80027aa:	801a      	strh	r2, [r3, #0]
        ++i;
 80027ac:	4b1f      	ldr	r3, [pc, #124]	; (800282c <SysTick_Handler+0x1e8>)
 80027ae:	881b      	ldrh	r3, [r3, #0]
 80027b0:	3301      	adds	r3, #1
 80027b2:	b29a      	uxth	r2, r3
 80027b4:	4b1d      	ldr	r3, [pc, #116]	; (800282c <SysTick_Handler+0x1e8>)
 80027b6:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputHigh(P1_1);
 80027b8:	2101      	movs	r1, #1
 80027ba:	4820      	ldr	r0, [pc, #128]	; (800283c <SysTick_Handler+0x1f8>)
 80027bc:	f7fd fdc6 	bl	800034c <XMC_GPIO_SetOutputHigh>
 80027c0:	e02d      	b.n	800281e <SysTick_Handler+0x1da>
      else if(MC2[i]==0&&MC2[i+1]==0)
 80027c2:	4b1a      	ldr	r3, [pc, #104]	; (800282c <SysTick_Handler+0x1e8>)
 80027c4:	881b      	ldrh	r3, [r3, #0]
 80027c6:	461a      	mov	r2, r3
 80027c8:	4b1f      	ldr	r3, [pc, #124]	; (8002848 <SysTick_Handler+0x204>)
 80027ca:	f833 3012 	ldrh.w	r3, [r3, r2, lsl #1]
 80027ce:	2b00      	cmp	r3, #0
 80027d0:	d125      	bne.n	800281e <SysTick_Handler+0x1da>
 80027d2:	4b16      	ldr	r3, [pc, #88]	; (800282c <SysTick_Handler+0x1e8>)
 80027d4:	881b      	ldrh	r3, [r3, #0]
 80027d6:	3301      	adds	r3, #1
 80027d8:	4a1b      	ldr	r2, [pc, #108]	; (8002848 <SysTick_Handler+0x204>)
 80027da:	f832 3013 	ldrh.w	r3, [r2, r3, lsl #1]
 80027de:	2b00      	cmp	r3, #0
 80027e0:	d11d      	bne.n	800281e <SysTick_Handler+0x1da>
        k=0;
 80027e2:	4b15      	ldr	r3, [pc, #84]	; (8002838 <SysTick_Handler+0x1f4>)
 80027e4:	2200      	movs	r2, #0
 80027e6:	801a      	strh	r2, [r3, #0]
        ++i;
 80027e8:	4b10      	ldr	r3, [pc, #64]	; (800282c <SysTick_Handler+0x1e8>)
 80027ea:	881b      	ldrh	r3, [r3, #0]
 80027ec:	3301      	adds	r3, #1
 80027ee:	b29a      	uxth	r2, r3
 80027f0:	4b0e      	ldr	r3, [pc, #56]	; (800282c <SysTick_Handler+0x1e8>)
 80027f2:	801a      	strh	r2, [r3, #0]
        XMC_GPIO_SetOutputLow(P1_1);
 80027f4:	2101      	movs	r1, #1
 80027f6:	4811      	ldr	r0, [pc, #68]	; (800283c <SysTick_Handler+0x1f8>)
 80027f8:	f7fd fdb9 	bl	800036e <XMC_GPIO_SetOutputLow>
 80027fc:	e00f      	b.n	800281e <SysTick_Handler+0x1da>
    else f2=i=k=n=0;
 80027fe:	4b11      	ldr	r3, [pc, #68]	; (8002844 <SysTick_Handler+0x200>)
 8002800:	2200      	movs	r2, #0
 8002802:	801a      	strh	r2, [r3, #0]
 8002804:	4b0f      	ldr	r3, [pc, #60]	; (8002844 <SysTick_Handler+0x200>)
 8002806:	881a      	ldrh	r2, [r3, #0]
 8002808:	4b0b      	ldr	r3, [pc, #44]	; (8002838 <SysTick_Handler+0x1f4>)
 800280a:	801a      	strh	r2, [r3, #0]
 800280c:	4b0a      	ldr	r3, [pc, #40]	; (8002838 <SysTick_Handler+0x1f4>)
 800280e:	881a      	ldrh	r2, [r3, #0]
 8002810:	4b06      	ldr	r3, [pc, #24]	; (800282c <SysTick_Handler+0x1e8>)
 8002812:	801a      	strh	r2, [r3, #0]
 8002814:	4b05      	ldr	r3, [pc, #20]	; (800282c <SysTick_Handler+0x1e8>)
 8002816:	881a      	ldrh	r2, [r3, #0]
 8002818:	4b09      	ldr	r3, [pc, #36]	; (8002840 <SysTick_Handler+0x1fc>)
 800281a:	801a      	strh	r2, [r3, #0]
 800281c:	e7ff      	b.n	800281e <SysTick_Handler+0x1da>
 800281e:	bf00      	nop
 8002820:	bd80      	pop	{r7, pc}
 8002822:	bf00      	nop
 8002824:	200005b8 	.word	0x200005b8
 8002828:	200005a4 	.word	0x200005a4
 800282c:	200005a8 	.word	0x200005a8
 8002830:	200005aa 	.word	0x200005aa
 8002834:	200007cc 	.word	0x200007cc
 8002838:	200005ac 	.word	0x200005ac
 800283c:	48028100 	.word	0x48028100
 8002840:	200005a6 	.word	0x200005a6
 8002844:	200005ae 	.word	0x200005ae
 8002848:	200005c8 	.word	0x200005c8

0800284c <XMC_GPIO_SetMode>:
/*******************************************************************************
 * API IMPLEMENTATION
 *******************************************************************************/

void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode)
{
 800284c:	b480      	push	{r7}
 800284e:	b083      	sub	sp, #12
 8002850:	af00      	add	r7, sp, #0
 8002852:	6078      	str	r0, [r7, #4]
 8002854:	460b      	mov	r3, r1
 8002856:	70fb      	strb	r3, [r7, #3]
 8002858:	4613      	mov	r3, r2
 800285a:	70bb      	strb	r3, [r7, #2]
  XMC_ASSERT("XMC_GPIO_SetMode: Invalid port", XMC_GPIO_CHECK_PORT(port));
  XMC_ASSERT("XMC_GPIO_SetMode: Invalid mode", XMC_GPIO_IsModeValid(mode));

  port->IOCR[(uint32_t)pin >> 2U] &= ~(uint32_t)((uint32_t)PORT_IOCR_PC_Msk << ((uint32_t)PORT_IOCR_PC_Size * ((uint32_t)pin & 0x3U)));
 800285c:	78fb      	ldrb	r3, [r7, #3]
 800285e:	089b      	lsrs	r3, r3, #2
 8002860:	b2db      	uxtb	r3, r3
 8002862:	461a      	mov	r2, r3
 8002864:	687b      	ldr	r3, [r7, #4]
 8002866:	3204      	adds	r2, #4
 8002868:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 800286c:	78fb      	ldrb	r3, [r7, #3]
 800286e:	f003 0303 	and.w	r3, r3, #3
 8002872:	00db      	lsls	r3, r3, #3
 8002874:	21f8      	movs	r1, #248	; 0xf8
 8002876:	fa01 f303 	lsl.w	r3, r1, r3
 800287a:	43db      	mvns	r3, r3
 800287c:	78f9      	ldrb	r1, [r7, #3]
 800287e:	0889      	lsrs	r1, r1, #2
 8002880:	b2c9      	uxtb	r1, r1
 8002882:	4608      	mov	r0, r1
 8002884:	ea02 0103 	and.w	r1, r2, r3
 8002888:	687b      	ldr	r3, [r7, #4]
 800288a:	1d02      	adds	r2, r0, #4
 800288c:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  port->IOCR[(uint32_t)pin >> 2U] |= (uint32_t)mode << ((uint32_t)PORT_IOCR_PC_Size * ((uint32_t)pin & 0x3U));
 8002890:	78fb      	ldrb	r3, [r7, #3]
 8002892:	089b      	lsrs	r3, r3, #2
 8002894:	b2db      	uxtb	r3, r3
 8002896:	461a      	mov	r2, r3
 8002898:	687b      	ldr	r3, [r7, #4]
 800289a:	3204      	adds	r2, #4
 800289c:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80028a0:	78b9      	ldrb	r1, [r7, #2]
 80028a2:	78fb      	ldrb	r3, [r7, #3]
 80028a4:	f003 0303 	and.w	r3, r3, #3
 80028a8:	00db      	lsls	r3, r3, #3
 80028aa:	fa01 f303 	lsl.w	r3, r1, r3
 80028ae:	78f9      	ldrb	r1, [r7, #3]
 80028b0:	0889      	lsrs	r1, r1, #2
 80028b2:	b2c9      	uxtb	r1, r1
 80028b4:	4608      	mov	r0, r1
 80028b6:	ea42 0103 	orr.w	r1, r2, r3
 80028ba:	687b      	ldr	r3, [r7, #4]
 80028bc:	1d02      	adds	r2, r0, #4
 80028be:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 80028c2:	bf00      	nop
 80028c4:	370c      	adds	r7, #12
 80028c6:	46bd      	mov	sp, r7
 80028c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80028cc:	4770      	bx	lr

080028ce <XMC_GPIO_SetHardwareControl>:

void XMC_GPIO_SetHardwareControl(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_HWCTRL_t hwctrl)
{
 80028ce:	b480      	push	{r7}
 80028d0:	b083      	sub	sp, #12
 80028d2:	af00      	add	r7, sp, #0
 80028d4:	6078      	str	r0, [r7, #4]
 80028d6:	460b      	mov	r3, r1
 80028d8:	70fb      	strb	r3, [r7, #3]
 80028da:	4613      	mov	r3, r2
 80028dc:	70bb      	strb	r3, [r7, #2]
  XMC_ASSERT("XMC_GPIO_SetHardwareControl: Invalid port", XMC_GPIO_CHECK_PORT(port));
  XMC_ASSERT("XMC_GPIO_SetHardwareControl: Invalid hwctrl", XMC_GPIO_CHECK_HWCTRL(hwctrl));

  port->HWSEL &= ~(uint32_t)((uint32_t)PORT_HWSEL_Msk << ((uint32_t)pin << 1U));
 80028de:	687b      	ldr	r3, [r7, #4]
 80028e0:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80028e2:	78fb      	ldrb	r3, [r7, #3]
 80028e4:	005b      	lsls	r3, r3, #1
 80028e6:	2103      	movs	r1, #3
 80028e8:	fa01 f303 	lsl.w	r3, r1, r3
 80028ec:	43db      	mvns	r3, r3
 80028ee:	401a      	ands	r2, r3
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	675a      	str	r2, [r3, #116]	; 0x74
  port->HWSEL |= (uint32_t)hwctrl << ((uint32_t)pin << 1U);
 80028f4:	687b      	ldr	r3, [r7, #4]
 80028f6:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 80028f8:	78b9      	ldrb	r1, [r7, #2]
 80028fa:	78fb      	ldrb	r3, [r7, #3]
 80028fc:	005b      	lsls	r3, r3, #1
 80028fe:	fa01 f303 	lsl.w	r3, r1, r3
 8002902:	431a      	orrs	r2, r3
 8002904:	687b      	ldr	r3, [r7, #4]
 8002906:	675a      	str	r2, [r3, #116]	; 0x74
}
 8002908:	bf00      	nop
 800290a:	370c      	adds	r7, #12
 800290c:	46bd      	mov	sp, r7
 800290e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002912:	4770      	bx	lr

08002914 <XMC_GPIO_Init>:
/*******************************************************************************
 * API IMPLEMENTATION
 *******************************************************************************/

void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const config)
{
 8002914:	b480      	push	{r7}
 8002916:	b085      	sub	sp, #20
 8002918:	af00      	add	r7, sp, #0
 800291a:	60f8      	str	r0, [r7, #12]
 800291c:	460b      	mov	r3, r1
 800291e:	607a      	str	r2, [r7, #4]
 8002920:	72fb      	strb	r3, [r7, #11]
  XMC_ASSERT("XMC_GPIO_Init: Invalid port", XMC_GPIO_CHECK_PORT(port));
  XMC_ASSERT("XMC_GPIO_Init: Invalid mode", XMC_GPIO_IsModeValid(config->mode));
 
  /* Switch to input */
  port->IOCR[pin >> 2U] &= (uint32_t)~(PORT_IOCR_PC_Msk << (PORT_IOCR_PC_Size * (pin & 0x3U)));
 8002922:	7afb      	ldrb	r3, [r7, #11]
 8002924:	089b      	lsrs	r3, r3, #2
 8002926:	b2db      	uxtb	r3, r3
 8002928:	461a      	mov	r2, r3
 800292a:	68fb      	ldr	r3, [r7, #12]
 800292c:	3204      	adds	r2, #4
 800292e:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002932:	7afb      	ldrb	r3, [r7, #11]
 8002934:	f003 0303 	and.w	r3, r3, #3
 8002938:	00db      	lsls	r3, r3, #3
 800293a:	21f8      	movs	r1, #248	; 0xf8
 800293c:	fa01 f303 	lsl.w	r3, r1, r3
 8002940:	43db      	mvns	r3, r3
 8002942:	7af9      	ldrb	r1, [r7, #11]
 8002944:	0889      	lsrs	r1, r1, #2
 8002946:	b2c9      	uxtb	r1, r1
 8002948:	4608      	mov	r0, r1
 800294a:	ea02 0103 	and.w	r1, r2, r3
 800294e:	68fb      	ldr	r3, [r7, #12]
 8002950:	1d02      	adds	r2, r0, #4
 8002952:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

  /* HW port control is disabled */
  port->HWSEL &= ~(uint32_t)((uint32_t)PORT_HWSEL_Msk << ((uint32_t)pin << 1U));
 8002956:	68fb      	ldr	r3, [r7, #12]
 8002958:	6f5a      	ldr	r2, [r3, #116]	; 0x74
 800295a:	7afb      	ldrb	r3, [r7, #11]
 800295c:	005b      	lsls	r3, r3, #1
 800295e:	2103      	movs	r1, #3
 8002960:	fa01 f303 	lsl.w	r3, r1, r3
 8002964:	43db      	mvns	r3, r3
 8002966:	401a      	ands	r2, r3
 8002968:	68fb      	ldr	r3, [r7, #12]
 800296a:	675a      	str	r2, [r3, #116]	; 0x74


  /* Enable digital input */
  if (XMC_GPIO_CHECK_ANALOG_PORT(port))
 800296c:	68fb      	ldr	r3, [r7, #12]
 800296e:	4a38      	ldr	r2, [pc, #224]	; (8002a50 <XMC_GPIO_Init+0x13c>)
 8002970:	4293      	cmp	r3, r2
 8002972:	d003      	beq.n	800297c <XMC_GPIO_Init+0x68>
 8002974:	68fb      	ldr	r3, [r7, #12]
 8002976:	4a37      	ldr	r2, [pc, #220]	; (8002a54 <XMC_GPIO_Init+0x140>)
 8002978:	4293      	cmp	r3, r2
 800297a:	d10a      	bne.n	8002992 <XMC_GPIO_Init+0x7e>
  {
    port->PDISC &= ~(uint32_t)((uint32_t)0x1U << pin);
 800297c:	68fb      	ldr	r3, [r7, #12]
 800297e:	6e1a      	ldr	r2, [r3, #96]	; 0x60
 8002980:	7afb      	ldrb	r3, [r7, #11]
 8002982:	2101      	movs	r1, #1
 8002984:	fa01 f303 	lsl.w	r3, r1, r3
 8002988:	43db      	mvns	r3, r3
 800298a:	401a      	ands	r2, r3
 800298c:	68fb      	ldr	r3, [r7, #12]
 800298e:	661a      	str	r2, [r3, #96]	; 0x60
 8002990:	e03c      	b.n	8002a0c <XMC_GPIO_Init+0xf8>
  }
  else
  {
    /* Set output level */
    port->OMR = (uint32_t)config->output_level << pin;
 8002992:	687b      	ldr	r3, [r7, #4]
 8002994:	685a      	ldr	r2, [r3, #4]
 8002996:	7afb      	ldrb	r3, [r7, #11]
 8002998:	409a      	lsls	r2, r3
 800299a:	68fb      	ldr	r3, [r7, #12]
 800299c:	605a      	str	r2, [r3, #4]

    /* Set output driver strength */
    port->PDR[pin >> 3U] &= (uint32_t)~(PORT_PDR_Msk << ((uint32_t)PORT_PDR_Size * ((uint32_t)pin & 0x7U)));
 800299e:	7afb      	ldrb	r3, [r7, #11]
 80029a0:	08db      	lsrs	r3, r3, #3
 80029a2:	b2db      	uxtb	r3, r3
 80029a4:	461a      	mov	r2, r3
 80029a6:	68fb      	ldr	r3, [r7, #12]
 80029a8:	3210      	adds	r2, #16
 80029aa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80029ae:	7afb      	ldrb	r3, [r7, #11]
 80029b0:	f003 0307 	and.w	r3, r3, #7
 80029b4:	009b      	lsls	r3, r3, #2
 80029b6:	2107      	movs	r1, #7
 80029b8:	fa01 f303 	lsl.w	r3, r1, r3
 80029bc:	43db      	mvns	r3, r3
 80029be:	7af9      	ldrb	r1, [r7, #11]
 80029c0:	08c9      	lsrs	r1, r1, #3
 80029c2:	b2c9      	uxtb	r1, r1
 80029c4:	4608      	mov	r0, r1
 80029c6:	ea02 0103 	and.w	r1, r2, r3
 80029ca:	68fb      	ldr	r3, [r7, #12]
 80029cc:	f100 0210 	add.w	r2, r0, #16
 80029d0:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
    port->PDR[pin >> 3U] |= (uint32_t)config->output_strength << ((uint32_t)PORT_PDR_Size * ((uint32_t)pin & 0x7U));
 80029d4:	7afb      	ldrb	r3, [r7, #11]
 80029d6:	08db      	lsrs	r3, r3, #3
 80029d8:	b2db      	uxtb	r3, r3
 80029da:	461a      	mov	r2, r3
 80029dc:	68fb      	ldr	r3, [r7, #12]
 80029de:	3210      	adds	r2, #16
 80029e0:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80029e4:	687b      	ldr	r3, [r7, #4]
 80029e6:	7a1b      	ldrb	r3, [r3, #8]
 80029e8:	4619      	mov	r1, r3
 80029ea:	7afb      	ldrb	r3, [r7, #11]
 80029ec:	f003 0307 	and.w	r3, r3, #7
 80029f0:	009b      	lsls	r3, r3, #2
 80029f2:	fa01 f303 	lsl.w	r3, r1, r3
 80029f6:	7af9      	ldrb	r1, [r7, #11]
 80029f8:	08c9      	lsrs	r1, r1, #3
 80029fa:	b2c9      	uxtb	r1, r1
 80029fc:	4608      	mov	r0, r1
 80029fe:	ea42 0103 	orr.w	r1, r2, r3
 8002a02:	68fb      	ldr	r3, [r7, #12]
 8002a04:	f100 0210 	add.w	r2, r0, #16
 8002a08:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  }

  /* Set mode */
  port->IOCR[pin >> 2U] |= (uint32_t)config->mode << ((uint32_t)PORT_IOCR_PC_Size * ((uint32_t)pin & 0x3U));
 8002a0c:	7afb      	ldrb	r3, [r7, #11]
 8002a0e:	089b      	lsrs	r3, r3, #2
 8002a10:	b2db      	uxtb	r3, r3
 8002a12:	461a      	mov	r2, r3
 8002a14:	68fb      	ldr	r3, [r7, #12]
 8002a16:	3204      	adds	r2, #4
 8002a18:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002a1c:	687b      	ldr	r3, [r7, #4]
 8002a1e:	781b      	ldrb	r3, [r3, #0]
 8002a20:	4619      	mov	r1, r3
 8002a22:	7afb      	ldrb	r3, [r7, #11]
 8002a24:	f003 0303 	and.w	r3, r3, #3
 8002a28:	00db      	lsls	r3, r3, #3
 8002a2a:	fa01 f303 	lsl.w	r3, r1, r3
 8002a2e:	7af9      	ldrb	r1, [r7, #11]
 8002a30:	0889      	lsrs	r1, r1, #2
 8002a32:	b2c9      	uxtb	r1, r1
 8002a34:	4608      	mov	r0, r1
 8002a36:	ea42 0103 	orr.w	r1, r2, r3
 8002a3a:	68fb      	ldr	r3, [r7, #12]
 8002a3c:	1d02      	adds	r2, r0, #4
 8002a3e:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 8002a42:	bf00      	nop
 8002a44:	3714      	adds	r7, #20
 8002a46:	46bd      	mov	sp, r7
 8002a48:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002a4c:	4770      	bx	lr
 8002a4e:	bf00      	nop
 8002a50:	48028e00 	.word	0x48028e00
 8002a54:	48028f00 	.word	0x48028f00

08002a58 <XMC_GPIO_SetOutputStrength>:

void XMC_GPIO_SetOutputStrength(XMC_GPIO_PORT_t *const port, const uint8_t pin, XMC_GPIO_OUTPUT_STRENGTH_t strength)
{
 8002a58:	b480      	push	{r7}
 8002a5a:	b083      	sub	sp, #12
 8002a5c:	af00      	add	r7, sp, #0
 8002a5e:	6078      	str	r0, [r7, #4]
 8002a60:	460b      	mov	r3, r1
 8002a62:	70fb      	strb	r3, [r7, #3]
 8002a64:	4613      	mov	r3, r2
 8002a66:	70bb      	strb	r3, [r7, #2]
  XMC_ASSERT("XMC_GPIO_Init: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
  XMC_ASSERT("XMC_GPIO_Init: Invalid output strength", XMC_GPIO_CHECK_OUTPUT_STRENGTH(strength));

  port->PDR[pin >> 3U] &= (uint32_t)~((uint32_t)PORT_PDR_Msk << ((uint32_t)PORT_PDR_Size * ((uint32_t)pin & 0x7U)));
 8002a68:	78fb      	ldrb	r3, [r7, #3]
 8002a6a:	08db      	lsrs	r3, r3, #3
 8002a6c:	b2db      	uxtb	r3, r3
 8002a6e:	461a      	mov	r2, r3
 8002a70:	687b      	ldr	r3, [r7, #4]
 8002a72:	3210      	adds	r2, #16
 8002a74:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002a78:	78fb      	ldrb	r3, [r7, #3]
 8002a7a:	f003 0307 	and.w	r3, r3, #7
 8002a7e:	009b      	lsls	r3, r3, #2
 8002a80:	2107      	movs	r1, #7
 8002a82:	fa01 f303 	lsl.w	r3, r1, r3
 8002a86:	43db      	mvns	r3, r3
 8002a88:	78f9      	ldrb	r1, [r7, #3]
 8002a8a:	08c9      	lsrs	r1, r1, #3
 8002a8c:	b2c9      	uxtb	r1, r1
 8002a8e:	4608      	mov	r0, r1
 8002a90:	ea02 0103 	and.w	r1, r2, r3
 8002a94:	687b      	ldr	r3, [r7, #4]
 8002a96:	f100 0210 	add.w	r2, r0, #16
 8002a9a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
  port->PDR[pin >> 3U] |= (uint32_t)strength << ((uint32_t)PORT_PDR_Size * ((uint32_t)pin & 0x7U));
 8002a9e:	78fb      	ldrb	r3, [r7, #3]
 8002aa0:	08db      	lsrs	r3, r3, #3
 8002aa2:	b2db      	uxtb	r3, r3
 8002aa4:	461a      	mov	r2, r3
 8002aa6:	687b      	ldr	r3, [r7, #4]
 8002aa8:	3210      	adds	r2, #16
 8002aaa:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 8002aae:	78b9      	ldrb	r1, [r7, #2]
 8002ab0:	78fb      	ldrb	r3, [r7, #3]
 8002ab2:	f003 0307 	and.w	r3, r3, #7
 8002ab6:	009b      	lsls	r3, r3, #2
 8002ab8:	fa01 f303 	lsl.w	r3, r1, r3
 8002abc:	78f9      	ldrb	r1, [r7, #3]
 8002abe:	08c9      	lsrs	r1, r1, #3
 8002ac0:	b2c9      	uxtb	r1, r1
 8002ac2:	4608      	mov	r0, r1
 8002ac4:	ea42 0103 	orr.w	r1, r2, r3
 8002ac8:	687b      	ldr	r3, [r7, #4]
 8002aca:	f100 0210 	add.w	r2, r0, #16
 8002ace:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
}
 8002ad2:	bf00      	nop
 8002ad4:	370c      	adds	r7, #12
 8002ad6:	46bd      	mov	sp, r7
 8002ad8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002adc:	4770      	bx	lr

08002ade <delay>:

/*******************************************************************************
 * LOCAL FUNCTIONS
 *******************************************************************************/
static void delay(uint32_t cycles)
{
 8002ade:	b480      	push	{r7}
 8002ae0:	b085      	sub	sp, #20
 8002ae2:	af00      	add	r7, sp, #0
 8002ae4:	6078      	str	r0, [r7, #4]
  volatile uint32_t i;

  for(i = 0UL; i < cycles ;++i)
 8002ae6:	2300      	movs	r3, #0
 8002ae8:	60fb      	str	r3, [r7, #12]
 8002aea:	e003      	b.n	8002af4 <delay+0x16>
  {
    __NOP();
 8002aec:	bf00      	nop
  for(i = 0UL; i < cycles ;++i)
 8002aee:	68fb      	ldr	r3, [r7, #12]
 8002af0:	3301      	adds	r3, #1
 8002af2:	60fb      	str	r3, [r7, #12]
 8002af4:	68fb      	ldr	r3, [r7, #12]
 8002af6:	687a      	ldr	r2, [r7, #4]
 8002af8:	429a      	cmp	r2, r3
 8002afa:	d8f7      	bhi.n	8002aec <delay+0xe>
  }
}
 8002afc:	bf00      	nop
 8002afe:	3714      	adds	r7, #20
 8002b00:	46bd      	mov	sp, r7
 8002b02:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b06:	4770      	bx	lr

08002b08 <SystemInit>:
/*******************************************************************************
 * API IMPLEMENTATION
 *******************************************************************************/

__WEAK void SystemInit(void)
{
 8002b08:	b598      	push	{r3, r4, r7, lr}
 8002b0a:	af00      	add	r7, sp, #0
  memcpy(g_chipid, CHIPID_LOC, 16);
 8002b0c:	4a06      	ldr	r2, [pc, #24]	; (8002b28 <SystemInit+0x20>)
 8002b0e:	f04f 5300 	mov.w	r3, #536870912	; 0x20000000
 8002b12:	4614      	mov	r4, r2
 8002b14:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002b16:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

  SystemCoreSetup();
 8002b1a:	f000 f807 	bl	8002b2c <SystemCoreSetup>
  SystemCoreClockSetup(); 
 8002b1e:	f000 f83d 	bl	8002b9c <SystemCoreClockSetup>
}
 8002b22:	bf00      	nop
 8002b24:	bd98      	pop	{r3, r4, r7, pc}
 8002b26:	bf00      	nop
 8002b28:	2000ffc4 	.word	0x2000ffc4

08002b2c <SystemCoreSetup>:

__WEAK void SystemCoreSetup(void)
{
 8002b2c:	b480      	push	{r7}
 8002b2e:	b083      	sub	sp, #12
 8002b30:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__attribute__((always_inline)) __STATIC_INLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002b32:	b672      	cpsid	i
  uint32_t temp;
	
  /* relocate vector table */
  __disable_irq();
  SCB->VTOR = (uint32_t)(&__Vectors);
 8002b34:	4b16      	ldr	r3, [pc, #88]	; (8002b90 <SystemCoreSetup+0x64>)
 8002b36:	4a17      	ldr	r2, [pc, #92]	; (8002b94 <SystemCoreSetup+0x68>)
 8002b38:	609a      	str	r2, [r3, #8]
  \details Acts as a special kind of Data Memory Barrier.
           It completes when all explicit memory accesses before this instruction complete.
 */
__attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
{
  __ASM volatile ("dsb 0xF":::"memory");
 8002b3a:	f3bf 8f4f 	dsb	sy
  __ASM volatile ("cpsie i" : : : "memory");
 8002b3e:	b662      	cpsie	i
  __DSB();
  __enable_irq();
    
#if ((__FPU_PRESENT == 1) && (__FPU_USED == 1))
  SCB->CPACR |= ((3UL << 10*2) |                 /* set CP10 Full Access */
 8002b40:	4b13      	ldr	r3, [pc, #76]	; (8002b90 <SystemCoreSetup+0x64>)
 8002b42:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8002b46:	4a12      	ldr	r2, [pc, #72]	; (8002b90 <SystemCoreSetup+0x64>)
 8002b48:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8002b4c:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
                 (3UL << 11*2)  );               /* set CP11 Full Access */
#endif

  /* Enable unaligned memory access - SCB_CCR.UNALIGN_TRP = 0 */
  SCB->CCR &= ~(SCB_CCR_UNALIGN_TRP_Msk);
 8002b50:	4b0f      	ldr	r3, [pc, #60]	; (8002b90 <SystemCoreSetup+0x64>)
 8002b52:	695b      	ldr	r3, [r3, #20]
 8002b54:	4a0e      	ldr	r2, [pc, #56]	; (8002b90 <SystemCoreSetup+0x64>)
 8002b56:	f023 0308 	bic.w	r3, r3, #8
 8002b5a:	6153      	str	r3, [r2, #20]

  temp = FLASH0->FCON;
 8002b5c:	4b0e      	ldr	r3, [pc, #56]	; (8002b98 <SystemCoreSetup+0x6c>)
 8002b5e:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002b62:	3314      	adds	r3, #20
 8002b64:	681b      	ldr	r3, [r3, #0]
 8002b66:	607b      	str	r3, [r7, #4]
  temp &= ~FLASH_FCON_WSPFLASH_Msk;
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	f023 030f 	bic.w	r3, r3, #15
 8002b6e:	607b      	str	r3, [r7, #4]
  temp |= PMU_FLASH_WS;
 8002b70:	687b      	ldr	r3, [r7, #4]
 8002b72:	f043 0303 	orr.w	r3, r3, #3
 8002b76:	607b      	str	r3, [r7, #4]
  FLASH0->FCON = temp;
 8002b78:	4b07      	ldr	r3, [pc, #28]	; (8002b98 <SystemCoreSetup+0x6c>)
 8002b7a:	f503 5380 	add.w	r3, r3, #4096	; 0x1000
 8002b7e:	3314      	adds	r3, #20
 8002b80:	687a      	ldr	r2, [r7, #4]
 8002b82:	601a      	str	r2, [r3, #0]
}
 8002b84:	bf00      	nop
 8002b86:	370c      	adds	r7, #12
 8002b88:	46bd      	mov	sp, r7
 8002b8a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002b8e:	4770      	bx	lr
 8002b90:	e000ed00 	.word	0xe000ed00
 8002b94:	08000000 	.word	0x08000000
 8002b98:	58001000 	.word	0x58001000

08002b9c <SystemCoreClockSetup>:

__WEAK void SystemCoreClockSetup(void)
{
 8002b9c:	b580      	push	{r7, lr}
 8002b9e:	af00      	add	r7, sp, #0
#else
  /* Automatic calibration uses the fSTDBY */

  /* Enable HIB domain */
  /* Power up HIB domain if and only if it is currently powered down */
  if((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 8002ba0:	4b75      	ldr	r3, [pc, #468]	; (8002d78 <SystemCoreClockSetup+0x1dc>)
 8002ba2:	681b      	ldr	r3, [r3, #0]
 8002ba4:	f003 0301 	and.w	r3, r3, #1
 8002ba8:	2b00      	cmp	r3, #0
 8002baa:	d10c      	bne.n	8002bc6 <SystemCoreClockSetup+0x2a>
  {
    SCU_POWER->PWRSET |= SCU_POWER_PWRSET_HIB_Msk;
 8002bac:	4b72      	ldr	r3, [pc, #456]	; (8002d78 <SystemCoreClockSetup+0x1dc>)
 8002bae:	685b      	ldr	r3, [r3, #4]
 8002bb0:	4a71      	ldr	r2, [pc, #452]	; (8002d78 <SystemCoreClockSetup+0x1dc>)
 8002bb2:	f043 0301 	orr.w	r3, r3, #1
 8002bb6:	6053      	str	r3, [r2, #4]

    while((SCU_POWER->PWRSTAT & SCU_POWER_PWRSTAT_HIBEN_Msk) == 0)
 8002bb8:	bf00      	nop
 8002bba:	4b6f      	ldr	r3, [pc, #444]	; (8002d78 <SystemCoreClockSetup+0x1dc>)
 8002bbc:	681b      	ldr	r3, [r3, #0]
 8002bbe:	f003 0301 	and.w	r3, r3, #1
 8002bc2:	2b00      	cmp	r3, #0
 8002bc4:	d0f9      	beq.n	8002bba <SystemCoreClockSetup+0x1e>
      /* wait until HIB domain is enabled */
    }
  }

  /* Remove the reset only if HIB domain were in a state of reset */
  if((SCU_RESET->RSTSTAT) & SCU_RESET_RSTSTAT_HIBRS_Msk)
 8002bc6:	4b6d      	ldr	r3, [pc, #436]	; (8002d7c <SystemCoreClockSetup+0x1e0>)
 8002bc8:	681b      	ldr	r3, [r3, #0]
 8002bca:	f403 7300 	and.w	r3, r3, #512	; 0x200
 8002bce:	2b00      	cmp	r3, #0
 8002bd0:	d009      	beq.n	8002be6 <SystemCoreClockSetup+0x4a>
  {
    SCU_RESET->RSTCLR |= SCU_RESET_RSTCLR_HIBRS_Msk;
 8002bd2:	4b6a      	ldr	r3, [pc, #424]	; (8002d7c <SystemCoreClockSetup+0x1e0>)
 8002bd4:	689b      	ldr	r3, [r3, #8]
 8002bd6:	4a69      	ldr	r2, [pc, #420]	; (8002d7c <SystemCoreClockSetup+0x1e0>)
 8002bd8:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8002bdc:	6093      	str	r3, [r2, #8]
    delay(DELAY_CNT_150US_50MHZ);
 8002bde:	f641 504c 	movw	r0, #7500	; 0x1d4c
 8002be2:	f7ff ff7c 	bl	8002ade <delay>
  SCU_HIBERNATE->HDCR |= SCU_HIBERNATE_HDCR_RCS_Msk | SCU_HIBERNATE_HDCR_STDBYSEL_Msk;

#endif /* STDBY_CLOCK_SRC == STDBY_CLOCK_SRC_OSCULP */

  /* Enable automatic calibration of internal fast oscillator */
  SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_AOTREN_Msk;
 8002be6:	4b66      	ldr	r3, [pc, #408]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002be8:	685b      	ldr	r3, [r3, #4]
 8002bea:	4a65      	ldr	r2, [pc, #404]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002bec:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 8002bf0:	6053      	str	r3, [r2, #4]
#endif /* FOFI_CALIBRATION_MODE == FOFI_CALIBRATION_MODE_AUTOMATIC */

  delay(DELAY_CNT_50US_50MHZ);
 8002bf2:	f640 10c4 	movw	r0, #2500	; 0x9c4
 8002bf6:	f7ff ff72 	bl	8002ade <delay>

#if ENABLE_PLL

  /* enable PLL */
  SCU_PLL->PLLCON0 &= ~(SCU_PLL_PLLCON0_VCOPWD_Msk | SCU_PLL_PLLCON0_PLLPWD_Msk);
 8002bfa:	4b61      	ldr	r3, [pc, #388]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002bfc:	685b      	ldr	r3, [r3, #4]
 8002bfe:	4a60      	ldr	r2, [pc, #384]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c00:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8002c04:	f023 0302 	bic.w	r3, r3, #2
 8002c08:	6053      	str	r3, [r2, #4]

#if PLL_CLOCK_SRC != PLL_CLOCK_SRC_OFI
  /* enable OSC_HP */
  if ((SCU_OSC->OSCHPCTRL & SCU_OSC_OSCHPCTRL_MODE_Msk) != 0U)
 8002c0a:	4b5e      	ldr	r3, [pc, #376]	; (8002d84 <SystemCoreClockSetup+0x1e8>)
 8002c0c:	685b      	ldr	r3, [r3, #4]
 8002c0e:	f003 0330 	and.w	r3, r3, #48	; 0x30
 8002c12:	2b00      	cmp	r3, #0
 8002c14:	d029      	beq.n	8002c6a <SystemCoreClockSetup+0xce>
  {
    SCU_OSC->OSCHPCTRL &= ~(SCU_OSC_OSCHPCTRL_MODE_Msk | SCU_OSC_OSCHPCTRL_OSCVAL_Msk);
 8002c16:	4b5b      	ldr	r3, [pc, #364]	; (8002d84 <SystemCoreClockSetup+0x1e8>)
 8002c18:	685b      	ldr	r3, [r3, #4]
 8002c1a:	4a5a      	ldr	r2, [pc, #360]	; (8002d84 <SystemCoreClockSetup+0x1e8>)
 8002c1c:	f423 2370 	bic.w	r3, r3, #983040	; 0xf0000
 8002c20:	f023 0330 	bic.w	r3, r3, #48	; 0x30
 8002c24:	6053      	str	r3, [r2, #4]
    SCU_OSC->OSCHPCTRL |= ((OSCHP_GetFrequency() / FOSCREF) - 1UL) << SCU_OSC_OSCHPCTRL_OSCVAL_Pos;
 8002c26:	f000 f927 	bl	8002e78 <OSCHP_GetFrequency>
 8002c2a:	4602      	mov	r2, r0
 8002c2c:	4b56      	ldr	r3, [pc, #344]	; (8002d88 <SystemCoreClockSetup+0x1ec>)
 8002c2e:	fba3 2302 	umull	r2, r3, r3, r2
 8002c32:	0d1b      	lsrs	r3, r3, #20
 8002c34:	3b01      	subs	r3, #1
 8002c36:	041a      	lsls	r2, r3, #16
 8002c38:	4b52      	ldr	r3, [pc, #328]	; (8002d84 <SystemCoreClockSetup+0x1e8>)
 8002c3a:	685b      	ldr	r3, [r3, #4]
 8002c3c:	4951      	ldr	r1, [pc, #324]	; (8002d84 <SystemCoreClockSetup+0x1e8>)
 8002c3e:	4313      	orrs	r3, r2
 8002c40:	604b      	str	r3, [r1, #4]

    /* select OSC_HP clock as PLL input */
    SCU_PLL->PLLCON2 &= ~SCU_PLL_PLLCON2_PINSEL_Msk;
 8002c42:	4b4f      	ldr	r3, [pc, #316]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c44:	68db      	ldr	r3, [r3, #12]
 8002c46:	4a4e      	ldr	r2, [pc, #312]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c48:	f023 0301 	bic.w	r3, r3, #1
 8002c4c:	60d3      	str	r3, [r2, #12]

    /* restart OSC Watchdog */
    SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCRES_Msk;
 8002c4e:	4b4c      	ldr	r3, [pc, #304]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c50:	685b      	ldr	r3, [r3, #4]
 8002c52:	4a4b      	ldr	r2, [pc, #300]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c54:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 8002c58:	6053      	str	r3, [r2, #4]

    while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_OSC_USABLE) != SCU_PLL_PLLSTAT_OSC_USABLE)
 8002c5a:	bf00      	nop
 8002c5c:	4b48      	ldr	r3, [pc, #288]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c5e:	681b      	ldr	r3, [r3, #0]
 8002c60:	f403 7360 	and.w	r3, r3, #896	; 0x380
 8002c64:	f5b3 7f60 	cmp.w	r3, #896	; 0x380
 8002c68:	d1f8      	bne.n	8002c5c <SystemCoreClockSetup+0xc0>
  /* select backup clock as PLL input */
  SCU_PLL->PLLCON2 |= SCU_PLL_PLLCON2_PINSEL_Msk;
#endif

  /* Go to bypass the Main PLL */
  SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_VCOBYP_Msk;
 8002c6a:	4b45      	ldr	r3, [pc, #276]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c6c:	685b      	ldr	r3, [r3, #4]
 8002c6e:	4a44      	ldr	r2, [pc, #272]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c70:	f043 0301 	orr.w	r3, r3, #1
 8002c74:	6053      	str	r3, [r2, #4]

  /* disconnect Oscillator from PLL */
  SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_FINDIS_Msk;
 8002c76:	4b42      	ldr	r3, [pc, #264]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c78:	685b      	ldr	r3, [r3, #4]
 8002c7a:	4a41      	ldr	r2, [pc, #260]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c7c:	f043 0310 	orr.w	r3, r3, #16
 8002c80:	6053      	str	r3, [r2, #4]

  /* Setup divider settings for main PLL */
  SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 8002c82:	4b3f      	ldr	r3, [pc, #252]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c84:	4a41      	ldr	r2, [pc, #260]	; (8002d8c <SystemCoreClockSetup+0x1f0>)
 8002c86:	609a      	str	r2, [r3, #8]
                      (PLL_K2DIV_0 << SCU_PLL_PLLCON1_K2DIV_Pos) |
                      (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));

  /* Set OSCDISCDIS */
  SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 8002c88:	4b3d      	ldr	r3, [pc, #244]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c8a:	685b      	ldr	r3, [r3, #4]
 8002c8c:	4a3c      	ldr	r2, [pc, #240]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c8e:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 8002c92:	6053      	str	r3, [r2, #4]

  /* connect Oscillator to PLL */
  SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_FINDIS_Msk;
 8002c94:	4b3a      	ldr	r3, [pc, #232]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c96:	685b      	ldr	r3, [r3, #4]
 8002c98:	4a39      	ldr	r2, [pc, #228]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002c9a:	f023 0310 	bic.w	r3, r3, #16
 8002c9e:	6053      	str	r3, [r2, #4]

  /* restart PLL Lock detection */
  SCU_PLL->PLLCON0 |= SCU_PLL_PLLCON0_RESLD_Msk;
 8002ca0:	4b37      	ldr	r3, [pc, #220]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002ca2:	685b      	ldr	r3, [r3, #4]
 8002ca4:	4a36      	ldr	r2, [pc, #216]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002ca6:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8002caa:	6053      	str	r3, [r2, #4]

  while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 8002cac:	bf00      	nop
 8002cae:	4b34      	ldr	r3, [pc, #208]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002cb0:	681b      	ldr	r3, [r3, #0]
 8002cb2:	f003 0304 	and.w	r3, r3, #4
 8002cb6:	2b00      	cmp	r3, #0
 8002cb8:	d0f9      	beq.n	8002cae <SystemCoreClockSetup+0x112>
  {
    /* wait for PLL Lock */
  }

  /* Disable bypass- put PLL clock back */
  SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_VCOBYP_Msk;
 8002cba:	4b31      	ldr	r3, [pc, #196]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002cbc:	685b      	ldr	r3, [r3, #4]
 8002cbe:	4a30      	ldr	r2, [pc, #192]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002cc0:	f023 0301 	bic.w	r3, r3, #1
 8002cc4:	6053      	str	r3, [r2, #4]
  while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOBYST_Msk) != 0U)
 8002cc6:	bf00      	nop
 8002cc8:	4b2d      	ldr	r3, [pc, #180]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002cca:	681b      	ldr	r3, [r3, #0]
 8002ccc:	f003 0301 	and.w	r3, r3, #1
 8002cd0:	2b00      	cmp	r3, #0
 8002cd2:	d1f9      	bne.n	8002cc8 <SystemCoreClockSetup+0x12c>
  }
#endif /* ENABLE_PLL */

#if (SYS_CLOCK_SRC == SYS_CLOCK_SRC_PLL)
  /* Switch system clock to PLL */
  SCU_CLK->SYSCLKCR |= SCU_CLK_SYSCLKCR_SYSSEL_Msk;
 8002cd4:	4b2e      	ldr	r3, [pc, #184]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002cd6:	68db      	ldr	r3, [r3, #12]
 8002cd8:	4a2d      	ldr	r2, [pc, #180]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002cda:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8002cde:	60d3      	str	r3, [r2, #12]
  /* Switch system clock to backup clock */
  SCU_CLK->SYSCLKCR &= ~SCU_CLK_SYSCLKCR_SYSSEL_Msk;
#endif

  /* Before scaling to final frequency we need to setup the clock dividers */
  SCU_CLK->PBCLKCR = PBCLKDIV;
 8002ce0:	4b2b      	ldr	r3, [pc, #172]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002ce2:	2200      	movs	r2, #0
 8002ce4:	615a      	str	r2, [r3, #20]
  SCU_CLK->CPUCLKCR = CPUCLKDIV;
 8002ce6:	4b2a      	ldr	r3, [pc, #168]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002ce8:	2200      	movs	r2, #0
 8002cea:	611a      	str	r2, [r3, #16]
  SCU_CLK->CCUCLKCR = CCUCLKDIV;
 8002cec:	4b28      	ldr	r3, [pc, #160]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002cee:	2200      	movs	r2, #0
 8002cf0:	621a      	str	r2, [r3, #32]
  SCU_CLK->WDTCLKCR = WDTCLKDIV;
 8002cf2:	4b27      	ldr	r3, [pc, #156]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002cf4:	2200      	movs	r2, #0
 8002cf6:	625a      	str	r2, [r3, #36]	; 0x24
  SCU_CLK->EBUCLKCR = EBUCLKDIV;
 8002cf8:	4b25      	ldr	r3, [pc, #148]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002cfa:	2200      	movs	r2, #0
 8002cfc:	61da      	str	r2, [r3, #28]
  SCU_CLK->USBCLKCR = USBCLKDIV;
 8002cfe:	4b24      	ldr	r3, [pc, #144]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002d00:	2203      	movs	r2, #3
 8002d02:	619a      	str	r2, [r3, #24]

#if ENABLE_PLL
  /* PLL frequency stepping...*/
  /* Reset OSCDISCDIS */
  SCU_PLL->PLLCON0 &= ~SCU_PLL_PLLCON0_OSCDISCDIS_Msk;
 8002d04:	4b1e      	ldr	r3, [pc, #120]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d06:	685b      	ldr	r3, [r3, #4]
 8002d08:	4a1d      	ldr	r2, [pc, #116]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d0a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 8002d0e:	6053      	str	r3, [r2, #4]

  SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 8002d10:	4b1b      	ldr	r3, [pc, #108]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d12:	4a20      	ldr	r2, [pc, #128]	; (8002d94 <SystemCoreClockSetup+0x1f8>)
 8002d14:	609a      	str	r2, [r3, #8]
	                    (PLL_K2DIV_1 << SCU_PLL_PLLCON1_K2DIV_Pos) |
	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));


  delay(DELAY_CNT_50US_60MHZ);
 8002d16:	f640 30b8 	movw	r0, #3000	; 0xbb8
 8002d1a:	f7ff fee0 	bl	8002ade <delay>
  while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 8002d1e:	bf00      	nop
 8002d20:	4b17      	ldr	r3, [pc, #92]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d22:	681b      	ldr	r3, [r3, #0]
 8002d24:	f003 0304 	and.w	r3, r3, #4
 8002d28:	2b00      	cmp	r3, #0
 8002d2a:	d0f9      	beq.n	8002d20 <SystemCoreClockSetup+0x184>
  {
    /* wait for PLL Lock */
  }

  SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 8002d2c:	4b14      	ldr	r3, [pc, #80]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d2e:	4a1a      	ldr	r2, [pc, #104]	; (8002d98 <SystemCoreClockSetup+0x1fc>)
 8002d30:	609a      	str	r2, [r3, #8]
	                    (PLL_K2DIV_2 << SCU_PLL_PLLCON1_K2DIV_Pos) |
	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));


  delay(DELAY_CNT_50US_90MHZ);
 8002d32:	f241 1094 	movw	r0, #4500	; 0x1194
 8002d36:	f7ff fed2 	bl	8002ade <delay>
  while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 8002d3a:	bf00      	nop
 8002d3c:	4b10      	ldr	r3, [pc, #64]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d3e:	681b      	ldr	r3, [r3, #0]
 8002d40:	f003 0304 	and.w	r3, r3, #4
 8002d44:	2b00      	cmp	r3, #0
 8002d46:	d0f9      	beq.n	8002d3c <SystemCoreClockSetup+0x1a0>
  {
    /* wait for PLL Lock */
  }

  SCU_PLL->PLLCON1 = ((PLL_NDIV << SCU_PLL_PLLCON1_NDIV_Pos) |
 8002d48:	4b0d      	ldr	r3, [pc, #52]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d4a:	4a14      	ldr	r2, [pc, #80]	; (8002d9c <SystemCoreClockSetup+0x200>)
 8002d4c:	609a      	str	r2, [r3, #8]
	                    (PLL_K2DIV << SCU_PLL_PLLCON1_K2DIV_Pos) |
	                    (PLL_PDIV << SCU_PLL_PLLCON1_PDIV_Pos));


  delay(DELAY_CNT_50US_120MHZ);
 8002d4e:	f241 7070 	movw	r0, #6000	; 0x1770
 8002d52:	f7ff fec4 	bl	8002ade <delay>
  while ((SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk) == 0U)
 8002d56:	bf00      	nop
 8002d58:	4b09      	ldr	r3, [pc, #36]	; (8002d80 <SystemCoreClockSetup+0x1e4>)
 8002d5a:	681b      	ldr	r3, [r3, #0]
 8002d5c:	f003 0304 	and.w	r3, r3, #4
 8002d60:	2b00      	cmp	r3, #0
 8002d62:	d0f9      	beq.n	8002d58 <SystemCoreClockSetup+0x1bc>
  {
    /* wait for PLL Lock */
  }

  SCU_TRAP->TRAPCLR = SCU_TRAP_TRAPCLR_SOSCWDGT_Msk | SCU_TRAP_TRAPCLR_SVCOLCKT_Msk;
 8002d64:	4b0e      	ldr	r3, [pc, #56]	; (8002da0 <SystemCoreClockSetup+0x204>)
 8002d66:	2205      	movs	r2, #5
 8002d68:	60da      	str	r2, [r3, #12]
    /* wait for PLL Lock */
  }
#endif /* (USBCLKDIV & SCU_CLK_USBCLKCR_USBSEL_Msk) */

  /* Enable selected clocks */
  SCU_CLK->CLKSET = ENABLE_SCUCLK;
 8002d6a:	4b09      	ldr	r3, [pc, #36]	; (8002d90 <SystemCoreClockSetup+0x1f4>)
 8002d6c:	2200      	movs	r2, #0
 8002d6e:	605a      	str	r2, [r3, #4]
  PORT0->IOCR8 = (PORT0->IOCR8 & ~PORT0_IOCR8_PC8_Msk) | (0x11U << PORT0_IOCR8_PC8_Pos);
#endif

#endif  /* ENABLE_EXTCLK == 1  */

  SystemCoreClockUpdate();
 8002d70:	f000 f818 	bl	8002da4 <SystemCoreClockUpdate>
}
 8002d74:	bf00      	nop
 8002d76:	bd80      	pop	{r7, pc}
 8002d78:	50004200 	.word	0x50004200
 8002d7c:	50004400 	.word	0x50004400
 8002d80:	50004710 	.word	0x50004710
 8002d84:	50004700 	.word	0x50004700
 8002d88:	6b5fca6b 	.word	0x6b5fca6b
 8002d8c:	01134f00 	.word	0x01134f00
 8002d90:	50004600 	.word	0x50004600
 8002d94:	01074f00 	.word	0x01074f00
 8002d98:	01044f00 	.word	0x01044f00
 8002d9c:	01034f00 	.word	0x01034f00
 8002da0:	50004160 	.word	0x50004160

08002da4 <SystemCoreClockUpdate>:

__WEAK void SystemCoreClockUpdate(void)
{
 8002da4:	b580      	push	{r7, lr}
 8002da6:	b084      	sub	sp, #16
 8002da8:	af00      	add	r7, sp, #0
  uint32_t pdiv;
  uint32_t ndiv;
  uint32_t kdiv;
  uint32_t temp;

  if (SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSSEL_Msk)
 8002daa:	4b2f      	ldr	r3, [pc, #188]	; (8002e68 <SystemCoreClockUpdate+0xc4>)
 8002dac:	68db      	ldr	r3, [r3, #12]
 8002dae:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8002db2:	2b00      	cmp	r3, #0
 8002db4:	d03e      	beq.n	8002e34 <SystemCoreClockUpdate+0x90>
  {
    /* fPLL is clock source for fSYS */
    if(SCU_PLL->PLLCON2 & SCU_PLL_PLLCON2_PINSEL_Msk)
 8002db6:	4b2d      	ldr	r3, [pc, #180]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002db8:	68db      	ldr	r3, [r3, #12]
 8002dba:	f003 0301 	and.w	r3, r3, #1
 8002dbe:	2b00      	cmp	r3, #0
 8002dc0:	d002      	beq.n	8002dc8 <SystemCoreClockUpdate+0x24>
    {
      /* PLL input clock is the backup clock (fOFI) */
      temp = OFI_FREQUENCY;
 8002dc2:	4b2b      	ldr	r3, [pc, #172]	; (8002e70 <SystemCoreClockUpdate+0xcc>)
 8002dc4:	60fb      	str	r3, [r7, #12]
 8002dc6:	e002      	b.n	8002dce <SystemCoreClockUpdate+0x2a>
    }
    else
    {
      /* PLL input clock is the high performance osicllator (fOSCHP) */
      temp = OSCHP_GetFrequency();
 8002dc8:	f000 f856 	bl	8002e78 <OSCHP_GetFrequency>
 8002dcc:	60f8      	str	r0, [r7, #12]
    }

    /* check if PLL is locked */
    if (SCU_PLL->PLLSTAT & SCU_PLL_PLLSTAT_VCOLOCK_Msk)
 8002dce:	4b27      	ldr	r3, [pc, #156]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002dd0:	681b      	ldr	r3, [r3, #0]
 8002dd2:	f003 0304 	and.w	r3, r3, #4
 8002dd6:	2b00      	cmp	r3, #0
 8002dd8:	d020      	beq.n	8002e1c <SystemCoreClockUpdate+0x78>
    {
      /* PLL normal mode */
      /* read back divider settings */
      pdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_PDIV_Msk) >> SCU_PLL_PLLCON1_PDIV_Pos) + 1;
 8002dda:	4b24      	ldr	r3, [pc, #144]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002ddc:	689b      	ldr	r3, [r3, #8]
 8002dde:	0e1b      	lsrs	r3, r3, #24
 8002de0:	f003 030f 	and.w	r3, r3, #15
 8002de4:	3301      	adds	r3, #1
 8002de6:	607b      	str	r3, [r7, #4]
      ndiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_NDIV_Msk) >> SCU_PLL_PLLCON1_NDIV_Pos) + 1;
 8002de8:	4b20      	ldr	r3, [pc, #128]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002dea:	689b      	ldr	r3, [r3, #8]
 8002dec:	0a1b      	lsrs	r3, r3, #8
 8002dee:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002df2:	3301      	adds	r3, #1
 8002df4:	603b      	str	r3, [r7, #0]
      kdiv = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K2DIV_Msk) >> SCU_PLL_PLLCON1_K2DIV_Pos) + 1;
 8002df6:	4b1d      	ldr	r3, [pc, #116]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002df8:	689b      	ldr	r3, [r3, #8]
 8002dfa:	0c1b      	lsrs	r3, r3, #16
 8002dfc:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002e00:	3301      	adds	r3, #1
 8002e02:	60bb      	str	r3, [r7, #8]

      temp = (temp / (pdiv * kdiv)) * ndiv;
 8002e04:	687b      	ldr	r3, [r7, #4]
 8002e06:	68ba      	ldr	r2, [r7, #8]
 8002e08:	fb02 f303 	mul.w	r3, r2, r3
 8002e0c:	68fa      	ldr	r2, [r7, #12]
 8002e0e:	fbb2 f2f3 	udiv	r2, r2, r3
 8002e12:	683b      	ldr	r3, [r7, #0]
 8002e14:	fb02 f303 	mul.w	r3, r2, r3
 8002e18:	60fb      	str	r3, [r7, #12]
 8002e1a:	e00d      	b.n	8002e38 <SystemCoreClockUpdate+0x94>
    }
    else
    {
      /* PLL prescalar mode */
      /* read back divider settings */
      kdiv  = ((SCU_PLL->PLLCON1 & SCU_PLL_PLLCON1_K1DIV_Msk) >> SCU_PLL_PLLCON1_K1DIV_Pos) + 1;
 8002e1c:	4b13      	ldr	r3, [pc, #76]	; (8002e6c <SystemCoreClockUpdate+0xc8>)
 8002e1e:	689b      	ldr	r3, [r3, #8]
 8002e20:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8002e24:	3301      	adds	r3, #1
 8002e26:	60bb      	str	r3, [r7, #8]
      
      temp = (temp / kdiv);
 8002e28:	68fa      	ldr	r2, [r7, #12]
 8002e2a:	68bb      	ldr	r3, [r7, #8]
 8002e2c:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e30:	60fb      	str	r3, [r7, #12]
 8002e32:	e001      	b.n	8002e38 <SystemCoreClockUpdate+0x94>
    }
  }
  else
  {
    /* fOFI is clock source for fSYS */    
    temp = OFI_FREQUENCY;
 8002e34:	4b0e      	ldr	r3, [pc, #56]	; (8002e70 <SystemCoreClockUpdate+0xcc>)
 8002e36:	60fb      	str	r3, [r7, #12]
  }

  temp = temp / ((SCU_CLK->SYSCLKCR & SCU_CLK_SYSCLKCR_SYSDIV_Msk) + 1);
 8002e38:	4b0b      	ldr	r3, [pc, #44]	; (8002e68 <SystemCoreClockUpdate+0xc4>)
 8002e3a:	68db      	ldr	r3, [r3, #12]
 8002e3c:	b2db      	uxtb	r3, r3
 8002e3e:	3301      	adds	r3, #1
 8002e40:	68fa      	ldr	r2, [r7, #12]
 8002e42:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e46:	60fb      	str	r3, [r7, #12]
  temp = temp / ((SCU_CLK->CPUCLKCR & SCU_CLK_CPUCLKCR_CPUDIV_Msk) + 1);
 8002e48:	4b07      	ldr	r3, [pc, #28]	; (8002e68 <SystemCoreClockUpdate+0xc4>)
 8002e4a:	691b      	ldr	r3, [r3, #16]
 8002e4c:	f003 0301 	and.w	r3, r3, #1
 8002e50:	3301      	adds	r3, #1
 8002e52:	68fa      	ldr	r2, [r7, #12]
 8002e54:	fbb2 f3f3 	udiv	r3, r2, r3
 8002e58:	60fb      	str	r3, [r7, #12]

  SystemCoreClock = temp;
 8002e5a:	4a06      	ldr	r2, [pc, #24]	; (8002e74 <SystemCoreClockUpdate+0xd0>)
 8002e5c:	68fb      	ldr	r3, [r7, #12]
 8002e5e:	6013      	str	r3, [r2, #0]
}
 8002e60:	bf00      	nop
 8002e62:	3710      	adds	r7, #16
 8002e64:	46bd      	mov	sp, r7
 8002e66:	bd80      	pop	{r7, pc}
 8002e68:	50004600 	.word	0x50004600
 8002e6c:	50004710 	.word	0x50004710
 8002e70:	016e3600 	.word	0x016e3600
 8002e74:	2000ffc0 	.word	0x2000ffc0

08002e78 <OSCHP_GetFrequency>:

__WEAK uint32_t OSCHP_GetFrequency(void)
{
 8002e78:	b480      	push	{r7}
 8002e7a:	af00      	add	r7, sp, #0
  return OSCHP_FREQUENCY;
 8002e7c:	4b02      	ldr	r3, [pc, #8]	; (8002e88 <OSCHP_GetFrequency+0x10>)
}
 8002e7e:	4618      	mov	r0, r3
 8002e80:	46bd      	mov	sp, r7
 8002e82:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002e86:	4770      	bx	lr
 8002e88:	00b71b00 	.word	0x00b71b00

08002e8c <_sbrk>:

// defined in linker script
extern caddr_t Heap_Bank1_Start;
extern caddr_t Heap_Bank1_End;
caddr_t _sbrk(int nbytes)
{
 8002e8c:	b580      	push	{r7, lr}
 8002e8e:	b084      	sub	sp, #16
 8002e90:	af00      	add	r7, sp, #0
 8002e92:	6078      	str	r0, [r7, #4]
  static caddr_t heap_ptr = NULL;
  caddr_t base;

  if (heap_ptr == NULL) {
 8002e94:	4b14      	ldr	r3, [pc, #80]	; (8002ee8 <_sbrk+0x5c>)
 8002e96:	681b      	ldr	r3, [r3, #0]
 8002e98:	2b00      	cmp	r3, #0
 8002e9a:	d102      	bne.n	8002ea2 <_sbrk+0x16>
    heap_ptr = (caddr_t)&Heap_Bank1_Start;
 8002e9c:	4b12      	ldr	r3, [pc, #72]	; (8002ee8 <_sbrk+0x5c>)
 8002e9e:	4a13      	ldr	r2, [pc, #76]	; (8002eec <_sbrk+0x60>)
 8002ea0:	601a      	str	r2, [r3, #0]
  }

  base = heap_ptr;
 8002ea2:	4b11      	ldr	r3, [pc, #68]	; (8002ee8 <_sbrk+0x5c>)
 8002ea4:	681b      	ldr	r3, [r3, #0]
 8002ea6:	60fb      	str	r3, [r7, #12]

  /* heap word alignment */
  nbytes = (nbytes + 3) & ~0x3U;
 8002ea8:	687b      	ldr	r3, [r7, #4]
 8002eaa:	3303      	adds	r3, #3
 8002eac:	f023 0303 	bic.w	r3, r3, #3
 8002eb0:	607b      	str	r3, [r7, #4]
  if ((caddr_t)&Heap_Bank1_End > (heap_ptr + nbytes))
 8002eb2:	4b0d      	ldr	r3, [pc, #52]	; (8002ee8 <_sbrk+0x5c>)
 8002eb4:	681a      	ldr	r2, [r3, #0]
 8002eb6:	687b      	ldr	r3, [r7, #4]
 8002eb8:	4413      	add	r3, r2
 8002eba:	4a0d      	ldr	r2, [pc, #52]	; (8002ef0 <_sbrk+0x64>)
 8002ebc:	4293      	cmp	r3, r2
 8002ebe:	d207      	bcs.n	8002ed0 <_sbrk+0x44>
  {
    heap_ptr += nbytes;
 8002ec0:	4b09      	ldr	r3, [pc, #36]	; (8002ee8 <_sbrk+0x5c>)
 8002ec2:	681a      	ldr	r2, [r3, #0]
 8002ec4:	687b      	ldr	r3, [r7, #4]
 8002ec6:	4413      	add	r3, r2
 8002ec8:	4a07      	ldr	r2, [pc, #28]	; (8002ee8 <_sbrk+0x5c>)
 8002eca:	6013      	str	r3, [r2, #0]
    return (base);
 8002ecc:	68fb      	ldr	r3, [r7, #12]
 8002ece:	e006      	b.n	8002ede <_sbrk+0x52>
  }
  else
  {
    /* Heap overflow */
    errno = ENOMEM;
 8002ed0:	f000 f818 	bl	8002f04 <__errno>
 8002ed4:	4602      	mov	r2, r0
 8002ed6:	230c      	movs	r3, #12
 8002ed8:	6013      	str	r3, [r2, #0]
    return ((caddr_t)-1);
 8002eda:	f04f 33ff 	mov.w	r3, #4294967295	; 0xffffffff
  }
}
 8002ede:	4618      	mov	r0, r3
 8002ee0:	3710      	adds	r7, #16
 8002ee2:	46bd      	mov	sp, r7
 8002ee4:	bd80      	pop	{r7, pc}
 8002ee6:	bf00      	nop
 8002ee8:	200005c0 	.word	0x200005c0
 8002eec:	200009d0 	.word	0x200009d0
 8002ef0:	2000ffc0 	.word	0x2000ffc0

08002ef4 <_init>:

/* Init */
void _init(void)
{}
 8002ef4:	b480      	push	{r7}
 8002ef6:	af00      	add	r7, sp, #0
 8002ef8:	bf00      	nop
 8002efa:	46bd      	mov	sp, r7
 8002efc:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002f00:	4770      	bx	lr
	...

08002f04 <__errno>:
 8002f04:	4b01      	ldr	r3, [pc, #4]	; (8002f0c <__errno+0x8>)
 8002f06:	6818      	ldr	r0, [r3, #0]
 8002f08:	4770      	bx	lr
 8002f0a:	bf00      	nop
 8002f0c:	2000000c 	.word	0x2000000c

08002f10 <__libc_init_array>:
 8002f10:	b570      	push	{r4, r5, r6, lr}
 8002f12:	4e0d      	ldr	r6, [pc, #52]	; (8002f48 <__libc_init_array+0x38>)
 8002f14:	4d0d      	ldr	r5, [pc, #52]	; (8002f4c <__libc_init_array+0x3c>)
 8002f16:	1b76      	subs	r6, r6, r5
 8002f18:	10b6      	asrs	r6, r6, #2
 8002f1a:	d006      	beq.n	8002f2a <__libc_init_array+0x1a>
 8002f1c:	2400      	movs	r4, #0
 8002f1e:	3401      	adds	r4, #1
 8002f20:	f855 3b04 	ldr.w	r3, [r5], #4
 8002f24:	4798      	blx	r3
 8002f26:	42a6      	cmp	r6, r4
 8002f28:	d1f9      	bne.n	8002f1e <__libc_init_array+0xe>
 8002f2a:	4e09      	ldr	r6, [pc, #36]	; (8002f50 <__libc_init_array+0x40>)
 8002f2c:	4d09      	ldr	r5, [pc, #36]	; (8002f54 <__libc_init_array+0x44>)
 8002f2e:	1b76      	subs	r6, r6, r5
 8002f30:	f7ff ffe0 	bl	8002ef4 <_init>
 8002f34:	10b6      	asrs	r6, r6, #2
 8002f36:	d006      	beq.n	8002f46 <__libc_init_array+0x36>
 8002f38:	2400      	movs	r4, #0
 8002f3a:	3401      	adds	r4, #1
 8002f3c:	f855 3b04 	ldr.w	r3, [r5], #4
 8002f40:	4798      	blx	r3
 8002f42:	42a6      	cmp	r6, r4
 8002f44:	d1f9      	bne.n	8002f3a <__libc_init_array+0x2a>
 8002f46:	bd70      	pop	{r4, r5, r6, pc}
 8002f48:	200005a4 	.word	0x200005a4
 8002f4c:	200005a4 	.word	0x200005a4
 8002f50:	200005a4 	.word	0x200005a4
 8002f54:	200005a4 	.word	0x200005a4

08002f58 <strcpy>:
 8002f58:	ea80 0201 	eor.w	r2, r0, r1
 8002f5c:	4684      	mov	ip, r0
 8002f5e:	f012 0f03 	tst.w	r2, #3
 8002f62:	d14f      	bne.n	8003004 <strcpy+0xac>
 8002f64:	f011 0f03 	tst.w	r1, #3
 8002f68:	d132      	bne.n	8002fd0 <strcpy+0x78>
 8002f6a:	f84d 4d04 	str.w	r4, [sp, #-4]!
 8002f6e:	f011 0f04 	tst.w	r1, #4
 8002f72:	f851 3b04 	ldr.w	r3, [r1], #4
 8002f76:	d00b      	beq.n	8002f90 <strcpy+0x38>
 8002f78:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8002f7c:	439a      	bics	r2, r3
 8002f7e:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8002f82:	bf04      	itt	eq
 8002f84:	f84c 3b04 	streq.w	r3, [ip], #4
 8002f88:	f851 3b04 	ldreq.w	r3, [r1], #4
 8002f8c:	d116      	bne.n	8002fbc <strcpy+0x64>
 8002f8e:	bf00      	nop
 8002f90:	f851 4b04 	ldr.w	r4, [r1], #4
 8002f94:	f1a3 3201 	sub.w	r2, r3, #16843009	; 0x1010101
 8002f98:	439a      	bics	r2, r3
 8002f9a:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8002f9e:	f1a4 3201 	sub.w	r2, r4, #16843009	; 0x1010101
 8002fa2:	d10b      	bne.n	8002fbc <strcpy+0x64>
 8002fa4:	f84c 3b04 	str.w	r3, [ip], #4
 8002fa8:	43a2      	bics	r2, r4
 8002faa:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8002fae:	bf04      	itt	eq
 8002fb0:	f851 3b04 	ldreq.w	r3, [r1], #4
 8002fb4:	f84c 4b04 	streq.w	r4, [ip], #4
 8002fb8:	d0ea      	beq.n	8002f90 <strcpy+0x38>
 8002fba:	4623      	mov	r3, r4
 8002fbc:	f80c 3b01 	strb.w	r3, [ip], #1
 8002fc0:	f013 0fff 	tst.w	r3, #255	; 0xff
 8002fc4:	ea4f 2333 	mov.w	r3, r3, ror #8
 8002fc8:	d1f8      	bne.n	8002fbc <strcpy+0x64>
 8002fca:	f85d 4b04 	ldr.w	r4, [sp], #4
 8002fce:	4770      	bx	lr
 8002fd0:	f011 0f01 	tst.w	r1, #1
 8002fd4:	d006      	beq.n	8002fe4 <strcpy+0x8c>
 8002fd6:	f811 2b01 	ldrb.w	r2, [r1], #1
 8002fda:	f80c 2b01 	strb.w	r2, [ip], #1
 8002fde:	2a00      	cmp	r2, #0
 8002fe0:	bf08      	it	eq
 8002fe2:	4770      	bxeq	lr
 8002fe4:	f011 0f02 	tst.w	r1, #2
 8002fe8:	d0bf      	beq.n	8002f6a <strcpy+0x12>
 8002fea:	f831 2b02 	ldrh.w	r2, [r1], #2
 8002fee:	f012 0fff 	tst.w	r2, #255	; 0xff
 8002ff2:	bf16      	itet	ne
 8002ff4:	f82c 2b02 	strhne.w	r2, [ip], #2
 8002ff8:	f88c 2000 	strbeq.w	r2, [ip]
 8002ffc:	f412 4f7f 	tstne.w	r2, #65280	; 0xff00
 8003000:	d1b3      	bne.n	8002f6a <strcpy+0x12>
 8003002:	4770      	bx	lr
 8003004:	f811 2b01 	ldrb.w	r2, [r1], #1
 8003008:	f80c 2b01 	strb.w	r2, [ip], #1
 800300c:	2a00      	cmp	r2, #0
 800300e:	d1f9      	bne.n	8003004 <strcpy+0xac>
 8003010:	4770      	bx	lr
 8003012:	bf00      	nop

08003014 <strlwr>:
 8003014:	b570      	push	{r4, r5, r6, lr}
 8003016:	7804      	ldrb	r4, [r0, #0]
 8003018:	4606      	mov	r6, r0
 800301a:	b17c      	cbz	r4, 800303c <strlwr+0x28>
 800301c:	4605      	mov	r5, r0
 800301e:	f000 f841 	bl	80030a4 <__locale_ctype_ptr>
 8003022:	4420      	add	r0, r4
 8003024:	4623      	mov	r3, r4
 8003026:	7842      	ldrb	r2, [r0, #1]
 8003028:	f002 0203 	and.w	r2, r2, #3
 800302c:	2a01      	cmp	r2, #1
 800302e:	bf08      	it	eq
 8003030:	3320      	addeq	r3, #32
 8003032:	702b      	strb	r3, [r5, #0]
 8003034:	f815 4f01 	ldrb.w	r4, [r5, #1]!
 8003038:	2c00      	cmp	r4, #0
 800303a:	d1f0      	bne.n	800301e <strlwr+0xa>
 800303c:	4630      	mov	r0, r6
 800303e:	bd70      	pop	{r4, r5, r6, pc}

08003040 <_setlocale_r>:
 8003040:	b1b2      	cbz	r2, 8003070 <_setlocale_r+0x30>
 8003042:	b510      	push	{r4, lr}
 8003044:	490b      	ldr	r1, [pc, #44]	; (8003074 <_setlocale_r+0x34>)
 8003046:	4610      	mov	r0, r2
 8003048:	4614      	mov	r4, r2
 800304a:	f000 f86d 	bl	8003128 <strcmp>
 800304e:	b908      	cbnz	r0, 8003054 <_setlocale_r+0x14>
 8003050:	4809      	ldr	r0, [pc, #36]	; (8003078 <_setlocale_r+0x38>)
 8003052:	bd10      	pop	{r4, pc}
 8003054:	4908      	ldr	r1, [pc, #32]	; (8003078 <_setlocale_r+0x38>)
 8003056:	4620      	mov	r0, r4
 8003058:	f000 f866 	bl	8003128 <strcmp>
 800305c:	2800      	cmp	r0, #0
 800305e:	d0f7      	beq.n	8003050 <_setlocale_r+0x10>
 8003060:	4620      	mov	r0, r4
 8003062:	4906      	ldr	r1, [pc, #24]	; (800307c <_setlocale_r+0x3c>)
 8003064:	f000 f860 	bl	8003128 <strcmp>
 8003068:	2800      	cmp	r0, #0
 800306a:	d0f1      	beq.n	8003050 <_setlocale_r+0x10>
 800306c:	2000      	movs	r0, #0
 800306e:	bd10      	pop	{r4, pc}
 8003070:	4801      	ldr	r0, [pc, #4]	; (8003078 <_setlocale_r+0x38>)
 8003072:	4770      	bx	lr
 8003074:	0800345c 	.word	0x0800345c
 8003078:	08003458 	.word	0x08003458
 800307c:	08003464 	.word	0x08003464

08003080 <__locale_mb_cur_max>:
 8003080:	4b04      	ldr	r3, [pc, #16]	; (8003094 <__locale_mb_cur_max+0x14>)
 8003082:	4a05      	ldr	r2, [pc, #20]	; (8003098 <__locale_mb_cur_max+0x18>)
 8003084:	681b      	ldr	r3, [r3, #0]
 8003086:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003088:	2b00      	cmp	r3, #0
 800308a:	bf08      	it	eq
 800308c:	4613      	moveq	r3, r2
 800308e:	f893 0128 	ldrb.w	r0, [r3, #296]	; 0x128
 8003092:	4770      	bx	lr
 8003094:	2000000c 	.word	0x2000000c
 8003098:	20000438 	.word	0x20000438

0800309c <__locale_ctype_ptr_l>:
 800309c:	f8d0 00ec 	ldr.w	r0, [r0, #236]	; 0xec
 80030a0:	4770      	bx	lr
 80030a2:	bf00      	nop

080030a4 <__locale_ctype_ptr>:
 80030a4:	4b04      	ldr	r3, [pc, #16]	; (80030b8 <__locale_ctype_ptr+0x14>)
 80030a6:	4a05      	ldr	r2, [pc, #20]	; (80030bc <__locale_ctype_ptr+0x18>)
 80030a8:	681b      	ldr	r3, [r3, #0]
 80030aa:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 80030ac:	2b00      	cmp	r3, #0
 80030ae:	bf08      	it	eq
 80030b0:	4613      	moveq	r3, r2
 80030b2:	f8d3 00ec 	ldr.w	r0, [r3, #236]	; 0xec
 80030b6:	4770      	bx	lr
 80030b8:	2000000c 	.word	0x2000000c
 80030bc:	20000438 	.word	0x20000438

080030c0 <setlocale>:
 80030c0:	4b02      	ldr	r3, [pc, #8]	; (80030cc <setlocale+0xc>)
 80030c2:	460a      	mov	r2, r1
 80030c4:	4601      	mov	r1, r0
 80030c6:	6818      	ldr	r0, [r3, #0]
 80030c8:	f7ff bfba 	b.w	8003040 <_setlocale_r>
 80030cc:	2000000c 	.word	0x2000000c

080030d0 <_mbtowc_r>:
 80030d0:	b430      	push	{r4, r5}
 80030d2:	4c06      	ldr	r4, [pc, #24]	; (80030ec <_mbtowc_r+0x1c>)
 80030d4:	4d06      	ldr	r5, [pc, #24]	; (80030f0 <_mbtowc_r+0x20>)
 80030d6:	6824      	ldr	r4, [r4, #0]
 80030d8:	6b64      	ldr	r4, [r4, #52]	; 0x34
 80030da:	2c00      	cmp	r4, #0
 80030dc:	bf08      	it	eq
 80030de:	462c      	moveq	r4, r5
 80030e0:	f8d4 40e4 	ldr.w	r4, [r4, #228]	; 0xe4
 80030e4:	46a4      	mov	ip, r4
 80030e6:	bc30      	pop	{r4, r5}
 80030e8:	4760      	bx	ip
 80030ea:	bf00      	nop
 80030ec:	2000000c 	.word	0x2000000c
 80030f0:	20000438 	.word	0x20000438

080030f4 <__ascii_mbtowc>:
 80030f4:	b082      	sub	sp, #8
 80030f6:	b149      	cbz	r1, 800310c <__ascii_mbtowc+0x18>
 80030f8:	b15a      	cbz	r2, 8003112 <__ascii_mbtowc+0x1e>
 80030fa:	b16b      	cbz	r3, 8003118 <__ascii_mbtowc+0x24>
 80030fc:	7813      	ldrb	r3, [r2, #0]
 80030fe:	600b      	str	r3, [r1, #0]
 8003100:	7812      	ldrb	r2, [r2, #0]
 8003102:	1c10      	adds	r0, r2, #0
 8003104:	bf18      	it	ne
 8003106:	2001      	movne	r0, #1
 8003108:	b002      	add	sp, #8
 800310a:	4770      	bx	lr
 800310c:	a901      	add	r1, sp, #4
 800310e:	2a00      	cmp	r2, #0
 8003110:	d1f3      	bne.n	80030fa <__ascii_mbtowc+0x6>
 8003112:	4610      	mov	r0, r2
 8003114:	b002      	add	sp, #8
 8003116:	4770      	bx	lr
 8003118:	f06f 0001 	mvn.w	r0, #1
 800311c:	e7f4      	b.n	8003108 <__ascii_mbtowc+0x14>
 800311e:	bf00      	nop
 8003120:	eba2 0003 	sub.w	r0, r2, r3
 8003124:	4770      	bx	lr
 8003126:	bf00      	nop

08003128 <strcmp>:
 8003128:	7802      	ldrb	r2, [r0, #0]
 800312a:	780b      	ldrb	r3, [r1, #0]
 800312c:	2a01      	cmp	r2, #1
 800312e:	bf28      	it	cs
 8003130:	429a      	cmpcs	r2, r3
 8003132:	d1f5      	bne.n	8003120 <__ascii_mbtowc+0x2c>
 8003134:	e96d 4504 	strd	r4, r5, [sp, #-16]!
 8003138:	ea40 0401 	orr.w	r4, r0, r1
 800313c:	e9cd 6702 	strd	r6, r7, [sp, #8]
 8003140:	f06f 0c00 	mvn.w	ip, #0
 8003144:	ea4f 7244 	mov.w	r2, r4, lsl #29
 8003148:	b312      	cbz	r2, 8003190 <strcmp+0x68>
 800314a:	ea80 0401 	eor.w	r4, r0, r1
 800314e:	f014 0f07 	tst.w	r4, #7
 8003152:	d16a      	bne.n	800322a <strcmp+0x102>
 8003154:	f000 0407 	and.w	r4, r0, #7
 8003158:	f020 0007 	bic.w	r0, r0, #7
 800315c:	f004 0503 	and.w	r5, r4, #3
 8003160:	f021 0107 	bic.w	r1, r1, #7
 8003164:	ea4f 05c5 	mov.w	r5, r5, lsl #3
 8003168:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 800316c:	f014 0f04 	tst.w	r4, #4
 8003170:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8003174:	fa0c f405 	lsl.w	r4, ip, r5
 8003178:	ea62 0204 	orn	r2, r2, r4
 800317c:	ea66 0604 	orn	r6, r6, r4
 8003180:	d00a      	beq.n	8003198 <strcmp+0x70>
 8003182:	ea63 0304 	orn	r3, r3, r4
 8003186:	4662      	mov	r2, ip
 8003188:	ea67 0704 	orn	r7, r7, r4
 800318c:	4666      	mov	r6, ip
 800318e:	e003      	b.n	8003198 <strcmp+0x70>
 8003190:	e8f0 2304 	ldrd	r2, r3, [r0], #16
 8003194:	e8f1 6704 	ldrd	r6, r7, [r1], #16
 8003198:	fa82 f54c 	uadd8	r5, r2, ip
 800319c:	ea82 0406 	eor.w	r4, r2, r6
 80031a0:	faa4 f48c 	sel	r4, r4, ip
 80031a4:	bb6c      	cbnz	r4, 8003202 <strcmp+0xda>
 80031a6:	fa83 f54c 	uadd8	r5, r3, ip
 80031aa:	ea83 0507 	eor.w	r5, r3, r7
 80031ae:	faa5 f58c 	sel	r5, r5, ip
 80031b2:	b995      	cbnz	r5, 80031da <strcmp+0xb2>
 80031b4:	e950 2302 	ldrd	r2, r3, [r0, #-8]
 80031b8:	e951 6702 	ldrd	r6, r7, [r1, #-8]
 80031bc:	fa82 f54c 	uadd8	r5, r2, ip
 80031c0:	ea82 0406 	eor.w	r4, r2, r6
 80031c4:	faa4 f48c 	sel	r4, r4, ip
 80031c8:	fa83 f54c 	uadd8	r5, r3, ip
 80031cc:	ea83 0507 	eor.w	r5, r3, r7
 80031d0:	faa5 f58c 	sel	r5, r5, ip
 80031d4:	4325      	orrs	r5, r4
 80031d6:	d0db      	beq.n	8003190 <strcmp+0x68>
 80031d8:	b99c      	cbnz	r4, 8003202 <strcmp+0xda>
 80031da:	ba2d      	rev	r5, r5
 80031dc:	fab5 f485 	clz	r4, r5
 80031e0:	f024 0407 	bic.w	r4, r4, #7
 80031e4:	fa27 f104 	lsr.w	r1, r7, r4
 80031e8:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 80031ec:	fa23 f304 	lsr.w	r3, r3, r4
 80031f0:	f003 00ff 	and.w	r0, r3, #255	; 0xff
 80031f4:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80031f8:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80031fc:	eba0 0001 	sub.w	r0, r0, r1
 8003200:	4770      	bx	lr
 8003202:	ba24      	rev	r4, r4
 8003204:	fab4 f484 	clz	r4, r4
 8003208:	f024 0407 	bic.w	r4, r4, #7
 800320c:	fa26 f104 	lsr.w	r1, r6, r4
 8003210:	e9dd 6702 	ldrd	r6, r7, [sp, #8]
 8003214:	fa22 f204 	lsr.w	r2, r2, r4
 8003218:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 800321c:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 8003220:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8003224:	eba0 0001 	sub.w	r0, r0, r1
 8003228:	4770      	bx	lr
 800322a:	f014 0f03 	tst.w	r4, #3
 800322e:	d13c      	bne.n	80032aa <strcmp+0x182>
 8003230:	f010 0403 	ands.w	r4, r0, #3
 8003234:	d128      	bne.n	8003288 <strcmp+0x160>
 8003236:	f850 2b08 	ldr.w	r2, [r0], #8
 800323a:	f851 3b08 	ldr.w	r3, [r1], #8
 800323e:	fa82 f54c 	uadd8	r5, r2, ip
 8003242:	ea82 0503 	eor.w	r5, r2, r3
 8003246:	faa5 f58c 	sel	r5, r5, ip
 800324a:	b95d      	cbnz	r5, 8003264 <strcmp+0x13c>
 800324c:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8003250:	f851 3c04 	ldr.w	r3, [r1, #-4]
 8003254:	fa82 f54c 	uadd8	r5, r2, ip
 8003258:	ea82 0503 	eor.w	r5, r2, r3
 800325c:	faa5 f58c 	sel	r5, r5, ip
 8003260:	2d00      	cmp	r5, #0
 8003262:	d0e8      	beq.n	8003236 <strcmp+0x10e>
 8003264:	ba2d      	rev	r5, r5
 8003266:	fab5 f485 	clz	r4, r5
 800326a:	f024 0407 	bic.w	r4, r4, #7
 800326e:	fa23 f104 	lsr.w	r1, r3, r4
 8003272:	fa22 f204 	lsr.w	r2, r2, r4
 8003276:	f002 00ff 	and.w	r0, r2, #255	; 0xff
 800327a:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800327e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8003282:	eba0 0001 	sub.w	r0, r0, r1
 8003286:	4770      	bx	lr
 8003288:	ea4f 04c4 	mov.w	r4, r4, lsl #3
 800328c:	f020 0003 	bic.w	r0, r0, #3
 8003290:	f850 2b08 	ldr.w	r2, [r0], #8
 8003294:	f021 0103 	bic.w	r1, r1, #3
 8003298:	f851 3b08 	ldr.w	r3, [r1], #8
 800329c:	fa0c f404 	lsl.w	r4, ip, r4
 80032a0:	ea62 0204 	orn	r2, r2, r4
 80032a4:	ea63 0304 	orn	r3, r3, r4
 80032a8:	e7c9      	b.n	800323e <strcmp+0x116>
 80032aa:	f010 0403 	ands.w	r4, r0, #3
 80032ae:	d01a      	beq.n	80032e6 <strcmp+0x1be>
 80032b0:	eba1 0104 	sub.w	r1, r1, r4
 80032b4:	f020 0003 	bic.w	r0, r0, #3
 80032b8:	07e4      	lsls	r4, r4, #31
 80032ba:	f850 2b04 	ldr.w	r2, [r0], #4
 80032be:	d006      	beq.n	80032ce <strcmp+0x1a6>
 80032c0:	d20f      	bcs.n	80032e2 <strcmp+0x1ba>
 80032c2:	788b      	ldrb	r3, [r1, #2]
 80032c4:	fa5f f4a2 	uxtb.w	r4, r2, ror #16
 80032c8:	1ae4      	subs	r4, r4, r3
 80032ca:	d106      	bne.n	80032da <strcmp+0x1b2>
 80032cc:	b12b      	cbz	r3, 80032da <strcmp+0x1b2>
 80032ce:	78cb      	ldrb	r3, [r1, #3]
 80032d0:	fa5f f4b2 	uxtb.w	r4, r2, ror #24
 80032d4:	1ae4      	subs	r4, r4, r3
 80032d6:	d100      	bne.n	80032da <strcmp+0x1b2>
 80032d8:	b91b      	cbnz	r3, 80032e2 <strcmp+0x1ba>
 80032da:	4620      	mov	r0, r4
 80032dc:	f85d 4b10 	ldr.w	r4, [sp], #16
 80032e0:	4770      	bx	lr
 80032e2:	f101 0104 	add.w	r1, r1, #4
 80032e6:	f850 2b04 	ldr.w	r2, [r0], #4
 80032ea:	07cc      	lsls	r4, r1, #31
 80032ec:	f021 0103 	bic.w	r1, r1, #3
 80032f0:	f851 3b04 	ldr.w	r3, [r1], #4
 80032f4:	d848      	bhi.n	8003388 <strcmp+0x260>
 80032f6:	d224      	bcs.n	8003342 <strcmp+0x21a>
 80032f8:	f022 447f 	bic.w	r4, r2, #4278190080	; 0xff000000
 80032fc:	fa82 f54c 	uadd8	r5, r2, ip
 8003300:	ea94 2513 	eors.w	r5, r4, r3, lsr #8
 8003304:	faa5 f58c 	sel	r5, r5, ip
 8003308:	d10a      	bne.n	8003320 <strcmp+0x1f8>
 800330a:	b965      	cbnz	r5, 8003326 <strcmp+0x1fe>
 800330c:	f851 3b04 	ldr.w	r3, [r1], #4
 8003310:	ea84 0402 	eor.w	r4, r4, r2
 8003314:	ebb4 6f03 	cmp.w	r4, r3, lsl #24
 8003318:	d10e      	bne.n	8003338 <strcmp+0x210>
 800331a:	f850 2b04 	ldr.w	r2, [r0], #4
 800331e:	e7eb      	b.n	80032f8 <strcmp+0x1d0>
 8003320:	ea4f 2313 	mov.w	r3, r3, lsr #8
 8003324:	e055      	b.n	80033d2 <strcmp+0x2aa>
 8003326:	f035 457f 	bics.w	r5, r5, #4278190080	; 0xff000000
 800332a:	d14d      	bne.n	80033c8 <strcmp+0x2a0>
 800332c:	7808      	ldrb	r0, [r1, #0]
 800332e:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 8003332:	f1c0 0000 	rsb	r0, r0, #0
 8003336:	4770      	bx	lr
 8003338:	ea4f 6212 	mov.w	r2, r2, lsr #24
 800333c:	f003 03ff 	and.w	r3, r3, #255	; 0xff
 8003340:	e047      	b.n	80033d2 <strcmp+0x2aa>
 8003342:	ea02 441c 	and.w	r4, r2, ip, lsr #16
 8003346:	fa82 f54c 	uadd8	r5, r2, ip
 800334a:	ea94 4513 	eors.w	r5, r4, r3, lsr #16
 800334e:	faa5 f58c 	sel	r5, r5, ip
 8003352:	d10a      	bne.n	800336a <strcmp+0x242>
 8003354:	b965      	cbnz	r5, 8003370 <strcmp+0x248>
 8003356:	f851 3b04 	ldr.w	r3, [r1], #4
 800335a:	ea84 0402 	eor.w	r4, r4, r2
 800335e:	ebb4 4f03 	cmp.w	r4, r3, lsl #16
 8003362:	d10c      	bne.n	800337e <strcmp+0x256>
 8003364:	f850 2b04 	ldr.w	r2, [r0], #4
 8003368:	e7eb      	b.n	8003342 <strcmp+0x21a>
 800336a:	ea4f 4313 	mov.w	r3, r3, lsr #16
 800336e:	e030      	b.n	80033d2 <strcmp+0x2aa>
 8003370:	ea15 451c 	ands.w	r5, r5, ip, lsr #16
 8003374:	d128      	bne.n	80033c8 <strcmp+0x2a0>
 8003376:	880b      	ldrh	r3, [r1, #0]
 8003378:	ea4f 4212 	mov.w	r2, r2, lsr #16
 800337c:	e029      	b.n	80033d2 <strcmp+0x2aa>
 800337e:	ea4f 4212 	mov.w	r2, r2, lsr #16
 8003382:	ea03 431c 	and.w	r3, r3, ip, lsr #16
 8003386:	e024      	b.n	80033d2 <strcmp+0x2aa>
 8003388:	f002 04ff 	and.w	r4, r2, #255	; 0xff
 800338c:	fa82 f54c 	uadd8	r5, r2, ip
 8003390:	ea94 6513 	eors.w	r5, r4, r3, lsr #24
 8003394:	faa5 f58c 	sel	r5, r5, ip
 8003398:	d10a      	bne.n	80033b0 <strcmp+0x288>
 800339a:	b965      	cbnz	r5, 80033b6 <strcmp+0x28e>
 800339c:	f851 3b04 	ldr.w	r3, [r1], #4
 80033a0:	ea84 0402 	eor.w	r4, r4, r2
 80033a4:	ebb4 2f03 	cmp.w	r4, r3, lsl #8
 80033a8:	d109      	bne.n	80033be <strcmp+0x296>
 80033aa:	f850 2b04 	ldr.w	r2, [r0], #4
 80033ae:	e7eb      	b.n	8003388 <strcmp+0x260>
 80033b0:	ea4f 6313 	mov.w	r3, r3, lsr #24
 80033b4:	e00d      	b.n	80033d2 <strcmp+0x2aa>
 80033b6:	f015 0fff 	tst.w	r5, #255	; 0xff
 80033ba:	d105      	bne.n	80033c8 <strcmp+0x2a0>
 80033bc:	680b      	ldr	r3, [r1, #0]
 80033be:	ea4f 2212 	mov.w	r2, r2, lsr #8
 80033c2:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80033c6:	e004      	b.n	80033d2 <strcmp+0x2aa>
 80033c8:	f04f 0000 	mov.w	r0, #0
 80033cc:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80033d0:	4770      	bx	lr
 80033d2:	ba12      	rev	r2, r2
 80033d4:	ba1b      	rev	r3, r3
 80033d6:	fa82 f44c 	uadd8	r4, r2, ip
 80033da:	ea82 0403 	eor.w	r4, r2, r3
 80033de:	faa4 f58c 	sel	r5, r4, ip
 80033e2:	fab5 f485 	clz	r4, r5
 80033e6:	fa02 f204 	lsl.w	r2, r2, r4
 80033ea:	fa03 f304 	lsl.w	r3, r3, r4
 80033ee:	ea4f 6012 	mov.w	r0, r2, lsr #24
 80033f2:	e8fd 4504 	ldrd	r4, r5, [sp], #16
 80033f6:	eba0 6013 	sub.w	r0, r0, r3, lsr #24
 80033fa:	4770      	bx	lr

080033fc <_wctomb_r>:
 80033fc:	b430      	push	{r4, r5}
 80033fe:	4c06      	ldr	r4, [pc, #24]	; (8003418 <_wctomb_r+0x1c>)
 8003400:	4d06      	ldr	r5, [pc, #24]	; (800341c <_wctomb_r+0x20>)
 8003402:	6824      	ldr	r4, [r4, #0]
 8003404:	6b64      	ldr	r4, [r4, #52]	; 0x34
 8003406:	2c00      	cmp	r4, #0
 8003408:	bf08      	it	eq
 800340a:	462c      	moveq	r4, r5
 800340c:	f8d4 40e0 	ldr.w	r4, [r4, #224]	; 0xe0
 8003410:	46a4      	mov	ip, r4
 8003412:	bc30      	pop	{r4, r5}
 8003414:	4760      	bx	ip
 8003416:	bf00      	nop
 8003418:	2000000c 	.word	0x2000000c
 800341c:	20000438 	.word	0x20000438

08003420 <__ascii_wctomb>:
 8003420:	b121      	cbz	r1, 800342c <__ascii_wctomb+0xc>
 8003422:	2aff      	cmp	r2, #255	; 0xff
 8003424:	d804      	bhi.n	8003430 <__ascii_wctomb+0x10>
 8003426:	700a      	strb	r2, [r1, #0]
 8003428:	2001      	movs	r0, #1
 800342a:	4770      	bx	lr
 800342c:	4608      	mov	r0, r1
 800342e:	4770      	bx	lr
 8003430:	238a      	movs	r3, #138	; 0x8a
 8003432:	6003      	str	r3, [r0, #0]
 8003434:	f04f 30ff 	mov.w	r0, #4294967295	; 0xffffffff
 8003438:	4770      	bx	lr
 800343a:	bf00      	nop

0800343c <Button_config>:
 800343c:	0000 0000 0000 0001 0000 0000               ............

08003448 <LED_config>:
 8003448:	0080 0000 0000 0001 0000 0000               ............

08003454 <_global_impure_ptr>:
 8003454:	0010 2000 0043 0000 4f50 4953 0058 0000     ... C...POSIX...
 8003464:	0000 0000 002e 0000                         ........

0800346c <_ctype_>:
 800346c:	2000 2020 2020 2020 2020 2828 2828 2028     .         ((((( 
 800347c:	2020 2020 2020 2020 2020 2020 2020 2020                     
 800348c:	8820 1010 1010 1010 1010 1010 1010 1010      ...............
 800349c:	0410 0404 0404 0404 0404 1004 1010 1010     ................
 80034ac:	1010 4141 4141 4141 0101 0101 0101 0101     ..AAAAAA........
 80034bc:	0101 0101 0101 0101 0101 0101 1010 1010     ................
 80034cc:	1010 4242 4242 4242 0202 0202 0202 0202     ..BBBBBB........
 80034dc:	0202 0202 0202 0202 0202 0202 1010 1010     ................
 80034ec:	0020 0000 0000 0000 0000 0000 0000 0000      ...............
	...
